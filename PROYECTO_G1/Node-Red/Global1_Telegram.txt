[
    {
        "id": "a15f261.24a1bd8",
        "type": "tab",
        "label": "TELEGRAM",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cda38e19.5f671",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "mensaje respuesta temperatura/humedad al usuario",
        "func": "/*\nEn función de la petición del usuario, devolvemos solo temperatura, humedad o ambas, si se ha pulsado /temperatura,/humedad o /consulta.\nObtenemos el chatid desde la variable de tipo flow usuario y ya en función de lo indicado, se monta un tipo de mensaje u otro, recogido en los if's\n\n\n*/\nvar temp=msg.payload[0].DHT11.temp\nvar hum= msg.payload[0].DHT11.hum\nvar fecha=msg.payload[0].date\nvar temperatura= flow.get('Temperatura');\nvar humedad= flow.get('Humedad')\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nif(temperatura==1 && humedad===0)\n{\n\nmsg.payload.content=\"La temperatura es de \"+temp+\"ºC.\\nEste dato fue obtenido el \"+fecha+\"\\n\";\n}\n\nif(humedad==1 && temperatura===0)\n{\n    \n  msg.payload.content=\"La humedad relativa es del \"+hum+\"%.\\nEste dato fue obtenido el \"+fecha+\"\\n\";\n  \n    \n}\nif(temperatura==1 && humedad==1)\n{\n    \n    msg.payload.content=\"La temperatura es de \"+temp+\"ºC y la humedad relativa es del \"+hum+\"%.\\nEstos datos fueron registrados el \"+fecha+\"\\n\";\n    \n    \n}\n\nflow.set('Humedad',0)\nflow.set('Temperatura',0)\n//tras contestar, reseteamos ambas variables.\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1680,
        "y": 740,
        "wires": [
            [
                "e6fbffbf.d77bf"
            ]
        ]
    },
    {
        "id": "58533797.631c58",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/Temperatura",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 130,
        "y": 660,
        "wires": [
            [
                "e16c1553.03c688"
            ],
            [
                "3fc69c37.6bed64"
            ]
        ]
    },
    {
        "id": "2f353f76.5c62e",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/help",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "outputs": 2,
        "x": 110,
        "y": 140,
        "wires": [
            [
                "5e9c5b5.3689da4"
            ],
            []
        ]
    },
    {
        "id": "bdb7f995.e5dd98",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 770,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "618495e6.aab03c",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/apaga",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 150,
        "y": 4000,
        "wires": [
            [
                "8b9a2c95.86452"
            ],
            [
                "8bf7ef79.41173"
            ]
        ]
    },
    {
        "id": "a1a75cfb.8715b",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Identifica si llega mensaje de intensidad",
        "func": "/*\nEn esta función hay 5 salidas, correspondiente a cada uno de los Switch\nSi se pide encender el switch 1, saldrá por msg1, si se pide encender el 2, por msg2... y así sucesivamente\nEn caso de una petición de todos, por cada mensaje aparecerá la orden indicada.\nAlbergamos el campo payload en un nuevo campo en cada mensaje, denominado telegram,\npara poder responder posteriormente a la confirmación emitida mediante MQTT desde la ESP.\n\nAdemás, indicamos que es una orden para que se procese en la función posterior.\nSe emplea la función de tipo flow numled para así, tras la respuesta del usuario(0-100)\npoder mandar la orden indicada al led indicado.\n*/\nvar intensidad= msg.payload.content\nmsg6={}\nif(flow.get('NumLed')>0 && flow.get('NumLed')<7)\n{\nif(intensidad>=0 && intensidad <=100)\n{\n    NumeroLed=flow.get('NumLed');\n    var id = String(new Date().getTime());\n    msg6.telegram=msg.payload;\n    msg1={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\nif(NumeroLed===1){\n    msg1.payload={\"level\":intensidad,\"id\":id};\n    msg1.id=id\n    msg1.orden=true;\n    msg1.telegram=msg6.telegram\n    \n}\nelse if(NumeroLed==2){\n    \n    msg2.payload={\"level\":intensidad,\"id\":id};\n    msg2.id=id;\n    msg2.orden=true;\n    msg2.telegram=msg6.telegram\n    \n}\nelse if(NumeroLed==3){\n    \n    msg3.payload={\"level\":intensidad,\"id\":id};\n    msg3.id=id\n    msg3.orden=true;\n    msg3.telegram=msg6.telegram\n    \n\n}\nelse if(NumeroLed===4){\n    \n    msg4.payload={\"level\":intensidad,\"id\":id};\n    msg4.id=id\n    msg4.orden=true;\n    msg4.telegram=msg6.telegram\n    \n    \n}\n\n\nelse if(NumeroLed==5){\n    \n    msg5.payload={\"level\":intensidad,\"id\":id};\n    msg5.id=id\n    msg5.orden=true;\n    msg5.telegram=msg6.telegram\n    \n\n}\n\n\nelse if(NumeroLed==6){\n    \n    msg5.payload={\"level\":intensidad,\"id\":id};\n    msg5.id=id;\n    msg5.orden=true;\n    msg5.telegram=msg6.telegram\n    msg1=msg5\n    msg2=msg5\n    msg3=msg5\n    msg4=msg5\n    \n\n}\n\n\nreturn[msg1,msg2,msg3,msg4,msg5,msg6]\n}\n}\n\n\n\n",
        "outputs": 5,
        "noerr": 0,
        "x": 440,
        "y": 4200,
        "wires": [
            [
                "5e697378.b7f39c",
                "4407cfb3.402a2"
            ],
            [
                "73d6194d.1e0928",
                "4407cfb3.402a2"
            ],
            [
                "66fbef3e.4dce1",
                "4407cfb3.402a2"
            ],
            [
                "77c3425.9c157bc",
                "4407cfb3.402a2"
            ],
            [
                "466b3650.934fe8",
                "4407cfb3.402a2"
            ]
        ]
    },
    {
        "id": "7e50cf7d.687be",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Control del LED PRINCIPAL",
        "info": "",
        "x": 480,
        "y": 3580,
        "wires": []
    },
    {
        "id": "5e9c5b5.3689da4",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "mensaje bienvenida",
        "func": "//En esta función se recoge el mensaje de bienvenida al usuario. Tomamos el nombre del usuario\n// en telegram para que el bot tenga un trato más formal y sea algo más cercano.\n// Se le muestran los distintos tipos de comandos que engloba el trabajo.\n\nif(msg.payload.content.substring(0,1)!=\"/\")\n{\n msg.payload.content=\"¡Hola \"+msg.originalMessage.from.first_name+\" soy un bot ejecutado en NodeRED diseñado por el Grupo 1 de  Informática Industrial! Puedo responderte a estos comandos:\\n\";\n msg.payload.content+=\"/led - Te indico los distintos comandos relacionados con el control del estado del LED\\n\";\n msg.payload.content+=\"/Switch - Te indico los distintos comandos relacionados con el control del estado del Switch\\n\";\n msg.payload.content+=\"/Sensores - Te indico los distintos comandos relacionados con los sensores que tenemos disponibles\\n\";\n msg.payload.content+=\"/ListaComandos - Te indico todos los comandos disponibles.\\n\";\n msg.payload.content+=\"/ComandosRobot - Te indico todos los comandos relacionados con el control del robot PIERO\\n\";\n if(global.get(\"TemperaturaMIN\")>-20)\n{\n}\nelse\n{//fijamos la temperaturas y humedades de aviso\n global.set(\"TemperaturaMIN\",10)\n global.set(\"TemperaturaMAX\",30)\n global.set(\"HumedadMIN\",30)\n global.set(\"HumedadMAX\",90)\n global.set(\"CambiandoTMIN\",0)\n global.set(\"CambiandoTMAX\",0)\n global.set(\"CambiandoHMIN\",0)\n global.set(\"CambiandoHMAX\",0)\n}\n return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 120,
        "wires": [
            [
                "bdb7f995.e5dd98"
            ]
        ]
    },
    {
        "id": "cafc5562.bfc888",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 4630,
        "y": 4120,
        "wires": [
            []
        ]
    },
    {
        "id": "20123dde.ef8322",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "",
        "func": "msg.payload={};\n\nmsg.payload.chatId=-1001354631151;\nmsg.payload.type=\"message\";\nmsg.payload.content=\"El bot publica correctamente\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 4390,
        "y": 4100,
        "wires": [
            [
                "cafc5562.bfc888"
            ]
        ]
    },
    {
        "id": "c488825d.08b6b",
        "type": "inject",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 4160,
        "y": 4100,
        "wires": [
            [
                "20123dde.ef8322"
            ]
        ]
    },
    {
        "id": "7904773b.c47108",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/Humedad",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 120,
        "y": 840,
        "wires": [
            [
                "e16c1553.03c688"
            ],
            [
                "e2e98162.963fb"
            ]
        ]
    },
    {
        "id": "4020affc.17e7d",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 4740,
        "wires": [
            [
                "4407cfb3.402a2",
                "f3172b3a.71afb8",
                "6ce7217a.af17"
            ]
        ]
    },
    {
        "id": "e6fbffbf.d77bf",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 2070,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "12eb8769.4e1d69",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "CHAT DIFUSIÓN TELEGRAM",
        "info": "",
        "x": 4380,
        "y": 3960,
        "wires": []
    },
    {
        "id": "413ebb6b.1c34a4",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/consulta",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 120,
        "y": 740,
        "wires": [
            [
                "e16c1553.03c688"
            ],
            [
                "3fc69c37.6bed64",
                "e2e98162.963fb"
            ]
        ]
    },
    {
        "id": "e2e98162.963fb",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Indica Orden Humedad",
        "func": "//Filtro la base de datos y almaceno el chatId\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n}\nflow.set('Usuario',msg.payload.chatId)\nflow.set('ESP',msg.payload.content)\nflow.set('Humedad',1)\nmsg.sort = {\"date\" : -1};\nmsg.limit = 1;\n//guardamos la id del usuario, guardamos la esp que quiere consultar, e indicamos en la\n//variable de tipo flow humdad, que queremos consultar la humedad. Además ordenamos de mas reciente\n//a mas antiguo y nos quedamos con el ultimo mensaje.\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 840,
        "wires": [
            [
                "a9c05dec.f7066"
            ]
        ]
    },
    {
        "id": "a8c30016.80149",
        "type": "telegram receiver",
        "z": "a15f261.24a1bd8",
        "name": "uWubot",
        "bot": "cf6b5cb5.3cc93",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 150,
        "y": 4220,
        "wires": [
            [
                "a1a75cfb.8715b"
            ],
            []
        ]
    },
    {
        "id": "a37369d3.1027c8",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/Sensores",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "outputs": 2,
        "x": 120,
        "y": 200,
        "wires": [
            [
                "28d3ea47.9e38f6"
            ],
            []
        ]
    },
    {
        "id": "28d3ea47.9e38f6",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Sensores info",
        "func": "//Función donde se le informa al usuario de los distintos comandos relacionados con los sensores.\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan informacion sobre los sensores. \\n\";\n msg.payload.content+=\"/Temperatura - te indica el último dato respecto a la temperatura registrada por el DHT-11. ¡Puedes elegir la placa desde la cual realizas la consulta!\\n\";\n msg.payload.content+=\"/AjustarTemperaturaMinima - te permito ajustar la temperatura mínima de aviso registrada por el DHT-11\\n\";\n  msg.payload.content+=\"/AjustarTemperaturaMaxima - te permito ajustar la temperatura máxima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/Humedad    - te indica el último dato respecto a la humedad registrada por el DHT-11. Al igual que en Temperatura... ¡también puedes elegir la placa donde realizar la consulta!\\n\";\n msg.payload.content+=\"/AjustarHumedadMinima   - te permito ajustar la humedad mínima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/AjustarHumedadMaxima   - te permito ajustar la humedad máxima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/Reset   - te permito ajustar los valores de aviso, tanto de temperatura como de humedad, a los definidos por defecto.\\n\";\n msg.payload.content+=\"/consulta   - te indico simultaneamente el último dato registrado por cada sensor. ¡Recuerda especificarme la placa!\\n\";\n msg.payload.content+=\"/ConsultaHistorica - te permito realizar una consulta con respecto a días atrás, donde te informaré sobre distintos aspectos de la humedad y la temperatura registrados en el periodo que me indiques.\\n\"\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 200,
        "wires": [
            [
                "bdb7f995.e5dd98"
            ]
        ]
    },
    {
        "id": "392f6365.e61aec",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/ListaComandos",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "outputs": 2,
        "x": 120,
        "y": 260,
        "wires": [
            [
                "18ef7a13.0f0806"
            ],
            []
        ]
    },
    {
        "id": "18ef7a13.0f0806",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Lista Comandos",
        "func": "// Lista de comandos relacionados con sensores, led y switches. El resto en comandos de robots. Además se aporta un breve comentario explicativo sobre cada uno de ellos.\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico todos los comandos de los que dispongo... Usa este poder sabiamente. \\n\";\n msg.payload.content+=\"/Sensores - te indico los distintos comandos relacionados con los sensores que tenemos disponibles\\n\";\n msg.payload.content+=\"/Temperatura - te indica el último dato respecto a la temperatura registrada por el DHT-11\\n\";\n msg.payload.content+=\"/AjustarTemperaturaMinima - te permito ajustar la temperatura mínima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/AjustarTemperaturaMaxima - te permito ajustar la temperatura máxima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/Humedad    - te indica el último dato respecto a la humedad registrada por el DHT-11\\n\";\n msg.payload.content+=\"/AjustarHumedadMinima   - te permito ajustar la humedad mínima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/AjustarHumedadMaxima   - te permito ajustar la humedad máxima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/Reset   - te permito ajustar los valores de aviso, tanto de temperatura como de humedad, a los definidos por defecto.\\n\";\n msg.payload.content+=\"/consulta   - te indico simultaneamente el último dato registrado por cada sensor.\\n\";\n msg.payload.content+=\"/led - te indico los distintos comandos relacionados con el control del estado del LED\\n\";\n msg.payload.content+=\"/Switch - te indico los distintos comandos relacionados con el control del estado del Switch\\n\";\n msg.payload.content+=\"/enciende - enciende el led rojo a la intensidad que me indiques\\n\";\n msg.payload.content+=\"/apaga    - apaga el led rojo\\n\";\n msg.payload.content+=\"/enciendeSwitch - enciende el Switch a maxima intensidad\\n\";\n msg.payload.content+=\"/apagaSwitch    - apaga el Switch\\n\";\n msg.payload.content+=\"/estado   - te indico el último estado del led, indicando 0 que esta apagado, y 100 que esta encendido con maxima luminosidad.\\n\";\n msg.payload.content+=\"/estadoSwitch   - te indico el ultimo estado del Switch\\n\";\n msg.payload.content+=\"/ConsultaHistorica - te permito realizar una consulta con respecto a dias atras, donde te informaré sobre distintos aspectos de la humedad y la temperatura registrados en el periodo que me indiques.\\n\"\n msg.payload.content+=\"/ComandosRobot - te muestro los distintos comandos relacionados con el control del robot en una lista aparte.\\n\";\n\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 260,
        "wires": [
            [
                "bdb7f995.e5dd98"
            ]
        ]
    },
    {
        "id": "1df09c79.433b34",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Control Led",
        "func": "// Se muestran los comandos relacionados con el control del led.\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te ayudan a controlar el estado del led. \\n\";\n msg.payload.content+=\"/enciende - Enciendo el led de la placa que me indiques, ¡a la intensidad que quieras!\\n\";\n msg.payload.content+=\"/apaga    - Apago el led de la placa que me indiques... ¡Incluso puedo apagarlos todos!\\n\";\n msg.payload.content+=\"/estado   - Te indico el último estado del led de la placa que quieras, indicando 0 que esta apagado, y 100 que esta encendido con máxima luminosidad.\\n\";\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 380,
        "wires": [
            [
                "bdb7f995.e5dd98"
            ]
        ]
    },
    {
        "id": "fea5e1f7.75644",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/led",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "outputs": 2,
        "x": 110,
        "y": 400,
        "wires": [
            [
                "1df09c79.433b34"
            ],
            []
        ]
    },
    {
        "id": "c818e656.d3bba8",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 1970,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "3519dc08.1467b4",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/ConsultaHistorica",
        "command": "/ConsultaHistorica",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 150,
        "y": 1500,
        "wires": [
            [
                "96e0a2d8.2ceb7",
                "9c0752dd.d2e1f"
            ],
            [
                "3ffd4b71.4eda64"
            ]
        ]
    },
    {
        "id": "96e0a2d8.2ceb7",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta placa",
        "func": "// En esta función, al pulsar el usuario el comando, se le mostrará un teclado ilustrativo donde podrá pulsar la opción que desee seleccionar.\n// Además, se le envía una cuestión. Este teclado solo aparecerá en el siguiente mensaje, tras responder se borra.\n\n/*\n//La variable flow placa sirve para poder distinguir las placas. Cuando se pulsa de nuevo Consulta Histórica,\nlo que se hace es resetear dicha variable, y la variable \"avanza\" se pone a 0, que servirá posteriormente para dejar \npaso a la consulta a realizar\n\n*/\nflow.set('Placa',\"Ninguna\")\nflow.set('Avanza',0)\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['PLACA1','PLACA2'],\n      ['PLACA3'],\n      ['PLACA4','PLACA5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Con respecto a qué placa le gustaría realizar la consulta?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 470,
        "y": 1500,
        "wires": [
            [
                "5e061ffc.a05bc"
            ]
        ]
    },
    {
        "id": "5e061ffc.a05bc",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 760,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "f5f79e7a.2c96c",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Respondemos a la antigüedad indicada + placa recibida",
        "func": "// fecha por defecto es hoy\nContinua=flow.get('Avanza')\nhayplaca=flow.get('Placa')\nmensaje=msg.payload.content\nvar placa\n\n//si se ha respondido correctamente, se entra en la condición para acceder a la consulta.\nif(mensaje ==\"Ayer\" || mensaje==\"Hoy\" || mensaje==\"Hace dos dias\" || mensaje==\"Hace siete dias\")\n{\nif(Continua==1 && hayplaca!=\"Ninguna\" )\n{\n    if (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\nvar now_ms = new Date().getTime();\nvar ahora = new Date();\nvar ms_per_minute = 60000;\nvar desde2;\n\n//Albergamos las placas en la base de datos como placa:1,2... por tanto lo ajustamos a la variable.\nif(flow.get('Placa')=='PLACA1')\n{\n  placa=1  \n}\nelse if(flow.get('Placa')=='PLACA2')\n{\n    \n    placa=2\n}\nelse if(flow.get('Placa')=='PLACA3')\n{\n    \n    placa=3\n}\nelse if(flow.get('Placa')=='PLACA4')\n{\n    \n    placa=4\n}\nelse if(flow.get('Placa')=='PLACA5')\n{\n    \n    placa=5\n}\n\n\n    \n    if(msg.payload.content === 'Ayer') {\n        desde2=ahora.getTime()-ms_per_minute*1440; //un dia tiene 1440 minutos\n    }\n    else if(msg.payload.content==='Hoy'){\n        \n        desde2=ahora;\n    }\n    else if(msg.payload.content === 'Hace dos dias')     {\n        desde2=ahora.getTime()-ms_per_minute*1440*2; //un dia tiene 1440 minutos. Dos dias, el doble. \n    }\n    else if(msg.payload.content === 'Hace siete dias')   {\n        desde2=ahora.getTime()-ms_per_minute*1440*7 //numero de min de 1 dia * 7 dias\n    }\n}\n\n\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(desde2);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\n//REalizamos la consulta, preparando la agregación. Obtendremos datos desde el dia de inicio hasta el final indicado\n//donde obtenemos valores maximos y minimos de humedad y temperatura.\n\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final },\"ESP_.placa\":placa } }, //realizamos el find por fecha y por numero de placa\n    { \"$project\": {\n        \"temperatura\": \"$DHT11.temp\",\n        \"humedad\":\"$DHT11.hum\"\n        }\n    },\n    { \"$group\": {\n        \"_id\": 0,\n        \"Tmedia\":{\"$avg\":\"$temperatura\"},\n        \"Tmax\":  {\"$max\":\"$temperatura\"},\n        \"Tmin\":  {\"$min\":\"$temperatura\"},\n        \"Hmedia\":{\"$avg\":\"$humedad\"},\n        \"Hmax\":  {\"$max\":\"$humedad\"},\n        \"Hmin\":  {\"$min\":\"$humedad\"},\n        \"datos\": {\"$sum\":1}\n    }}\n];\n\nreturn msg;\n\n}\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 1760,
        "wires": [
            [
                "f60114b5.de1c28"
            ]
        ]
    },
    {
        "id": "747c15a.64e26ec",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "mensaje respuesta agreg",
        "func": "var tmedia=msg.payload[0].Tmedia\nvar tmax= msg.payload[0].Tmax\nvar tmin= msg.payload[0].Tmin\nvar hmedia=msg.payload[0].Hmedia\nvar hmax= msg.payload[0].Hmax\nvar hmin= msg.payload[0].Hmin\nvar datos= msg.payload[0].datos\n//Montamos el mensaje de respuesta al usuario y lo enviamos, obteniendo de nuevo la id del usuario de la variable de tipo flow usuario.\nmsg.payload.chatId=flow.get('Usuario2' || 0);\nmsg.payload.type=\"message\";\nmsg.payload.content=\"La temperatura media es de \"+tmedia+\"ºC.\\nLa temperatura máxima fue de \"+tmax+\"ºC y la mínima fue de \"+tmin+\"ºC.\\nRespecto a la humedad, la humedad media es del \"+hmedia+\"%. La humedad máxima fue de \"+hmax+\"% y la humedad mínima fue del \"+hmin+\"%. Se han consultado un total de \"+datos+\" datos.\\n\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1590,
        "y": 1760,
        "wires": [
            [
                "c818e656.d3bba8"
            ]
        ]
    },
    {
        "id": "9c0752dd.d2e1f",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "// almaceno el chatId\nflow.set('Usuario2',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "7c01539.f9d65ac",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/start",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 1,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "5e9c5b5.3689da4"
            ]
        ]
    },
    {
        "id": "c6d2b6ba.64a6b8",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/ComandosRobot",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "outputs": 2,
        "x": 140,
        "y": 320,
        "wires": [
            [
                "8b1e2b4c.e88048"
            ],
            []
        ]
    },
    {
        "id": "8b9a2c95.86452",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Mostramos teclado led",
        "func": "// En esta función, al pulsar el usuario el comando, se le mostrará un teclado ilustrativo donde podrá pulsar la opción que desee seleccionar.\n// Además, se le envía una cuestión. Este teclado solo aparecerá en el siguiente mensaje, tras responder se borra.\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Led1','Led2'],\n      ['Led3','Led4'],\n      ['Led5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué led desea apagar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 380,
        "y": 4000,
        "wires": [
            [
                "69f80049.f781c"
            ]
        ]
    },
    {
        "id": "69f80049.f781c",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 720,
        "y": 3700,
        "wires": [
            []
        ]
    },
    {
        "id": "5e697378.b7f39c",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 1190,
        "y": 3820,
        "wires": []
    },
    {
        "id": "8bf7ef79.41173",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Respondemos a la peticion ",
        "func": "msg6={}\n\n/*\nEn esta función hay 5 salidas, correspondiente a cada uno de los leds\nSi se pide apagar el led 1, saldrá por msg1, si se pide encender el 2, por msg2... y así sucesivamente\nEn caso de una petición de todos, por cada mensaje aparecerá la orden indicada.\nAlbergamos el campo payload en un nuevo campo en cada mensaje, denominado telegram,\npara poder responder posteriormente a la confirmación emitida mediante MQTT desde la ESP.\n\nAdemás, indicamos que es una orden para que se procese en la función posterior.\n*/\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    msg6.telegram=msg.payload\n    var id = String(new Date().getTime()); //guardamos la id para identificar al usuario.\n    msg1={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\n    \n    \n    \n    if(msg.payload.content === 'Led1') {\n        \n        msg1.payload={\"level\":0,\"id\":id};\n       // flow.set('NumLed',1)\n        msg1.orden=true;\n        msg1.id=id\n        msg1.telegram=msg6.telegram\n    }\n    else if(msg.payload.content === 'Led2')     {\n        msg2.payload={\"level\":0,\"id\":id};\n      //  flow.set('NumLed',2)\n        msg2.orden=true;\n        msg2.id=id\n        msg2.telegram=msg6.telegram\n        \n    }\n    else if(msg.payload.content === 'Led3')   {\n        msg3.payload={\"level\":0,\"id\":id};\n      //  flow.set('NumLed',3)\n        msg3.orden=true;\n        msg3.id=id\n        msg3.telegram=msg6.telegram\n    }\n    else if(msg.payload.content === 'Led4')   {\n    \n        msg4.payload={\"level\":0,\"id\":id};\n      //  flow.set('NumLed',4)\n        msg4.orden=true;\n        msg4.id=id\n        msg4.telegram=msg6.telegram\n    }\n    else if(msg.payload.content === 'Led5')   {\n        msg5.payload={\"level\":0,\"id\":id};\n     //   flow.set('NumLed',5)\n        msg5.orden=true;\n        msg5.id=id\n        msg5.telegram=msg6.telegram\n    }\n    else if(msg.payload.content === 'Todos')   {\n        msg5.payload={\"level\":0,\"id\":id};\n     //   flow.set('NumLed',6)\n        msg5.orden=true;\n        msg5.id=id\n        msg5.telegram=msg6.telegram\n        msg1=msg5\n        msg2=msg5\n        msg3=msg5\n        msg4=msg5\n    }\n    \n    return [msg1,msg2,msg3,msg4,msg5]\n}\n\n\n\n\n\n",
        "outputs": 5,
        "noerr": 0,
        "x": 400,
        "y": 4100,
        "wires": [
            [
                "5e697378.b7f39c",
                "4407cfb3.402a2"
            ],
            [
                "73d6194d.1e0928",
                "4407cfb3.402a2"
            ],
            [
                "66fbef3e.4dce1",
                "4407cfb3.402a2"
            ],
            [
                "77c3425.9c157bc",
                "4407cfb3.402a2"
            ],
            [
                "466b3650.934fe8",
                "4407cfb3.402a2"
            ]
        ]
    },
    {
        "id": "73d6194d.1e0928",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 1190,
        "y": 3880,
        "wires": []
    },
    {
        "id": "66fbef3e.4dce1",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 1190,
        "y": 3940,
        "wires": []
    },
    {
        "id": "77c3425.9c157bc",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 1190,
        "y": 4000,
        "wires": []
    },
    {
        "id": "466b3650.934fe8",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 1190,
        "y": 4060,
        "wires": []
    },
    {
        "id": "d470ad2a.faaf",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "CONTROL MOVIMIENTO DEL ROBOT",
        "info": "",
        "x": 2710,
        "y": 40,
        "wires": []
    },
    {
        "id": "f59f82cf.1301a",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 1690,
        "y": 3800,
        "wires": [
            []
        ]
    },
    {
        "id": "d9d39bf0.9f7618",
        "type": "mongodb in",
        "z": "a15f261.24a1bd8",
        "mongodb": "5ead47f6.defdd8",
        "name": "",
        "collection": "_DATOS",
        "operation": "find",
        "x": 1280,
        "y": 740,
        "wires": [
            [
                "cda38e19.5f671"
            ]
        ]
    },
    {
        "id": "c24f03dc.43cae",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "FUNCIONES PRESENTACIÓN E INTRODUCCIÓN AL USUARIO",
        "info": "",
        "x": 430,
        "y": 40,
        "wires": []
    },
    {
        "id": "8de1e92d.6d1808",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "PARTE RELACIONADAS CON LOS COMANDOS DE LOS SENSORES Y CÓMO HA DE ACTUAR",
        "info": "",
        "x": 420,
        "y": 580,
        "wires": []
    },
    {
        "id": "c5ff4114.dd18e",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 780,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "e16c1553.03c688",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Mostramos teclado led",
        "func": "// En esta función, al pulsar el usuario el comando, se le mostrará un teclado ilustrativo donde podrá pulsar la opción que desee seleccionar.\n// Además, se le envía una cuestión. Este teclado solo aparecerá en el siguiente mensaje, tras responder se borra.\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['ESP1','ESP2'],\n      ['ESP3'],\n      ['ESP4','ESP5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true //esto indica que es un teclado que aparece solo una vez\n  })\n};\n\nmsg.payload.content = '¿Con respecto a qué ESP querría realizar la consulta?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 460,
        "y": 660,
        "wires": [
            [
                "c5ff4114.dd18e"
            ]
        ]
    },
    {
        "id": "3fc69c37.6bed64",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Indica Orden Temperatura/Humedad",
        "func": "//Filtro la base de datos y almaceno el chatId\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n}\nflow.set('Usuario',msg.payload.chatId)\n//Almacenamos en la variable de tipo flow la id del usuario\nflow.set('ESP',msg.payload.content)\n//guardamos en la variable de tipo flow llamada ESP la esp a la cual queremos realizar la consulta\nflow.set('Temperatura',1)\n//indicamos que se quiere saber la temperatura.\nmsg.sort = {\"date\" : -1};\n//los ordenamos desde mas reciente a mas antiguo\nmsg.limit = 1;\n//nos quedamos con el ultimo mensaje\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 740,
        "wires": [
            [
                "a9c05dec.f7066"
            ]
        ]
    },
    {
        "id": "71e9f95f.1454c8",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Consultar estado del SWITCH",
        "info": "",
        "x": 200,
        "y": 2240,
        "wires": []
    },
    {
        "id": "244b20d5.a47a4",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/apagaSwitch",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 150,
        "y": 2640,
        "wires": [
            [
                "5ef5fe17.4f248"
            ],
            [
                "b7cd7e36.a7417"
            ]
        ]
    },
    {
        "id": "5ef5fe17.4f248",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Mostramos teclado switch",
        "func": "// En esta función, al pulsar el usuario el comando, se le mostrará un teclado ilustrativo donde podrá pulsar la opción que desee seleccionar.\n// Además, se le envía una cuestión. Este teclado solo aparecerá en el siguiente mensaje, tras responder se borra.\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Switch1','Switch2'],\n      ['Switch3','Switch4'],\n      ['Switch5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué switch desea apagar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 430,
        "y": 2600,
        "wires": [
            [
                "f2175111.614de"
            ]
        ]
    },
    {
        "id": "f2175111.614de",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 720,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "b7cd7e36.a7417",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Respondemos apagar switch",
        "func": "msg6={} //Creamos la variable \n/*\nEn esta función hay 5 salidas, correspondiente a cada uno de los Switch\nSi se pide apagar el switch 1, saldrá por msg1, si se pide encender el 2, por msg2... y así sucesivamente\nEn caso de una petición de todos, por cada mensaje aparecerá la orden indicada.\nAlbergamos el campo payload en un nuevo campo en cada mensaje, denominado telegram,\npara poder responder posteriormente a la confirmación emitida mediante MQTT desde la ESP.\n\nAdemás, indicamos que es una orden para que se procese en la función posterior.\n*/\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    msg6.telegram=msg.payload\n    msg1={}\n    msg2={}\n    msg3={} //Creamos los mensajes y los vaciamos.\n    msg4={}\n    msg5={}\n    var id = String(new Date().getTime()); //tomamos la id para responder al usuario correcto.\n    if(msg.payload.content === 'Switch1') { \n        \n        flow.set('Num',1)\n        msg1.payload={\"level\":0,\"id\":id};\n        msg1.orden=true\n        msg1.telegram=msg6.telegram\n        msg1.id=id;\n        \n    }\n    else if(msg.payload.content === 'Switch2')     {\n        msg2.payload={\"level\":0,\"id\":id};\n        flow.set('Num',2)\n        msg2.orden=true\n        msg2.telegram=msg6.telegram\n        msg2.id=id;\n    }\n    else if(msg.payload.content === 'Switch3')   {\n        msg3.payload={\"level\":0,\"id\":id};\n        flow.set('Num',3)\n        msg3.orden=true\n        msg3.telegram=msg6.telegram\n        msg3.id=id;\n    }\n    else if(msg.payload.content === 'Switch4')   {\n         msg4.payload={\"level\":0,\"id\":id};\n        flow.set('Num',4)\n        msg4.orden=true\n        msg4.telegram=msg6.telegram\n        msg4.id=id;\n    }\n    else if(msg.payload.content === 'Switch5')   {\n        msg5.payload={\"level\":0,\"id\":id};\n        flow.set('Num',5)\n        msg5.orden=true\n        msg5.telegram=msg6.telegram\n        msg5.id=id;\n    }\n    else if(msg.payload.content === 'Todos')   {\n        msg5.payload={\"level\":0,\"id\":id};\n        flow.set('Num',6)\n        msg5.orden=true\n        msg5.telegram=msg6.telegram\n        msg5.id=id;\n        msg1=msg5\n        msg2=msg5\n        msg3=msg5\n        msg4=msg5;\n    }\n    \n    return [msg1,msg2,msg3,msg4,msg5]\n}\n//}\n\n\n\n\n\n",
        "outputs": 5,
        "noerr": 0,
        "x": 440,
        "y": 2700,
        "wires": [
            [
                "ad275486.d43ff8",
                "f9c20de3.0db5b"
            ],
            [
                "59aaee39.881cc",
                "f9c20de3.0db5b"
            ],
            [
                "957d8ec4.4b1e9",
                "f9c20de3.0db5b"
            ],
            [
                "87ba5980.398408",
                "f9c20de3.0db5b"
            ],
            [
                "af783b7b.d052c8",
                "f9c20de3.0db5b"
            ]
        ]
    },
    {
        "id": "59aaee39.881cc",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 1200,
        "y": 2720,
        "wires": []
    },
    {
        "id": "ad275486.d43ff8",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 1200,
        "y": 2660,
        "wires": []
    },
    {
        "id": "957d8ec4.4b1e9",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 1200,
        "y": 2780,
        "wires": []
    },
    {
        "id": "87ba5980.398408",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 1200,
        "y": 2840,
        "wires": []
    },
    {
        "id": "af783b7b.d052c8",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 1200,
        "y": 2900,
        "wires": []
    },
    {
        "id": "28c25800.d79a38",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 1710,
        "y": 3000,
        "wires": [
            []
        ]
    },
    {
        "id": "3ffd4b71.4eda64",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos dia pregunta",
        "func": "\nhayplaca=flow.get('Placa')\n\n//si en placa hay ninguna, entramos\nif(hayplaca==\"Ninguna\")\n{\nflow.set('Placa',msg.payload.content)\n\n//guardamos la respuesta de la placa que se quiere consultar en la variable de tipo flow Placa.\n//Ahora realizamos la pregunta de con cuanta antigüedad desea realizar la consulta.\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Ayer','Hoy'],\n      ['Hace siete dias'],\n      ['Hace dos dias']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Con qué antigüedad desea realizar la consulta?';\nmsg.payload.options = opts;\nflow.set('Avanza',1)\n//indicamos que avanza es 1 para que tras la respuesta, se acceda a la base de datos.\nreturn [ msg ];\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 460,
        "y": 1580,
        "wires": [
            [
                "5bb4abad.4b2804"
            ]
        ]
    },
    {
        "id": "6b90c24.057073c",
        "type": "telegram receiver",
        "z": "a15f261.24a1bd8",
        "name": "uWubot",
        "bot": "cf6b5cb5.3cc93",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 110,
        "y": 1760,
        "wires": [
            [
                "f5f79e7a.2c96c"
            ],
            []
        ]
    },
    {
        "id": "5bb4abad.4b2804",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 760,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "276717f1.9166f8",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/enciendeSwitch",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 160,
        "y": 2940,
        "wires": [
            [
                "36ebe695.39dd6a"
            ],
            [
                "9293a080.74879"
            ]
        ]
    },
    {
        "id": "36ebe695.39dd6a",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Mostramos teclado switch",
        "func": "// En esta función, al pulsar el usuario el comando, se le mostrará un teclado ilustrativo donde podrá pulsar la opción que desee seleccionar.\n// Además, se le envía una cuestión. Este teclado solo aparecerá en el siguiente mensaje, tras responder se borra.\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Switch1','Switch2'],\n      ['Switch3','Switch4'],\n      ['Switch5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué switch desea encender?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 430,
        "y": 2980,
        "wires": [
            [
                "9f2f6d1d.a7f9f"
            ]
        ]
    },
    {
        "id": "9f2f6d1d.a7f9f",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 720,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "413551d2.a1e7e",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Indica al canal de difusión que se ha encendido/apagado un switch",
        "func": "\n var status=msg.payload.Switch\n if (status===true)\n        {\n            status=\"Encendido\"\n        }\n        if(status===false)\n        {\n            status=\"Apagado\"\n        }\n        var topic=msg.topic\n        var numeroInfoS\n        if(topic==\"infind/GRUPO1/ESP1/switch/status\")//si viene por este topic, significa que es el Switch1.. y asi para todos\n        {\n            numeroInfoS=1;\n        }\n        else if(topic==\"infind/GRUPO1/ESP2/switch/status\")\n        {\n            \n            numeroInfoS=2;\n        }\n        else if(topic==\"infind/GRUPO1/ESP3/switch/status\")\n        {\n            \n            numeroInfoS=3;\n        }\n        else if(topic==\"infind/GRUPO1/ESP4/switch/status\")\n        {\n            \n            numeroInfoS=4;\n        }\n        else if(topic==\"infind/GRUPO1/ESP5/switch/status\")\n        {\n            \n            numeroInfoS=5;\n        }\n        //Indicamos el chatID del canal de difusión, y formateamos el mensaje.\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"El estado del Switch\"+numeroInfoS+\" es:\"+status+\" \\n\";\n    return msg;\n        \n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 3140,
        "wires": [
            [
                "28c25800.d79a38"
            ]
        ]
    },
    {
        "id": "469d7b5.e29ee84",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3440,
        "y": 340,
        "wires": []
    },
    {
        "id": "6e9fe658.17e548",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3440,
        "y": 1220,
        "wires": []
    },
    {
        "id": "4a9c5e41.8a192",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3520,
        "y": 1900,
        "wires": []
    },
    {
        "id": "6977789b.802db8",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3400,
        "y": 2680,
        "wires": []
    },
    {
        "id": "a13e1d06.09164",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3500,
        "y": 3400,
        "wires": []
    },
    {
        "id": "f70e5e7e.97b17",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero1Manual",
        "command": "/Piero1Manual",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2730,
        "y": 160,
        "wires": [
            [
                "aa72c1f8.dae08",
                "179b3791.420798"
            ],
            []
        ]
    },
    {
        "id": "aa72c1f8.dae08",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\n//Creamos un teclado, en este caso un teclado que no se irá hasta que pulsemos el /salir.\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir1']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir1 -Salir del modo de conducción manual\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT1','3')\n//Ajustamos la variable de tipo flow ROBOT1 a 3, que actua como flag indicando que se ha activado el modo manual.\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3090,
        "y": 140,
        "wires": [
            [
                "b7c39bd5.c691e8"
            ]
        ]
    },
    {
        "id": "b7c39bd5.c691e8",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3800,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "687412ec.22184c",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Robot Movimiento",
        "func": "\n\nmodomanual=flow.get('ROBOT1')\n//Si estamos en modo manual, es decir, nuestra variable de tipo flow asociada al robot\n//tiene valor 3, accedemos aqui.\n/*\nDependiendo de la tecla pulsada, se codificará de distinta forma:\nW- orden será 8(procesado posteriormente en ESP)\nA - orden será 4\nD - orden será 6\nSTOP - orden será 0\nSalir - orden será 0, ya que al salir\nqueremos que nuestro robot también se pare.\n\n\n*/\nif(modomanual==3)\n{\n\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir1')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false; //Cuando pulsamos salir borramos el teclado predefinido de movimiento del robot.\n        flow.set('ROBOT1',0)\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3030,
        "y": 400,
        "wires": [
            [
                "db16094a.171178"
            ]
        ]
    },
    {
        "id": "179b3791.420798",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario3',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3020,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "db16094a.171178",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3460,
        "y": 400,
        "wires": []
    },
    {
        "id": "633df15f.fe15f",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Salir1",
        "command": "/Salir1",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2710,
        "y": 460,
        "wires": [
            [
                "caaee6e5.3fd708",
                "954c3921.e2a748"
            ],
            []
        ]
    },
    {
        "id": "caaee6e5.3fd708",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero1Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3090,
        "y": 540,
        "wires": [
            [
                "cf5924cd.c575e8"
            ]
        ]
    },
    {
        "id": "cf5924cd.c575e8",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3380,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "954c3921.e2a748",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario3',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3020,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "ea095960.4ec9e8",
        "type": "telegram receiver",
        "z": "a15f261.24a1bd8",
        "name": "uWubot",
        "bot": "cf6b5cb5.3cc93",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2710,
        "y": 380,
        "wires": [
            [
                "687412ec.22184c",
                "18c352cf.f356cd"
            ],
            []
        ]
    },
    {
        "id": "18c352cf.f356cd",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Modo Funcionamiento Robot",
        "func": "//En esta función nos encargamos de identificar qué modo vamos a emplear.\n//Si estamos en modo manual, mandaremos por json que \"modo\" es 1\n//Si fuera salir o automático, se mandarían respectivamente 0 y 2, que posteriormente se procesa en la ESP.\n//También se puede observar que vaciamos el mensaje, para una mayor claridad en la ESP.\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero1Manual\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir1\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero1Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3060,
        "y": 340,
        "wires": [
            [
                "469d7b5.e29ee84"
            ]
        ]
    },
    {
        "id": "65344f30.97477",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\n//Le indicamos al usuario que ha activado el modo automático\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir1 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario3' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3060,
        "y": 260,
        "wires": [
            [
                "6ecbfa75.e23ff4"
            ]
        ]
    },
    {
        "id": "31571a9a.0f1c16",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero1auto",
        "command": "/Piero1Automatico",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2730,
        "y": 240,
        "wires": [
            [
                "65344f30.97477",
                "179b3791.420798"
            ],
            []
        ]
    },
    {
        "id": "6ecbfa75.e23ff4",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3810,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6e1d4263.94fd6c",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/PIERO/Obstaculo",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 2820,
        "y": 740,
        "wires": [
            [
                "96ec412c.df065"
            ]
        ]
    },
    {
        "id": "96ec412c.df065",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3070,
        "y": 740,
        "wires": [
            [
                "255cc7bc.361488"
            ]
        ]
    },
    {
        "id": "255cc7bc.361488",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Obstáculos",
        "func": "/*\nSi nos llega que el campo Sensores[1] es izquierda, el obstáculo está a la izquierda\nSi nos llega un derecha, el obstáculo está a la derecha, y si nos llega un centro, está en el\ncentro.\n*/\nif(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario3' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario3' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\nelse if(msg.payload.Sensores[\"1\"]=='centro'){\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario3' || 0);\n    msg.payload.content=\"Se han detectado obstáculos por el centro. Evitalos!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n    \n \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3400,
        "y": 740,
        "wires": [
            [
                "6ecbfa75.e23ff4"
            ]
        ]
    },
    {
        "id": "582697d7.d46a88",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/led/status",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 230,
        "y": 4560,
        "wires": [
            [
                "b8c99e0d.32929"
            ]
        ]
    },
    {
        "id": "96813dd8.6024e",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/led/status",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 230,
        "y": 4620,
        "wires": [
            [
                "6a0014cf.5936ec"
            ]
        ]
    },
    {
        "id": "bbcc2ceb.1bf7",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/led/status",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 230,
        "y": 4680,
        "wires": [
            [
                "d4bc7b9c.8ca898"
            ]
        ]
    },
    {
        "id": "d5045df0.bdb02",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/led/status",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 230,
        "y": 4740,
        "wires": [
            [
                "4020affc.17e7d"
            ]
        ]
    },
    {
        "id": "1c7e64e6.4fc6eb",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/led/status",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 230,
        "y": 4800,
        "wires": [
            [
                "258c07ef.663cb8"
            ]
        ]
    },
    {
        "id": "dcf8822b.28c68",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero2Manual",
        "command": "/Piero2Manual",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2730,
        "y": 940,
        "wires": [
            [
                "68ecc551.6b9b0c",
                "45932af8.3614f4"
            ],
            []
        ]
    },
    {
        "id": "68ecc551.6b9b0c",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir2']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir2 -Salir del modo de conducción manual\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT2',3)\n//Ajustamos la variable de tipo flow ROBOT2 a 3, que actua como flag indicando que se ha activado el modo manual.\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3090,
        "y": 1000,
        "wires": [
            [
                "1f798357.bbc2ed"
            ]
        ]
    },
    {
        "id": "1f798357.bbc2ed",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3820,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "215762ae.62e75e",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Robot Movimiento",
        "func": "//Si estamos en modo manual, es decir, nuestra variable de tipo flow asociada al robot\n//tiene valor 3, accedemos aqui.\n/*\nDependiendo de la tecla pulsada, se codificará de distinta forma:\nW- orden será 8(procesado posteriormente en ESP)\nA - orden será 4\nD - orden será 6\nSTOP - orden será 0\nSalir - orden será 0, ya que al salir\nqueremos que nuestro robot también se pare.\n\n\n*/\ncosas=flow.get('ROBOT2')\nif(cosas==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir2')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        flow.set('ROBOT2',0)\n        return msg;\n        \n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3050,
        "y": 1280,
        "wires": [
            [
                "515b5e6b.eced2"
            ]
        ]
    },
    {
        "id": "45932af8.3614f4",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario4',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3020,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "515b5e6b.eced2",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3460,
        "y": 1280,
        "wires": []
    },
    {
        "id": "292e9e7c.a49282",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Salir2",
        "command": "/Salir2",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2710,
        "y": 1380,
        "wires": [
            [
                "ed91232b.dc2cf",
                "161b3d91.02d562"
            ],
            []
        ]
    },
    {
        "id": "ed91232b.dc2cf",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero2Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3110,
        "y": 1420,
        "wires": [
            [
                "338609ef.4027a6"
            ]
        ]
    },
    {
        "id": "338609ef.4027a6",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3380,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "161b3d91.02d562",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario4',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "4df402d1.8454bc",
        "type": "telegram receiver",
        "z": "a15f261.24a1bd8",
        "name": "uWubot",
        "bot": "cf6b5cb5.3cc93",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2710,
        "y": 1220,
        "wires": [
            [
                "215762ae.62e75e",
                "b886a7c7.1ae418"
            ],
            []
        ]
    },
    {
        "id": "b886a7c7.1ae418",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Modo Funcionamiento Robot",
        "func": "//En esta función nos encargamos de identificar qué modo vamos a emplear.\n//Si estamos en modo manual, mandaremos por json que \"modo\" es 1\n//Si fuera salir o automático, se mandarían respectivamente 0 y 2, que posteriormente se procesa en la ESP.\n//También se puede observar que vaciamos el mensaje, para una mayor claridad en la ESP.\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero2Manual\" || msg.originalMessage.text==\"/PieroManual@UwU87bot\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir2\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero2Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3080,
        "y": 1220,
        "wires": [
            [
                "6e9fe658.17e548"
            ]
        ]
    },
    {
        "id": "e3f1ba2d.22d998",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\n//Le indicamos al usuario que ha activado el modo automático\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir2 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario4' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3060,
        "y": 1100,
        "wires": [
            [
                "309346e0.afa9fa"
            ]
        ]
    },
    {
        "id": "bc92cdd0.0f687",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero2auto",
        "command": "/Piero2Automatico",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2730,
        "y": 1100,
        "wires": [
            [
                "e3f1ba2d.22d998",
                "45932af8.3614f4"
            ],
            []
        ]
    },
    {
        "id": "309346e0.afa9fa",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3830,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "70d7c1fa.3b42",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/PIERO/Obstaculo",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 2820,
        "y": 1520,
        "wires": [
            [
                "f5f04b6b.73e898"
            ]
        ]
    },
    {
        "id": "f5f04b6b.73e898",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3070,
        "y": 1520,
        "wires": [
            [
                "ed052ed0.58c8a"
            ]
        ]
    },
    {
        "id": "ed052ed0.58c8a",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Obstáculos",
        "func": "/*\nSi nos llega que el campo Sensores[1] es izquierda, el obstáculo está a la izquierda\nSi nos llega un derecha, el obstáculo está a la derecha, y si nos llega un centro, está en el\ncentro.\n*/\nif(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario4' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario4' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\nelse if(msg.payload.Sensores[\"1\"]=='centro'){\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario4' || 0);\n    msg.payload.content=\"Se han detectado obstáculos por el centro. Evitalos!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n    \n \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3300,
        "y": 1520,
        "wires": [
            [
                "309346e0.afa9fa"
            ]
        ]
    },
    {
        "id": "1c04780a.c61f68",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero3Manual",
        "command": "/Piero3Manual",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2730,
        "y": 1640,
        "wires": [
            [
                "172dc1cd.42b15e",
                "17b4b62d.346ada"
            ],
            []
        ]
    },
    {
        "id": "172dc1cd.42b15e",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir3']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir3 -Salir del modo de conducción manual.\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT3',3)\n//Ajustamos la variable de tipo flow ROBOT3 a 3, que actua como flag indicando que se ha activado el modo manual.\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3170,
        "y": 1720,
        "wires": [
            [
                "98c66f28.46e07"
            ]
        ]
    },
    {
        "id": "98c66f28.46e07",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3820,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "9954d62d.e52948",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Robot Movimiento",
        "func": "//Si estamos en modo manual, es decir, nuestra variable de tipo flow asociada al robot\n//tiene valor 3, accedemos aqui.\n/*\nDependiendo de la tecla pulsada, se codificará de distinta forma:\nW- orden será 8(procesado posteriormente en ESP)\nA - orden será 4\nD - orden será 6\nSTOP - orden será 0\nSalir - orden será 0, ya que al salir\nqueremos que nuestro robot también se pare.\n\n\n*/\nrobot=flow.get('ROBOT3')\nif(robot==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir3')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        flow.set('ROBOT3',0)\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3110,
        "y": 1980,
        "wires": [
            [
                "a1b0dc5f.00457"
            ]
        ]
    },
    {
        "id": "17b4b62d.346ada",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//almaceno el chatId\nflow.set('Usuario5',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3100,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "a1b0dc5f.00457",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3540,
        "y": 1980,
        "wires": []
    },
    {
        "id": "bd484816.dbaa48",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Salir3",
        "command": "/Salir3",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2710,
        "y": 2060,
        "wires": [
            [
                "c6f717b4.582438",
                "bddd3579.1a2d78"
            ],
            []
        ]
    },
    {
        "id": "c6f717b4.582438",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero3Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3170,
        "y": 2140,
        "wires": [
            [
                "c746277a.2b4438"
            ]
        ]
    },
    {
        "id": "c746277a.2b4438",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3820,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "bddd3579.1a2d78",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario5',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3100,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "d13ed157.7abd9",
        "type": "telegram receiver",
        "z": "a15f261.24a1bd8",
        "name": "uWubot",
        "bot": "cf6b5cb5.3cc93",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2710,
        "y": 1960,
        "wires": [
            [
                "9954d62d.e52948",
                "be5de9a5.be19a8"
            ],
            []
        ]
    },
    {
        "id": "be5de9a5.be19a8",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Modo Funcionamiento Robot",
        "func": "//En esta función nos encargamos de identificar qué modo vamos a emplear.\n//Si estamos en modo manual, mandaremos por json que \"modo\" es 1\n//Si fuera salir o automático, se mandarían respectivamente 0 y 2, que posteriormente se procesa en la ESP.\n//También se puede observar que vaciamos el mensaje, para una mayor claridad en la ESP.\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero3Manual\" || msg.originalMessage.text==\"/PieroManual@UwU87bot\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir3\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero3Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3140,
        "y": 1900,
        "wires": [
            [
                "4a9c5e41.8a192"
            ]
        ]
    },
    {
        "id": "3a2becab.579b94",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\n//Le indicamos al usuario que ha activado el modo automático\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir3 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario5' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3140,
        "y": 1820,
        "wires": [
            [
                "310fdba6.f92c34"
            ]
        ]
    },
    {
        "id": "b4b3349a.3b7158",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero3auto",
        "command": "/Piero3Automatico",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2730,
        "y": 1820,
        "wires": [
            [
                "3a2becab.579b94",
                "17b4b62d.346ada"
            ],
            []
        ]
    },
    {
        "id": "310fdba6.f92c34",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3830,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "50b7e1aa.c5e0a",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/PIERO/Obstaculo",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 2820,
        "y": 2260,
        "wires": [
            [
                "be7655bf.de4898"
            ]
        ]
    },
    {
        "id": "be7655bf.de4898",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3090,
        "y": 2260,
        "wires": [
            [
                "d8a84c6c.fa761"
            ]
        ]
    },
    {
        "id": "d8a84c6c.fa761",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Obstáculos",
        "func": "/*\nSi nos llega que el campo Sensores[1] es izquierda, el obstáculo está a la izquierda\nSi nos llega un derecha, el obstáculo está a la derecha, y si nos llega un centro, está en el\ncentro.\n*/\nif(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario5' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario5' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\nelse if(msg.payload.Sensores[\"1\"]=='centro'){\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario5' || 0);\n    msg.payload.content=\"Se han detectado obstáculos por el centro. Evitalos!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n    \n \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3480,
        "y": 2260,
        "wires": [
            [
                "310fdba6.f92c34"
            ]
        ]
    },
    {
        "id": "8de351d6.ed136",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero4Manual",
        "command": "/Piero4Manual",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2730,
        "y": 2460,
        "wires": [
            [
                "6a4a267e.97d858",
                "8154d9e3.6800f8"
            ],
            []
        ]
    },
    {
        "id": "6a4a267e.97d858",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir4']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir4 -Salir del modo de conducción manual.\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT4',3)\n//Ajustamos la variable de tipo flow ROBOT4 a 3, que actua como flag indicando que se ha activado el modo manual.\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3070,
        "y": 2560,
        "wires": [
            [
                "7151b32e.801cdc"
            ]
        ]
    },
    {
        "id": "7151b32e.801cdc",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3820,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "171f835.d34fe7d",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Robot Movimiento",
        "func": "//Si estamos en modo manual, es decir, nuestra variable de tipo flow asociada al robot\n//tiene valor 3, accedemos aqui.\n/*\nDependiendo de la tecla pulsada, se codificará de distinta forma:\nW- orden será 8(procesado posteriormente en ESP)\nA - orden será 4\nD - orden será 6\nSTOP - orden será 0\nSalir - orden será 0, ya que al salir\nqueremos que nuestro robot también se pare.\n\n\n*/\nrobot4= flow.get('ROBOT4')\nif(robot4==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir4')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        flow.set('ROBOT4',0)\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3010,
        "y": 2740,
        "wires": [
            [
                "79e689f4.0de998"
            ]
        ]
    },
    {
        "id": "8154d9e3.6800f8",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario6',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3000,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "79e689f4.0de998",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3420,
        "y": 2740,
        "wires": []
    },
    {
        "id": "f2d02a14.d13c58",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Salir4",
        "command": "/Salir4",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2710,
        "y": 2820,
        "wires": [
            [
                "306b5d77.8b0b02",
                "57cc2558.fe47cc"
            ],
            []
        ]
    },
    {
        "id": "306b5d77.8b0b02",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero4Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3060,
        "y": 2900,
        "wires": [
            [
                "cb8c0c12.a2a83"
            ]
        ]
    },
    {
        "id": "cb8c0c12.a2a83",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3820,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "57cc2558.fe47cc",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario6',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2990,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "67102ff7.3980e",
        "type": "telegram receiver",
        "z": "a15f261.24a1bd8",
        "name": "uWubot",
        "bot": "cf6b5cb5.3cc93",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2670,
        "y": 2700,
        "wires": [
            [
                "171f835.d34fe7d",
                "3e00601e.7ae52"
            ],
            []
        ]
    },
    {
        "id": "3e00601e.7ae52",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Modo Funcionamiento Robot",
        "func": "//En esta función nos encargamos de identificar qué modo vamos a emplear.\n//Si estamos en modo manual, mandaremos por json que \"modo\" es 1\n//Si fuera salir o automático, se mandarían respectivamente 0 y 2, que posteriormente se procesa en la ESP.\n//También se puede observar que vaciamos el mensaje, para una mayor claridad en la ESP.\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero4Manual\" || msg.originalMessage.text==\"/PieroManual@UwU87bot\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir4\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero4Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 2680,
        "wires": [
            [
                "6977789b.802db8"
            ]
        ]
    },
    {
        "id": "5d49ce09.5610f",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\n//Le indicamos al usuario que ha activado el modo automático\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir4 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario6' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 2620,
        "wires": [
            [
                "95ee5f35.ac1f7"
            ]
        ]
    },
    {
        "id": "52069063.4c18f",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero4auto",
        "command": "/Piero4Automatico",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2730,
        "y": 2540,
        "wires": [
            [
                "5d49ce09.5610f",
                "8154d9e3.6800f8"
            ],
            []
        ]
    },
    {
        "id": "95ee5f35.ac1f7",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3830,
        "y": 2620,
        "wires": [
            []
        ]
    },
    {
        "id": "3dd98ff5.246d5",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/PIERO/Obstaculo",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 2820,
        "y": 3020,
        "wires": [
            [
                "405b25d1.98e6dc"
            ]
        ]
    },
    {
        "id": "405b25d1.98e6dc",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3050,
        "y": 3020,
        "wires": [
            [
                "dd654f41.f2521"
            ]
        ]
    },
    {
        "id": "dd654f41.f2521",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Obstáculos",
        "func": "/*\nSi nos llega que el campo Sensores[1] es izquierda, el obstáculo está a la izquierda\nSi nos llega un derecha, el obstáculo está a la derecha, y si nos llega un centro, está en el\ncentro.\n*/\nif(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario6' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario6' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\n\nelse if(msg.payload.Sensores[\"1\"]=='centro'){\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario6' || 0);\n    msg.payload.content=\"Se han detectado obstáculos por el centro. Evitalos!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n    \n \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3360,
        "y": 3020,
        "wires": [
            [
                "95ee5f35.ac1f7"
            ]
        ]
    },
    {
        "id": "689f938.693016c",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero5Manual",
        "command": "/Piero5Manual",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2730,
        "y": 3160,
        "wires": [
            [
                "f8d68246.7bdd",
                "8bfe32b0.78255"
            ],
            []
        ]
    },
    {
        "id": "f8d68246.7bdd",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir5 -Salir del modo de conducción manual.\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT5',3)\n//Ajustamos la variable de tipo flow ROBOT5 a 3, que actua como flag indicando que se ha activado el modo manual.\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3130,
        "y": 3220,
        "wires": [
            [
                "9b6988ca.d1afc8"
            ]
        ]
    },
    {
        "id": "9b6988ca.d1afc8",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3820,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "4895c257.0d5c7c",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Robot Movimiento",
        "func": "//Si estamos en modo manual, es decir, nuestra variable de tipo flow asociada al robot\n//tiene valor 3, accedemos aqui.\n/*\nDependiendo de la tecla pulsada, se codificará de distinta forma:\nW- orden será 8(procesado posteriormente en ESP)\nA - orden será 4\nD - orden será 6\nSTOP - orden será 0\nSalir - orden será 0, ya que al salir\nqueremos que nuestro robot también se pare.\n\n\n*/\nrobot5=flow.get('ROBOT5')\nif(robot5==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir5')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3080,
        "y": 3480,
        "wires": [
            [
                "d85e39e.cf5fec8"
            ]
        ]
    },
    {
        "id": "8bfe32b0.78255",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario7',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3060,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "d85e39e.cf5fec8",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3520,
        "y": 3480,
        "wires": []
    },
    {
        "id": "4e51c991.066538",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Salir5",
        "command": "/Salir5",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2710,
        "y": 3560,
        "wires": [
            [
                "1429e6b0.e7b0c9",
                "1b5e73e.4e5948c"
            ],
            []
        ]
    },
    {
        "id": "1429e6b0.e7b0c9",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero5Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3140,
        "y": 3640,
        "wires": [
            [
                "8b3449a3.0d62f8"
            ]
        ]
    },
    {
        "id": "8b3449a3.0d62f8",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3820,
        "y": 3640,
        "wires": [
            []
        ]
    },
    {
        "id": "1b5e73e.4e5948c",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario7',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3070,
        "y": 3560,
        "wires": [
            []
        ]
    },
    {
        "id": "e0e46cd4.ea29a",
        "type": "telegram receiver",
        "z": "a15f261.24a1bd8",
        "name": "uWubot",
        "bot": "cf6b5cb5.3cc93",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2710,
        "y": 3400,
        "wires": [
            [
                "4895c257.0d5c7c",
                "f08ce823.c999c8"
            ],
            []
        ]
    },
    {
        "id": "f08ce823.c999c8",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\n//En esta función nos encargamos de identificar qué modo vamos a emplear.\n//Si estamos en modo manual, mandaremos por json que \"modo\" es 1\n//Si fuera salir o automático, se mandarían respectivamente 0 y 2, que posteriormente se procesa en la ESP.\n//También se puede observar que vaciamos el mensaje, para una mayor claridad en la ESP.\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero5Manual\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir5\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero5Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3100,
        "y": 3400,
        "wires": [
            [
                "a13e1d06.09164"
            ]
        ]
    },
    {
        "id": "27ebfa6f.df0126",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\n//Le indicamos al usuario que ha activado el modo automático\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir5 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario7' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3100,
        "y": 3300,
        "wires": [
            [
                "9666ba02.f3c378"
            ]
        ]
    },
    {
        "id": "b0c81ecf.ae065",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero5auto",
        "command": "/Piero5Automatico",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 2730,
        "y": 3280,
        "wires": [
            [
                "27ebfa6f.df0126",
                "8bfe32b0.78255"
            ],
            []
        ]
    },
    {
        "id": "9666ba02.f3c378",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3830,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "a8963d1c.c87f",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/PIERO/Obstaculo",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 2820,
        "y": 3800,
        "wires": [
            [
                "85041378.64126"
            ]
        ]
    },
    {
        "id": "85041378.64126",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3050,
        "y": 3800,
        "wires": [
            [
                "efa8db84.861d28"
            ]
        ]
    },
    {
        "id": "efa8db84.861d28",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Obstáculos",
        "func": "/*\nSi nos llega que el campo Sensores[1] es izquierda, el obstáculo está a la izquierda\nSi nos llega un derecha, el obstáculo está a la derecha, y si nos llega un centro, está en el\ncentro.\n*/\nif(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario7' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario7' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\n\nelse if(msg.payload.Sensores[\"1\"]=='centro'){\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario7' || 0);\n    msg.payload.content=\"Se han detectado obstáculos por el centro. Evitalos!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n    \n \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3480,
        "y": 3800,
        "wires": [
            [
                "9666ba02.f3c378"
            ]
        ]
    },
    {
        "id": "c28f2950.851a68",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Robot1 info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te proporcionan control el robot. \\n\";\n msg.payload.content+=\"/Piero1Manual - te permite controlar el robot 1 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero1Automatico   -Activa el modo de funcionamiento automático del PIERO 1, donde él solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir1    - al activarlo, PIERO 1 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 140,
        "wires": [
            [
                "d9ddf250.bb0a8"
            ]
        ]
    },
    {
        "id": "8b1e2b4c.e88048",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Robots info",
        "func": "// Mensaje que engloba los comandos relacionados con los robots, divididos en categorías según el robot controlado por el ESP\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan control sobre los robots. \\n\";\n msg.payload.content+=\"/Robot1 -te indico los comandos relacionados con el PIERO 1\\n\";\n  msg.payload.content+=\"/Robot2 -te indico los comandos relacionados con el PIERO 2\\n\";\n msg.payload.content+=\"/Robot3 -te indico los comandos relacionados con el PIERO 3\\n\";\n  msg.payload.content+=\"/Robot4 -te indico los comandos relacionados con el PIERO 4\\n\";\n  msg.payload.content+=\"/Robot5 -te indico los comandos relacionados con el PIERO 5\\n\";\n   msg.payload.content+=\"/Robot6 -te indico los comandos relacionados con el PIERO 6\\n\";\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "bdb7f995.e5dd98"
            ]
        ]
    },
    {
        "id": "b0d145f2.cff4b8",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Robot1",
        "command": "/Robot1",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "outputs": 2,
        "x": 1530,
        "y": 140,
        "wires": [
            [
                "c28f2950.851a68"
            ],
            []
        ]
    },
    {
        "id": "6e766aac.03bd44",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Robot2",
        "command": "/Robot2",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "outputs": 2,
        "x": 1530,
        "y": 200,
        "wires": [
            [
                "8a3f62f1.82ad9"
            ],
            []
        ]
    },
    {
        "id": "286d73ee.6bfa7c",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Robot3",
        "command": "/Robot3",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "outputs": 2,
        "x": 1530,
        "y": 260,
        "wires": [
            [
                "eac4afee.513c1"
            ],
            []
        ]
    },
    {
        "id": "655cae47.29cb5",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Robot4",
        "command": "/Robot4",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "outputs": 2,
        "x": 1530,
        "y": 320,
        "wires": [
            [
                "32c6c8a5.47a528"
            ],
            []
        ]
    },
    {
        "id": "97e5c3b6.108b7",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Robot5",
        "command": "/Robot5",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "outputs": 2,
        "x": 1530,
        "y": 380,
        "wires": [
            [
                "c3513636.e329a8"
            ],
            []
        ]
    },
    {
        "id": "8a3f62f1.82ad9",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Robot2 info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan control sobre el robot. \\n\";\n msg.payload.content+=\"/Piero2Manual - te permite controlar el robot 2 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero2Automatico   -Activa el modo de funcionamiento automático del PIERO 2, donde él solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir2    - al activarlo, PIERO 2 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 200,
        "wires": [
            [
                "d9ddf250.bb0a8"
            ]
        ]
    },
    {
        "id": "eac4afee.513c1",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Robot3 info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan control sobre los robot. \\n\";\n msg.payload.content+=\"/Piero3Manual - te permite controlar el robot 3 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero3Automatico   -Activa el modo de funcionamiento automático del PIERO 3, donde él solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir3    - al activarlo, PIERO 3 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 260,
        "wires": [
            [
                "d9ddf250.bb0a8"
            ]
        ]
    },
    {
        "id": "32c6c8a5.47a528",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Robot4 info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan control sobre el robot. \\n\";\n msg.payload.content+=\"/Piero4Manual - te permite controlar el robot 4 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero4Automatico   -Activa el modo de funcionamiento automático del PIERO 4, donde él solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir4    - al activarlo, PIERO 4 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 320,
        "wires": [
            [
                "d9ddf250.bb0a8"
            ]
        ]
    },
    {
        "id": "c3513636.e329a8",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Robot5 info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan control sobre el robot. \\n\";\n msg.payload.content+=\"/Piero5Manual - te permite controlar el robot 5 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero5Automatico   -Activa el modo de funcionamiento automático del PIERO 5, donde él solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir5    - al activarlo, PIERO 5 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 380,
        "wires": [
            [
                "d9ddf250.bb0a8"
            ]
        ]
    },
    {
        "id": "d9ddf250.bb0a8",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 2070,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "d4bc7b9c.8ca898",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 4680,
        "wires": [
            [
                "4407cfb3.402a2",
                "848fb4dc.ebb5c8",
                "6ce7217a.af17"
            ]
        ]
    },
    {
        "id": "6a0014cf.5936ec",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 4620,
        "wires": [
            [
                "4407cfb3.402a2",
                "96837ff.f623e8",
                "6ce7217a.af17"
            ]
        ]
    },
    {
        "id": "b8c99e0d.32929",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 4560,
        "wires": [
            [
                "4407cfb3.402a2",
                "e3dfd4b9.c6eb58",
                "6ce7217a.af17"
            ]
        ]
    },
    {
        "id": "258c07ef.663cb8",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 4800,
        "wires": [
            [
                "4407cfb3.402a2",
                "34c1990c.0a0d76",
                "6ce7217a.af17"
            ]
        ]
    },
    {
        "id": "4407cfb3.402a2",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Registra orden/espera respuesta",
        "func": "/*\nEsta función recibe dos tipos de mensajes. Cuando se ordena un cambio en el led, \nque se trata en la parte then del if. Y cuando se recibe la confirmación del cambio, \nque se trata en la parte else del if.\nEn el primer caso (then), programamos un timeout que dará un mensaje \nde error si no se recibe la confirmación. Y guardamos la información necesaria para \nhacer las gestiones posteriores.\nEn el segundo caso (else) se compruena si había una confirmación pendiente, se cancela el \ntemporizador de timeout y se da el mensaje correspondiente.\n\nEsto es un ejemplo de uso de temporizadores y almacenamiento en el contexto de un nodo función.\nTambién se muestra cómo asignar un estado al nodo.\n*/\n\n//Estas funciones son básicamente por si hubiera usuarios simultáneos\nfunction localiza_operacion(lista_operaciones, id)\n{\n    for(var i=0; i<lista_operaciones.length; i++)\n    {\n        if(lista_operaciones[i].id==id) return i;\n    }\n    return -1;\n}\n\nfunction elimina_operacion(lista_operaciones, index)\n{\n    lista_operaciones.splice(index,1);\n    context.set(\"lista_operaciones\",lista_operaciones);\n}\n\n\nif(msg.orden)\n{ // es una orden\n    var id_operacion = msg.id;\n    node.status({fill:\"yellow\", shape:\"ring\", text:\"Wait\"}); // estado del nodo\n    var id_timeout= setTimeout(function(id){    // timeout de 3 segundos\n        // is expira el temporizador, el dispositivo no responde\n        node.warn(\"ATENCION: Operacion \"+id+\" timeout\")\n        node.status({fill:\"red\", shape:\"ring\", text:\"Timeout\"});\n        //busca operación en la lista\n        var lista_operaciones = context.get(\"lista_operaciones\") || [];\n        var index=localiza_operacion(lista_operaciones, id)\n        if(index>=0)\n        {\n            msg.payload=lista_operaciones[index].telegram_info; // restaurar info telegram (chatid)\n            msg.payload.content=\"Error timeout: Se ha producido un error de conexión, verifique el estado del dispositivo (id:\"+id+\")\";\n            elimina_operacion(lista_operaciones, index);\n            node.send(msg); // envía mensaje a telegram\n        }\n        else\n            node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\") \n    }, 10000, id_operacion); \n    //añade operación a la lista\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var nueva_operacion = \n      {\"id\":id_operacion, \"id_timeout\":id_timeout,\"telegram_info\":msg.telegram};\n    lista_operaciones.push(nueva_operacion);\n    context.set(\"lista_operaciones\",lista_operaciones);\n    node.warn(\"Registrada nueva operación \"+id_operacion);\n    msg.payload=msg.telegram;\n    msg.payload.content=\"Se ha enviado la petición (id:\"+id_operacion+\")\";\n    return msg;\n}\nelse\n{ // es una confirmación\n    //busca operación con esta id en la lista\n    var id=msg.payload.id;\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var index=localiza_operacion(lista_operaciones, id)\n    if(index>=0) // orden localizada\n    {\n        clearTimeout(lista_operaciones[index].id_timeout); // cancelo el temporizador\n        var status=msg.payload.led;\n        var topic=msg.topic\n        var numeroInfoLed\n        if(topic==\"infind/GRUPO1/ESP1/led/status\") //si viene por este topic, significa que es la respuesta asociada al cambio de estado del Led1\n        {\n            numeroInfoLed=1;\n        }\n        else if(topic==\"infind/GRUPO1/ESP2/led/status\")//si viene por este topic, significa que es la respuesta asociada al cambio de estado del Led2\n        {\n            \n            numeroInfoLed=2;\n        }\n        else if(topic==\"infind/GRUPO1/ESP3/led/status\")//si viene por este topic, significa que es la respuesta asociada al cambio de estado del Led3\n        {\n            \n            numeroInfoLed=3;\n        }\n        else if(topic==\"infind/GRUPO1/ESP4/led/status\")//si viene por este topic, significa que es la respuesta asociada al cambio de estado del Led4\n        {\n            \n            numeroInfoLed=4;\n        }\n        else if(topic==\"infind/GRUPO1/ESP5/led/status\")//si viene por este topic, significa que es la respuesta asociada al cambio de estado del Led5\n        {\n            numeroInfoLed=5;\n            \n        }\n        \n        msg.payload=lista_operaciones[index].telegram_info; // restaura info telegram (chatid)\n        msg.payload.content=\"Se ha procesado correctamente la orden (id:\"+id+\"). El estado del LED\"+numeroInfoLed+\" actual es: \"+status+\" (indicando 0 apagado, 100 máxima intensidad. Si ha pedido que se encendiera o que se apagara y ha obtenido el resultado contrario, revise la lógica con la que trabajan los actuadores de la placa desde el dashboard).\";\n        elimina_operacion(lista_operaciones, index)\n        node.warn(\"Procesada respuesta operación \"+id);\n        setTimeout(function(){  // cambio estado del nodo 1.5s después para que se vea el estado anterior\n            node.status({fill:\"green\", shape:\"ring\", text:\"Ok\"});\n        }, 10000);\n        flow.set('NumLed',0)\n        return msg; // enviar mensaje a telegram\n    }\n    else\n        node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\")\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 4120,
        "wires": [
            [
                "f59f82cf.1301a"
            ]
        ]
    },
    {
        "id": "8e155fdf.af394",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "FUNCIONES PRESENTACIÓN E INTRODUCCIÓN AL USUARIO QUE INFORMAN SOBRE EL ROBOT",
        "info": "",
        "x": 1830,
        "y": 40,
        "wires": []
    },
    {
        "id": "aac2b0c1.f5c85",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "PARTE RELACIONADA CON EL PIERO 1",
        "info": "",
        "x": 3200,
        "y": 40,
        "wires": []
    },
    {
        "id": "15c85e63.297e12",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "PARTE RELACIONADA CON EL PIERO 2",
        "info": "",
        "x": 2820,
        "y": 820,
        "wires": []
    },
    {
        "id": "e3dfd4b9.c6eb58",
        "type": "change",
        "z": "a15f261.24a1bd8",
        "name": "guarda estado1",
        "rules": [
            {
                "t": "set",
                "p": "estado1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 4560,
        "wires": [
            []
        ]
    },
    {
        "id": "96837ff.f623e8",
        "type": "change",
        "z": "a15f261.24a1bd8",
        "name": "guarda estado2",
        "rules": [
            {
                "t": "set",
                "p": "estado2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 4620,
        "wires": [
            []
        ]
    },
    {
        "id": "848fb4dc.ebb5c8",
        "type": "change",
        "z": "a15f261.24a1bd8",
        "name": "guarda estado3",
        "rules": [
            {
                "t": "set",
                "p": "estado3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 4680,
        "wires": [
            []
        ]
    },
    {
        "id": "f3172b3a.71afb8",
        "type": "change",
        "z": "a15f261.24a1bd8",
        "name": "guarda estado4",
        "rules": [
            {
                "t": "set",
                "p": "estado4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 4740,
        "wires": [
            []
        ]
    },
    {
        "id": "34c1990c.0a0d76",
        "type": "change",
        "z": "a15f261.24a1bd8",
        "name": "guarda estado5",
        "rules": [
            {
                "t": "set",
                "p": "estado5",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 4800,
        "wires": [
            []
        ]
    },
    {
        "id": "2310d3ca.68f35c",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/estado",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 150,
        "y": 3760,
        "wires": [
            [
                "2a16f67c.6557ba"
            ],
            [
                "22574457.80738c"
            ]
        ]
    },
    {
        "id": "2a16f67c.6557ba",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Mostramos teclado pregunta estado",
        "func": "// En esta función, al pulsar el usuario el comando, se le mostrará un teclado ilustrativo donde podrá pulsar la opción que desee seleccionar.\n// Además, se le envía una cuestión. Este teclado solo aparecerá en el siguiente mensaje, tras responder se borra.\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Led1','Led2'],\n      ['Led3','Led4'],\n      ['Led5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Sobre qué led querría consultar el estado?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 430,
        "y": 3700,
        "wires": [
            [
                "69f80049.f781c"
            ]
        ]
    },
    {
        "id": "22574457.80738c",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Respondemos a la petición",
        "func": "\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    var id=msg.payload.chatId\n    var contenido= msg.payload.content\n    if(contenido == \"Led1\") {\n        var estadin1=flow.get(\"estado1\")||{\"led\":\"No disponible\"}\n        msg.payload.content=\"El estado del Led1 actual es:\"+estadin1.led+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Led2\")     {\n        var estadin2=flow.get('estado2')|| {\"led\":\"No disponible\"}\n        msg.payload.content=\"El estado del Led2 actual es:\"+estadin2.led+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n        \n    }\n    else if(contenido == \"Led3\")   {\n       var estadin3=flow.get('estado3')||{\"led\":\"No disponible\"}\n        msg.payload.content=\"El estado del Led3 actual es:\"+estadin3.led+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Led4\")   {\n        var estadin4=flow.get(\"estado4\")||{\"led\":\"No disponible\"}\n        msg.payload.content=\"El estado del Led4 actual es:\"+estadin4.led+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Led5\")   {\n        var estadin5=flow.get('estado5')||{\"led\":\"No disponible\"}\n        msg.payload.content=\"El estado del Led5 actual es:\"+estadin5.led+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n   \n    \n    return msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 3800,
        "wires": [
            [
                "f59f82cf.1301a"
            ]
        ]
    },
    {
        "id": "f9c20de3.0db5b",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Registra orden/espera respuesta",
        "func": "/*\nEsta función recibe dos tipos de mensajes. Cuando se ordena un cambio en el switch, \nque se trata en la parte then del if. Y cuando se recibe la confirmación del cambio, \nque se trata en la parte else del if.\nEn el primer caso (then), programamos un timeout de 3 segundos que dará un mensaje \nde error si no se recibe la confirmación. Y guardamos la información necesaria para \nhacer las gestiones posteriores.\nEn el segundo caso (else) se compruena si había una confirmación pendiente, se cancela el \ntemporizador de timeout y se da el mensaje correspondiente.\n\n\n*/\n\n//Estas funciones son básicamente por si hubiera usuarios simultáneos\nfunction localiza_operacion(lista_operaciones, id)\n{\n    for(var i=0; i<lista_operaciones.length; i++)\n    {\n        if(lista_operaciones[i].id==id) return i;\n    }\n    return -1;\n}\n\nfunction elimina_operacion(lista_operaciones, index)\n{\n    lista_operaciones.splice(index,1);\n    context.set(\"lista_operaciones\",lista_operaciones);\n}\n\n\nif(msg.orden)\n{ // es una orden\n    var id_operacion = msg.id;\n    node.status({fill:\"yellow\", shape:\"ring\", text:\"Wait\"}); // estado del nodo\n    var id_timeout= setTimeout(function(id){    // timeout de 3 segundos\n        // is expira el temporizador, el dispositivo no responde\n        node.warn(\"ATENCION: Operacion \"+id+\" timeout\")\n        node.status({fill:\"red\", shape:\"ring\", text:\"Timeout\"});\n        //busca operación en la lista\n        var lista_operaciones = context.get(\"lista_operaciones\") || [];\n        var index=localiza_operacion(lista_operaciones, id)\n        if(index>=0)\n        {\n            msg.payload=lista_operaciones[index].telegram_info; // restaurar info telegram (chatid)\n            msg.payload.content=\"Error timeout: Se ha producido un error de conexión, verifique el estado del dispositivo (id:\"+id+\")\";\n            elimina_operacion(lista_operaciones, index);\n            node.send(msg); // envía mensaje a telegram\n        }\n        else\n            node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\") \n    }, 10000, id_operacion); \n    //añade operación a la lista\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var nueva_operacion = \n      {\"id\":id_operacion, \"id_timeout\":id_timeout,\"telegram_info\":msg.telegram};\n    lista_operaciones.push(nueva_operacion);\n    context.set(\"lista_operaciones\",lista_operaciones);\n    node.warn(\"Registrada nueva operación \"+id_operacion);\n    msg.payload=msg.telegram;\n    msg.payload.content=\"Se ha enviado la petición (id:\"+id_operacion+\")\";\n    return msg;\n}\nelse\n{ // es una confirmación\n    //busca operación con esta id en la lista\n    var id=msg.payload.id;\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var index=localiza_operacion(lista_operaciones, id)\n    if(index>=0) // orden localizada\n    {\n        clearTimeout(lista_operaciones[index].id_timeout); // cancelo el temporizador\n        var status=msg.payload.Switch\n        if (status===true) //realizamos una conversion para indicar encendido/apagado, es mas intuitivo para el usuario\n        {\n            status=\"Encendido\"\n        }\n        if(status===false)\n        {\n            status=\"Apagado\"\n        }\n        var topic=msg.topic\n        var numeroInfoS\n        if(topic==\"infind/GRUPO1/ESP1/switch/status\") //si viene por este topic, significa que es el Switch1\n        {\n            numeroInfoS=1;\n        }\n        else if(topic==\"infind/GRUPO1/ESP2/switch/status\")//si viene por este topic, significa que es el Switch2\n        {\n            \n            numeroInfoS=2;\n        }\n        else if(topic==\"infind/GRUPO1/ESP3/switch/status\")//si viene por este topic, significa que es el Switch3\n        {\n            \n            numeroInfoS=3;\n        }\n        else if(topic==\"infind/GRUPO1/ESP4/switch/status\")//si viene por este topic, significa que es el Switch4\n        {\n            \n            numeroInfoS=4;\n        }\n        else if(topic==\"infind/GRUPO1/ESP5/switch/status\")//si viene por este topic, significa que es el Switch5\n        {\n            \n            numeroInfoS=5;\n        }\n        \n        msg.payload=lista_operaciones[index].telegram_info; // restaura info telegram (chatid)\n        msg.payload.content=\"Se ha procesado correctamente la orden (id:\"+id+\"). El estado del SWITCH\"+numeroInfoS+\" actual es: \"+status+\"\";\n        elimina_operacion(lista_operaciones, index)\n        node.warn(\"Procesada respuesta operación \"+id);\n        setTimeout(function(){  // cambio estado del nodo después para que se vea el estado anterior\n            node.status({fill:\"green\", shape:\"ring\", text:\"Ok\"});\n        }, 10000);//timeout de 10 segundos\n        //flow.set('Num',0)\n        return msg; // enviar mensaje a telegram\n    }\n    else\n        node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\")\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 3000,
        "wires": [
            [
                "28c25800.d79a38"
            ]
        ]
    },
    {
        "id": "484d6b28.685154",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/switch/status",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 220,
        "y": 3200,
        "wires": [
            [
                "380dee2e.b5e3b2"
            ]
        ]
    },
    {
        "id": "6c5763bc.4463ec",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/switch/status",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 220,
        "y": 3260,
        "wires": [
            [
                "96d9182a.fef1a8"
            ]
        ]
    },
    {
        "id": "7f8406b7.bcb468",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/switch/status",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 220,
        "y": 3320,
        "wires": [
            [
                "425dcdd9.d07b54"
            ]
        ]
    },
    {
        "id": "9565530d.d71a9",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/switch/status",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 220,
        "y": 3380,
        "wires": [
            [
                "9bfe7bb.6cf0488"
            ]
        ]
    },
    {
        "id": "bb9e52a3.43464",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/switch/status",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 220,
        "y": 3440,
        "wires": [
            [
                "bc92e3ef.25461"
            ]
        ]
    },
    {
        "id": "380dee2e.b5e3b2",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 3200,
        "wires": [
            [
                "f9c20de3.0db5b",
                "6c338db2.d17324",
                "413551d2.a1e7e"
            ]
        ]
    },
    {
        "id": "96d9182a.fef1a8",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 569,
        "y": 3262,
        "wires": [
            [
                "f9c20de3.0db5b",
                "7abf8d54.c256f4",
                "413551d2.a1e7e"
            ]
        ]
    },
    {
        "id": "425dcdd9.d07b54",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 3320,
        "wires": [
            [
                "f9c20de3.0db5b",
                "c7eccda2.f99f6",
                "413551d2.a1e7e"
            ]
        ]
    },
    {
        "id": "9bfe7bb.6cf0488",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 3380,
        "wires": [
            [
                "f9c20de3.0db5b",
                "2eaa5128.c3f43e",
                "413551d2.a1e7e"
            ]
        ]
    },
    {
        "id": "bc92e3ef.25461",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 3440,
        "wires": [
            [
                "f9c20de3.0db5b",
                "faf5a027.6b9a7",
                "413551d2.a1e7e"
            ]
        ]
    },
    {
        "id": "6c338db2.d17324",
        "type": "change",
        "z": "a15f261.24a1bd8",
        "name": "guarda estadoSwitch1",
        "rules": [
            {
                "t": "set",
                "p": "estadoSwitch1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3200,
        "wires": [
            []
        ]
    },
    {
        "id": "7abf8d54.c256f4",
        "type": "change",
        "z": "a15f261.24a1bd8",
        "name": "guarda estadoSwitch2",
        "rules": [
            {
                "t": "set",
                "p": "estadoSwitch2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3260,
        "wires": [
            []
        ]
    },
    {
        "id": "c7eccda2.f99f6",
        "type": "change",
        "z": "a15f261.24a1bd8",
        "name": "guarda estadoSwitch3",
        "rules": [
            {
                "t": "set",
                "p": "estadoSwitch3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "2eaa5128.c3f43e",
        "type": "change",
        "z": "a15f261.24a1bd8",
        "name": "guarda estadoSwitch4",
        "rules": [
            {
                "t": "set",
                "p": "estadoSwitch4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3380,
        "wires": [
            []
        ]
    },
    {
        "id": "faf5a027.6b9a7",
        "type": "change",
        "z": "a15f261.24a1bd8",
        "name": "guarda estadoSwitch5",
        "rules": [
            {
                "t": "set",
                "p": "estadoSwitch5",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3440,
        "wires": [
            []
        ]
    },
    {
        "id": "c3beec2f.ff2f8",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 720,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "93615554.c0aa38",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/estadoSwitch",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 150,
        "y": 2420,
        "wires": [
            [
                "f6d4054c.2054e8"
            ],
            [
                "7caf4c32.b7ae44"
            ]
        ]
    },
    {
        "id": "f6d4054c.2054e8",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Mostramos teclado switch",
        "func": "// En esta función, al pulsar el usuario el comando, se le mostrará un teclado ilustrativo donde podrá pulsar la opción que desee seleccionar.\n// Además, se le envía una cuestión. Este teclado solo aparecerá en el siguiente mensaje, tras responder se borra.\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Switch1','Switch2'],\n      ['Switch3','Switch4'],\n      ['Switch5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Sobre qué switch querría consultar el estado?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 430,
        "y": 2340,
        "wires": [
            [
                "c3beec2f.ff2f8"
            ]
        ]
    },
    {
        "id": "7caf4c32.b7ae44",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Respondemos estado Switch",
        "func": "//tras la respuesta del usuario, se entra en esta función.\n\n\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    var id=msg.payload.chatId\n    var contenido= msg.payload.content\n    if(contenido == \"Switch1\") { //Si se ha respondido que se quiere conocer el estado del switch 1\n        var estadinS1=flow.get(\"estadoSwitch1\")||{\"Switch\":\"No disponible\"} //tomamos el ultimo valor recogido en switch, en caso de no conocerse, se informará que no se encuentra disponible.\n        if(estadinS1.Switch===true)\n        {\n            estadinS1.Switch=\"Encendido\" //realizamos una conversión de true a encendido y false a apagado para ser más claro al usuario. El resto de esta lógica se aplica al resto de respuestas.\n        }\n        else if(estadinS1.Switch===false)\n        {\n            estadinS1.Switch=\"Apagado\"\n        }\n        msg.payload.content=\"El estado del Switch1 actual es: \"+estadinS1.Switch+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Switch2\")     {\n        var estadinS2=flow.get(\"estadoSwitch2\")||{\"Switch\":\"No disponible\"}\n         if(estadinS2.Switch===true)\n        {\n            estadinS2.Switch=\"Encendido\"\n        }\n        else if(estadinS2.Switch===false)\n        {\n            estadinS2.Switch=\"Apagado\"\n        }\n        msg.payload.content=\"El estado del Switch2 actual es: \"+estadinS2.Switch+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n        \n    }\n    else if(contenido == \"Switch3\")   {\n       var estadinS3=flow.get(\"estadoSwitch3\")||{\"Switch\":\"No disponible\"}\n        if(estadinS3.Switch===true)\n        {\n            estadinS3.Switch=\"Encendido\"\n        }\n        else if(estadinS3.Switch===false)\n        {\n            estadinS3.Switch=\"Apagado\"\n        }\n        msg.payload.content=\"El estado del Switch3 actual es: \"+estadinS3.Switch+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Switch4\")   {\n        var estadinS4=flow.get(\"estadoSwitch4\")||{\"Switch\":\"No disponible\"}\n         if(estadinS4.Switch===true)\n        {\n            estadinS4.Switch=\"Encendido\"\n        }\n        else if(estadinS4.Switch===false)\n        {\n            estadinS4.Switch=\"Apagado\"\n        }\n        msg.payload.content=\"El estado del Switch4 actual es: \"+estadinS4.Switch+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Switch5\")   {\n        var estadinS5=flow.get('estadoSwitch5')||{\"Switch\":\"No disponible\"}\n         if(estadinS5.Switch===true)\n        {\n            estadinS5.Switch=\"Encendido\"\n        }\n        else if(estadinS5.Switch===false)\n        {\n            estadinS5.Switch=\"Apagado\"\n        }\n        msg.payload.content=\"El estado del Switch5 actual es: \"+estadinS5.Switch+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n   \n    \n    return msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 2460,
        "wires": [
            [
                "ae3f0848.d9c918"
            ]
        ]
    },
    {
        "id": "ae3f0848.d9c918",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 730,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "9293a080.74879",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Respondemos encender switch",
        "func": "msg6={}\n//if(flow.get('Num')>0 && flow.get('Num')<7)\n//{\n/*\nEn esta función hay 5 salidas, correspondiente a cada uno de los Switch\nSi se pide encender el switch 1, saldrá por msg1, si se pide encender el 2, por msg2... y así sucesivamente\nEn caso de una petición de todos, por cada mensaje aparecerá la orden indicada.\nAlbergamos el campo payload en un nuevo campo en cada mensaje, denominado telegram,\npara poder responder posteriormente a la confirmación emitida mediante MQTT desde la ESP.\n\nAdemás, indicamos que es una orden para que se procese en la función posterior.\n*/\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    msg6.telegram=msg.payload\n    msg1={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\n    var id = String(new Date().getTime());\n    if(msg.payload.content === 'Switch1') {\n        \n        flow.set('Num',1)\n        msg1.payload={\"level\":1,\"id\":id};\n        msg1.orden=true\n        msg1.telegram=msg6.telegram\n        msg1.id=id;\n        \n    }\n    else if(msg.payload.content === 'Switch2')     {\n        msg2.payload={\"level\":1,\"id\":id};\n        flow.set('Num',2)\n        msg2.orden=true\n        msg2.telegram=msg6.telegram\n        msg2.id=id;\n    }\n    else if(msg.payload.content === 'Switch3')   {\n        msg3.payload={\"level\":1,\"id\":id};\n        flow.set('Num',3)\n        msg3.orden=true\n        msg3.telegram=msg6.telegram\n        msg3.id=id;\n    }\n    else if(msg.payload.content === 'Switch4')   {\n         msg4.payload={\"level\":1,\"id\":id};\n        flow.set('Num',4)\n        msg4.orden=true\n        msg4.telegram=msg6.telegram\n        msg4.id=id;\n    }\n    else if(msg.payload.content === 'Switch5')   {\n        msg5.payload={\"level\":1,\"id\":id};\n        flow.set('Num',5)\n        msg5.orden=true\n        msg5.telegram=msg6.telegram\n        msg5.id=id;\n    }\n    else if(msg.payload.content === 'Todos')   {\n        msg5.payload={\"level\":1,\"id\":id};\n        flow.set('Num',6)\n        msg5.orden=true\n        msg5.telegram=msg6.telegram\n        msg5.id=id;\n        msg1=msg5\n        msg2=msg5\n        msg3=msg5\n        msg4=msg5;\n    }\n    \n    return [msg1,msg2,msg3,msg4,msg5]\n}\n//}\n\n\n\n\n",
        "outputs": 5,
        "noerr": 0,
        "x": 450,
        "y": 2820,
        "wires": [
            [
                "ad275486.d43ff8",
                "f9c20de3.0db5b"
            ],
            [
                "59aaee39.881cc",
                "f9c20de3.0db5b"
            ],
            [
                "957d8ec4.4b1e9",
                "f9c20de3.0db5b"
            ],
            [
                "87ba5980.398408",
                "f9c20de3.0db5b"
            ],
            [
                "af783b7b.d052c8",
                "f9c20de3.0db5b"
            ]
        ]
    },
    {
        "id": "e11225bb.9c13d8",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/Switch",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "outputs": 2,
        "x": 110,
        "y": 460,
        "wires": [
            [
                "79cb5615.1c0a48"
            ],
            []
        ]
    },
    {
        "id": "79cb5615.1c0a48",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Control Switch",
        "func": "// Se muestran los comandos relacionados con el control del Switch.\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te ayudan a controlar el estado del Switch. \\n\";\nmsg.payload.content+=\"/enciendeSwitch - enciende el Switch de la placa que me indiques a máxima intensidad.\\n\";\n msg.payload.content+=\"/apagaSwitch    - apaga el Switch de la placa que me indiques.\\n\";\n msg.payload.content+=\"/estadoSwitch   - te indico el último estado del Switch que me especifiques.\\n\";\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 440,
        "wires": [
            [
                "bdb7f995.e5dd98"
            ]
        ]
    },
    {
        "id": "5c97db89.4130c4",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "PARTE RELACIONADA CON EL PIERO 5",
        "info": "",
        "x": 3200,
        "y": 3080,
        "wires": []
    },
    {
        "id": "e25de38e.209b7",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "PARTE RELACIONADA CON EL PIERO 3",
        "info": "",
        "x": 3040,
        "y": 1580,
        "wires": []
    },
    {
        "id": "33b7551b.c6ad2a",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "PARTE RELACIONADA CON EL PIERO 4",
        "info": "",
        "x": 2820,
        "y": 2380,
        "wires": []
    },
    {
        "id": "6ce7217a.af17",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Indica al canal de difusión que se ha encendido/apagado un led",
        "func": "\n var status=msg.payload.led;\n        var topic=msg.topic\n        var numeroInfoLed\n        if(topic==\"infind/GRUPO1/ESP1/led/status\")//si viene por este topic, significa que es la respuesta asociada al cambio de estado del Led1\n        {\n            numeroInfoLed=1;\n        }\n        else if(topic==\"infind/GRUPO1/ESP2/led/status\")//si viene por este topic, significa que es la respuesta asociada al cambio de estado del Led2\n        {\n            \n            numeroInfoLed=2;\n        }\n        else if(topic==\"infind/GRUPO1/ESP3/led/status\")//si viene por este topic, significa que es la respuesta asociada al cambio de estado del Led3\n        {\n            \n            numeroInfoLed=3;\n        }\n        else if(topic==\"infind/GRUPO1/ESP4/led/status\")//si viene por este topic, significa que es la respuesta asociada al cambio de estado del Led4\n        {\n            \n            numeroInfoLed=4;\n        }\n        else if(topic==\"infind/GRUPO1/ESP5/led/status\")//si viene por este topic, significa que es la respuesta asociada al cambio de estado del Led5\n        {\n            numeroInfoLed=5;\n            \n        }\n        //enviamos el mensaje por el canal de difusión de telegram.\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"El estado del Led\"+numeroInfoLed+\" es:\"+status+\",significando 0 que se encuentra apagado y 100 encendido a maxima intensidad. \\n\";\n    return msg;\n        ",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 4400,
        "wires": [
            [
                "f59f82cf.1301a"
            ]
        ]
    },
    {
        "id": "74ec4658.034eb8",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/enciende",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 160,
        "y": 4340,
        "wires": [
            [
                "c5c4d0.f7b45b3"
            ],
            [
                "cbaedd7.fe1fb2"
            ]
        ]
    },
    {
        "id": "13d58c18.a9f8b4",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Respuesta del dispositivo",
        "info": "",
        "x": 210,
        "y": 4500,
        "wires": []
    },
    {
        "id": "c5c4d0.f7b45b3",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Mostramos teclado led",
        "func": "// En esta función, al pulsar el usuario el comando, se le mostrará un teclado ilustrativo donde podrá pulsar la opción que desee seleccionar.\n// Además, se le envía una cuestión. Este teclado solo aparecerá en el siguiente mensaje, tras responder se borra.\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Led1','Led2'],\n      ['Led3','Led4'],\n      ['Led5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué led desea encender, indicando la intensidad?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 380,
        "y": 4340,
        "wires": [
            [
                "e7fa37e9.ecf338"
            ]
        ]
    },
    {
        "id": "e7fa37e9.ecf338",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 720,
        "y": 4340,
        "wires": [
            []
        ]
    },
    {
        "id": "cbaedd7.fe1fb2",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Respondemos",
        "func": "\n\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    if(msg.payload.content === 'Led1') {\n        \n        flow.set('NumLed',1)\n    }\n    else if(msg.payload.content === 'Led2')     {\n        flow.set('NumLed',2)\n    }\n    else if(msg.payload.content === 'Led3')   {\n        flow.set('NumLed',3)\n    }\n    else if(msg.payload.content === 'Led4')   {\n       flow.set('NumLed',4)\n    }\n    else if(msg.payload.content === 'Led5')   {\n        flow.set('NumLed',5)\n    }\n    else if(msg.payload.content === 'Todos')   {\n        flow.set('NumLed',6)\n    }\n    \n    msg.payload.content=\"Responde a este mensaje indicando ahora la intensidad con la que quieres que se encienda el LED, de 0 a 100. Recuerde que si introduce algo distinto a ello, su petición no se realizará.\"\n    \n}\n\nreturn msg\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 4400,
        "wires": [
            [
                "bb47cea0.537aa"
            ]
        ]
    },
    {
        "id": "bb47cea0.537aa",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 730,
        "y": 4400,
        "wires": [
            []
        ]
    },
    {
        "id": "d626e4c3.e111d8",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/AjustarTemperaturaMinima",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 180,
        "y": 940,
        "wires": [
            [
                "9b27b8c9.58a688"
            ],
            []
        ]
    },
    {
        "id": "2978c489.0a380c",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/AjustarTemperaturaMaxima",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 180,
        "y": 1020,
        "wires": [
            [
                "d3ebf7f.b5f5a08"
            ],
            []
        ]
    },
    {
        "id": "9b27b8c9.58a688",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "mensaje cambio tmin",
        "func": "//Mensaje que dispara la variable global 'CambiandoTMIN' indicando que se va a variar la temperatura minima de aviso.\nmsg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\":\\n\";\n msg.payload.content+=\"¿A qué temperatura mínima te gustaría que te avisara? Responde a este mensaje indicando un valor entre -10 y 60 para cambiar la temperatura. Recuerda que si sobrepasas esos umbrales, ¡no te los aceptaré!\"\n    global.set(\"CambiandoTMIN\",1)\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 940,
        "wires": [
            [
                "5abb00e2.70c8b"
            ]
        ]
    },
    {
        "id": "d3ebf7f.b5f5a08",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "mensaje cambio tmax",
        "func": "//Mensaje que dispara la variable global 'CambiandoTMAX' indicando que se va a variar la temperatura maxima de aviso.\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\":\\n\";\n msg.payload.content+=\"¿A qué temperatura máxima te gustaría que te avisara? Responde a este mensaje indicando un valor entre -10 y 60 para cambiar la temperatura. Recuerda que si sobrepasas esos umbrales, ¡no te los aceptaré!\"\n    global.set(\"CambiandoTMAX\",1)\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "5abb00e2.70c8b"
            ]
        ]
    },
    {
        "id": "8e978831.8ef188",
        "type": "telegram receiver",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 150,
        "y": 1140,
        "wires": [
            [
                "1b16b732.646c59",
                "8f74996b.e1c728"
            ],
            []
        ]
    },
    {
        "id": "1b16b732.646c59",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Ajustar temperatura maxima/minima aviso",
        "func": "//Primero comprobamos si se ha realizado la petición de cambiar la temperatura maxima o minima\nvar cambiartmax=global.get('CambiandoTMAX')\nvar cambiartmin=global.get('CambiandoTMIN')\nvar temperatura=Number(msg.payload.content);\n//Convertimos la respuesta del usuario a numérico para evitar errores de strings.\nvar temperaturaMinAct=global.get('TemperaturaMIN')\nvar temperaturaMaxAct=global.get('TemperaturaMAX')\n//Guardamos las temperaturas minima y maxima actuales en variables para comprobar.\n\n//Si se ha introducido un valor recogido en los límites, y se ha pedido realizar un cambio de temperatura de aviso, entramos en el if.\nif(temperatura >=-10 && temperatura<=60 &&((global.get('CambiandoTMAX')==1)||(global.get('CambiandoTMIN')==1)))\n{\n    if(global.get('CambiandoTMAX')==1)//si hemos pedido cambiar tmax\n{\n    if(temperatura>temperaturaMinAct) //si la temperatura introducida es mayor que la temperatura minima actual(tmax>tmin, se cumple la logica)\n    {\n        global.set('TemperaturaMAX',temperatura)\n        msg.payload.content=\"Se ha ajustado la temperatura máxima de aviso a \"+temperatura+\"ºC\";\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n        global.set('CambiandoTMAX',0);//Reseteamos el flag\n        cambiartmax=0;\n        //formateamos el mensaje y albergamos la nueva temperatura maxima en la global.\n    }\n    else\n    {\n        //se ha realizado un tmax<tmin, es un error, no se le permite al usuario y se le informa.\n        msg.payload.content=\"Se ha producido un error, la temperatura máxima introducida es menor que la temperatura mínima.\"\n        global.set('CambiandoTMAX',0)//Reseteamos el flag\n        cambiartmax=0;\n    }\n    \n    //return msg;\n}\nif(global.get('CambiandoTMIN')==1) //si pedimos cambiar la tmin\n{\n    if(temperatura<=temperaturaMaxAct) //si la minima es menor que la maxima, se cumple la condición (tmin<tmax) lógica\n    {\n        global.set('TemperaturaMIN',temperatura)\n        msg.payload.content=\"Se ha ajustado la temperatura mínima de aviso a \"+temperatura+\"ºC\"\n        global.set('CambiandoTMIN',0) //Reseteamos el flag\n        cambiartmin=0;\n        //cambiamos la temperatura minima de aviso y lo albergamos en la variable global.\n    }\n    else\n    {\n        msg.payload.content=\"Se ha producido un error, la temperatura mínima introducida es mayor que la temperatura máxima indicada.\"\n        cambiartmin=0;\n        //tmin>tmax, error.\n    }\n    \n    global.set('CambiandoTMIN',0)\n    \n    \n}\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 1100,
        "wires": [
            [
                "5abb00e2.70c8b"
            ]
        ]
    },
    {
        "id": "468d17a6.d237a8",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/AjustarHumedadMinima",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "9fe6549f.b306f8"
            ],
            []
        ]
    },
    {
        "id": "96c25d97.1ce55",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/AjustarHumedadMaxima",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 170,
        "y": 1300,
        "wires": [
            [
                "a52a4d58.77577"
            ],
            []
        ]
    },
    {
        "id": "9fe6549f.b306f8",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "mensaje cambio hmin",
        "func": "//Mensaje que dispara la variable global 'CambiandoHMIN' indicando que se va a variar la humedad minima de aviso.\nmsg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\":\\n\";\n msg.payload.content+=\"¿A qué humedad mínima te gustaría que te avisara? Responde a este mensaje indicando un valor entre 0 y 100 para cambiar la humedad. Recuerda que si sobrepasas esos umbrales... ¡no variaré nada!\"\n    global.set(\"CambiandoHMIN\",1) //Activamos el flag\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 1220,
        "wires": [
            [
                "5abb00e2.70c8b"
            ]
        ]
    },
    {
        "id": "a52a4d58.77577",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "mensaje cambio hmax",
        "func": "//Mensaje que dispara la variable global 'CambiandoHMAX' indicando que se va a variar la humedad maxima de aviso.\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\":\\n\";\n msg.payload.content+=\"¿A qué humedad máxima te gustaría que te avisara? Responde a este mensaje indicando un valor entre 0 y 100 para cambiar la humedad. Recuerda que si sobrepasas esos umbrales... ¡no variaré nada!\"\n    global.set(\"CambiandoHMAX\",1) //Activamos el flag\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 1300,
        "wires": [
            [
                "5abb00e2.70c8b"
            ]
        ]
    },
    {
        "id": "8f74996b.e1c728",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Ajustar humedad max/min aviso",
        "func": "//albergamos en la variable humedad la respuesta convertida a numérico.\nvar humedad=Number(msg.payload.content);\n\n\n//si se introduce un valor lógico de humedad y se ha pedido cambiar la hmax o hmin, entramos al if\nif(humedad >=0 && humedad<=100 &&((global.get('CambiandoHMAX')==1)||(global.get('CambiandoHMIN')==1)))\n{\nif(global.get('CambiandoHMAX')==1) //si queremos cambiar hmax\n{\n    if(humedad>global.get('HumedadMIN')) //si la humedad max introducida es mayor que la hmin actual, guardamos el cambio y es válido.\n    {\n        global.set('HumedadMAX',humedad)\n        msg.payload.content=\"Se ha ajustado la humedad máxima de aviso a \"+humedad+\"%\";\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n        global.set('CambiandoHMAX',0);//Reseteamos el flag\n    }\n    else\n    {\n        //en caso contrario, no se cumple la lógica y no se permite.\n        msg.payload.content=\"Se ha producido un error, la humedad máxima introducida es menor que la humedad mínima.\"\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n        global.set('CambiandoHMAX',0)//Reseteamos el flag\n    }\n    \n    \n}\nif(global.get('CambiandoHMIN')==1) //si queremos cambiar la hmin\n{\n    if(humedad<=global.get('HumedadMAX')) //si hmin es menor que la hmax actual, la guardamos y procesamos el mensaje.\n    {\n        global.set('HumedadMIN',humedad) \n        msg.payload.content=\"Se ha ajustado la humedad mínima de aviso a \"+humedad+\"%\"\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n        global.set('CambiandoHMIN',0)//Reseteamos el flag\n    }\n    else\n    {\n        //en caso contrario, se le indica al usuario que se ha producido un error.\n        msg.payload.content=\"Se ha producido un error, la humedad mínima introducida es mayor que la humedad máxima indicada.\"\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n    }\n    \n    global.set('CambiandoHMIN',0)//Reseteamos el flag\n    \n    \n}\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "5abb00e2.70c8b"
            ]
        ]
    },
    {
        "id": "5abb00e2.70c8b",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 850,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "52b11a2.c49a9e4",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "PARTE DONDE SE CONTROLA EL ESTADO DE LOS LED Y SWITCH",
        "info": "",
        "x": 330,
        "y": 2120,
        "wires": []
    },
    {
        "id": "a9c05dec.f7066",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Filtramos la placa que queremos elegir",
        "func": "//Realizamos el find en funcion de la placa que queremos consultar\n    if(msg.payload.content === 'ESP1') {\n        msg.payload={};\n        msg.payload={\"ESP_.placa\": 1};\n        return msg;\n        \n\n    }\n    else if(msg.payload.content==='ESP2'){\n        msg.payload={};\n        msg.payload={\"ESP_.placa\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'ESP3')     {\n        msg.payload={};\n        msg.payload={\"ESP_.placa\": 3};\n        return msg;\n    }\n    else if(msg.payload.content === 'ESP4')   {\n        msg.payload={};\n        msg.payload={\"ESP_.placa\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'ESP5')   {\n        msg.payload={};\n        msg.payload={\"ESP_.placa\": 5};\n        return msg;\n    }\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 740,
        "wires": [
            [
                "d9d39bf0.9f7618"
            ]
        ]
    },
    {
        "id": "f60114b5.de1c28",
        "type": "mongodb in",
        "z": "a15f261.24a1bd8",
        "mongodb": "5ead47f6.defdd8",
        "name": "",
        "collection": "_DATOS",
        "operation": "aggregate",
        "x": 1160,
        "y": 1760,
        "wires": [
            [
                "747c15a.64e26ec"
            ]
        ]
    },
    {
        "id": "3f1fc8c2.7e3cb8",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "",
        "command": "/Reset",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "outputs": 2,
        "x": 110,
        "y": 1360,
        "wires": [
            [
                "d0785c32.fd512"
            ],
            []
        ]
    },
    {
        "id": "d0785c32.fd512",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Volver a poner los valores de aviso a los determinados por defecto",
        "func": "//Volvemos a poner por defecto los valores.\n global.set(\"TemperaturaMIN\",10)\n global.set(\"TemperaturaMAX\",30)\n global.set(\"HumedadMIN\",30)\n global.set(\"HumedadMAX\",90)\n msg.payload.content=\"Se ha ajustado la temperatura máxima de aviso a 30ºc, la mínima a 10ºc, y la humedad máxima y minima son, respectivamente, 90% y 30%.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 1360,
        "wires": [
            [
                "5abb00e2.70c8b"
            ]
        ]
    },
    {
        "id": "44017f57.8936c",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "AJUSTAR LA TEMPERATURA Y HUMEDAD DE AVISO",
        "info": "",
        "x": 880,
        "y": 1000,
        "wires": []
    },
    {
        "id": "81786c2a.80925",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "VOLVER A LOS PARÁMETROS POR DEFECTO",
        "info": "",
        "x": 1000,
        "y": 1360,
        "wires": []
    },
    {
        "id": "52049d2f.a9d4f4",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "REALIZAR UNA CONSULTA VARIOS DIAS ATRÁS",
        "info": "",
        "x": 1090,
        "y": 1580,
        "wires": []
    },
    {
        "id": "46af092c.6073f8",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Recibir respuesta de estado de switch",
        "info": "",
        "x": 330,
        "y": 3080,
        "wires": []
    },
    {
        "id": "242e1261.e6ea2e",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Apagar/Encender SWITCH",
        "info": "",
        "x": 1010,
        "y": 2600,
        "wires": []
    },
    {
        "id": "f18f7526.2b2ec8",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Información Estado a los canales y usuario",
        "info": "",
        "x": 1300,
        "y": 3080,
        "wires": []
    },
    {
        "id": "aee2daf6.d8cbd8",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Consultar estado del LED",
        "info": "",
        "x": 250,
        "y": 3640,
        "wires": []
    },
    {
        "id": "56a98014.31573",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Apagar/Encender LED",
        "info": "",
        "x": 700,
        "y": 3880,
        "wires": []
    },
    {
        "id": "40d1b55d.f2ca3c",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Información Estado a los canales y usuario",
        "info": "",
        "x": 1280,
        "y": 4260,
        "wires": []
    },
    {
        "id": "b36c4919.afb548",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "RECIBIMOS SI HAY OBSTÁCULO",
        "info": "",
        "x": 3120,
        "y": 660,
        "wires": []
    },
    {
        "id": "eb79fc31.9d79",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "RECIBIMOS SI HAY OBSTÁCULO",
        "info": "",
        "x": 2740,
        "y": 1480,
        "wires": []
    },
    {
        "id": "ae8949ed.8b1898",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "RECIBIMOS SI HAY OBSTÁCULO",
        "info": "",
        "x": 2780,
        "y": 2200,
        "wires": []
    },
    {
        "id": "e9f1497.d0681b8",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "RECIBIMOS SI HAY OBSTÁCULO",
        "info": "",
        "x": 2780,
        "y": 2980,
        "wires": []
    },
    {
        "id": "8e00e05c.9fd97",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "RECIBIMOS SI HAY OBSTÁCULO",
        "info": "",
        "x": 2800,
        "y": 3760,
        "wires": []
    },
    {
        "id": "58692fb2.94ccf",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Envio por MQTT",
        "info": "",
        "x": 1120,
        "y": 3740,
        "wires": []
    },
    {
        "id": "b7fcc4c3.72c348",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Envio de mensaje Telegram",
        "info": "",
        "x": 1700,
        "y": 3740,
        "wires": []
    },
    {
        "id": "da3e1a6b.7ccfd8",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "Guardar ultimo estado",
        "info": "",
        "x": 1140,
        "y": 4500,
        "wires": []
    },
    {
        "id": "7d3bd222.7538dc",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS EL MODO POR MQTT",
        "info": "",
        "x": 3420,
        "y": 300,
        "wires": []
    },
    {
        "id": "da2fa8fa.7a36a8",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS LOS COMANDOS DE MOVIMIENTO",
        "info": "",
        "x": 3420,
        "y": 460,
        "wires": []
    },
    {
        "id": "c5878cc5.61c3b",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS LOS COMANDOS DE MOVIMIENTO",
        "info": "",
        "x": 3440,
        "y": 1320,
        "wires": []
    },
    {
        "id": "39abba4c.cd7766",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS EL MODO POR MQTT",
        "info": "",
        "x": 3440,
        "y": 1160,
        "wires": []
    },
    {
        "id": "278dafb8.1c409",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS LOS COMANDOS DE MOVIMIENTO",
        "info": "",
        "x": 3500,
        "y": 2020,
        "wires": []
    },
    {
        "id": "f8cf21cd.d9a73",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS EL MODO POR MQTT",
        "info": "",
        "x": 3500,
        "y": 1860,
        "wires": []
    },
    {
        "id": "8e0c20a3.0f766",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS LOS COMANDOS DE MOVIMIENTO",
        "info": "",
        "x": 3420,
        "y": 2800,
        "wires": []
    },
    {
        "id": "f5e48f06.5985c",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS EL MODO POR MQTT",
        "info": "",
        "x": 3420,
        "y": 2640,
        "wires": []
    },
    {
        "id": "370a6c9a.8ef374",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS LOS COMANDOS DE MOVIMIENTO",
        "info": "",
        "x": 3480,
        "y": 3520,
        "wires": []
    },
    {
        "id": "37457dec.20b892",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS EL MODO POR MQTT",
        "info": "",
        "x": 3480,
        "y": 3360,
        "wires": []
    },
    {
        "id": "23a1ebe9.35f854",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Robot6",
        "command": "/Robot6",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": false,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 1,
        "x": 1530,
        "y": 440,
        "wires": [
            [
                "af04728c.17d7d"
            ]
        ]
    },
    {
        "id": "af04728c.17d7d",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Robot5 info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan control sobre el robot. \\n\";\n msg.payload.content+=\"/Piero6Manual - te permite controlar el robot 6 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero6Automatico   -Activa el modo de funcionamiento automático del PIERO 5, donde él solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir6    - al activarlo, PIERO 6 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 440,
        "wires": [
            [
                "d9ddf250.bb0a8"
            ]
        ]
    },
    {
        "id": "3e7bdb95.237d74",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP6/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3540,
        "y": 4400,
        "wires": []
    },
    {
        "id": "beb3dddf.adefd",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero6Manual",
        "command": "/Piero6Manual",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 2770,
        "y": 4160,
        "wires": [
            [
                "f4f450e8.83398",
                "5647764e.5de928"
            ],
            []
        ]
    },
    {
        "id": "f4f450e8.83398",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir6']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir6 -Salir del modo de conducción manual.\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT5',3)\n//Ajustamos la variable de tipo flow ROBOT5 a 3, que actua como flag indicando que se ha activado el modo manual.\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3170,
        "y": 4220,
        "wires": [
            [
                "f4b3af7d.f35af"
            ]
        ]
    },
    {
        "id": "f4b3af7d.f35af",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3860,
        "y": 4220,
        "wires": [
            []
        ]
    },
    {
        "id": "842ef909.4dde08",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Robot Movimiento",
        "func": "//Si estamos en modo manual, es decir, nuestra variable de tipo flow asociada al robot\n//tiene valor 3, accedemos aqui.\n/*\nDependiendo de la tecla pulsada, se codificará de distinta forma:\nW- orden será 8(procesado posteriormente en ESP)\nA - orden será 4\nD - orden será 6\nSTOP - orden será 0\nSalir - orden será 0, ya que al salir\nqueremos que nuestro robot también se pare.\n\n\n*/\nrobot5=flow.get('ROBOT6')\nif(robot6==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir6')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3120,
        "y": 4480,
        "wires": [
            [
                "6e7b4f78.b6d6e"
            ]
        ]
    },
    {
        "id": "5647764e.5de928",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario8',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3100,
        "y": 4160,
        "wires": [
            []
        ]
    },
    {
        "id": "6e7b4f78.b6d6e",
        "type": "mqtt out",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP6/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "9f982c38.3d3de",
        "x": 3560,
        "y": 4480,
        "wires": []
    },
    {
        "id": "f19c7193.4f0cd",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Salir6",
        "command": "/Salir6",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 2750,
        "y": 4560,
        "wires": [
            [
                "5c7ecb87.d6f674",
                "b8ba3397.2893c"
            ],
            []
        ]
    },
    {
        "id": "5c7ecb87.d6f674",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero6Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3180,
        "y": 4640,
        "wires": [
            [
                "2fb46705.7d6378"
            ]
        ]
    },
    {
        "id": "2fb46705.7d6378",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "show keyboard",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3860,
        "y": 4640,
        "wires": [
            []
        ]
    },
    {
        "id": "b8ba3397.2893c",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario8',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3110,
        "y": 4560,
        "wires": [
            []
        ]
    },
    {
        "id": "d8c83a9f.b38308",
        "type": "telegram receiver",
        "z": "a15f261.24a1bd8",
        "name": "uWubot",
        "bot": "cf6b5cb5.3cc93",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2750,
        "y": 4400,
        "wires": [
            [
                "842ef909.4dde08",
                "2d46bc9b.3bc474"
            ],
            []
        ]
    },
    {
        "id": "2d46bc9b.3bc474",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\n//En esta función nos encargamos de identificar qué modo vamos a emplear.\n//Si estamos en modo manual, mandaremos por json que \"modo\" es 1\n//Si fuera salir o automático, se mandarían respectivamente 0 y 2, que posteriormente se procesa en la ESP.\n//También se puede observar que vaciamos el mensaje, para una mayor claridad en la ESP.\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero6Manual\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir6\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero6Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3140,
        "y": 4400,
        "wires": [
            [
                "3e7bdb95.237d74"
            ]
        ]
    },
    {
        "id": "7df9b911.7091f8",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\n//Le indicamos al usuario que ha activado el modo automático\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir6 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario8' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3140,
        "y": 4300,
        "wires": [
            [
                "b20e8908.7c77d8"
            ]
        ]
    },
    {
        "id": "4be06837.72ab88",
        "type": "telegram command",
        "z": "a15f261.24a1bd8",
        "name": "/Piero6auto",
        "command": "/Piero6Automatico",
        "bot": "cf6b5cb5.3cc93",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 2770,
        "y": 4280,
        "wires": [
            [
                "7df9b911.7091f8",
                "5647764e.5de928"
            ],
            []
        ]
    },
    {
        "id": "b20e8908.7c77d8",
        "type": "telegram sender",
        "z": "a15f261.24a1bd8",
        "name": "",
        "bot": "cf6b5cb5.3cc93",
        "outputs": 1,
        "x": 3870,
        "y": 4320,
        "wires": [
            []
        ]
    },
    {
        "id": "56307360.67acfc",
        "type": "mqtt in",
        "z": "a15f261.24a1bd8",
        "name": "",
        "topic": "infind/GRUPO1/ESP6/PIERO/Obstaculo",
        "qos": "2",
        "broker": "9f982c38.3d3de",
        "x": 2860,
        "y": 4800,
        "wires": [
            [
                "91447ceb.64a4e"
            ]
        ]
    },
    {
        "id": "91447ceb.64a4e",
        "type": "json",
        "z": "a15f261.24a1bd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3090,
        "y": 4800,
        "wires": [
            [
                "7f0c7371.71323c"
            ]
        ]
    },
    {
        "id": "7f0c7371.71323c",
        "type": "function",
        "z": "a15f261.24a1bd8",
        "name": "Funcion Obstáculos",
        "func": "/*\nSi nos llega que el campo Sensores[1] es izquierda, el obstáculo está a la izquierda\nSi nos llega un derecha, el obstáculo está a la derecha, y si nos llega un centro, está en el\ncentro.\n*/\nif(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario8' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario8' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\n\nelse if(msg.payload.Sensores[\"1\"]=='centro'){\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario8' || 0);\n    msg.payload.content=\"Se han detectado obstáculos por el centro. Evitalos!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n    \n \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3520,
        "y": 4800,
        "wires": [
            [
                "b20e8908.7c77d8"
            ]
        ]
    },
    {
        "id": "ff8d8c94.36f01",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "PARTE RELACIONADA CON EL PIERO 5",
        "info": "",
        "x": 3240,
        "y": 4080,
        "wires": []
    },
    {
        "id": "f0aa4ced.566fe",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "RECIBIMOS SI HAY OBSTÁCULO",
        "info": "",
        "x": 2840,
        "y": 4760,
        "wires": []
    },
    {
        "id": "18d1c830.d34e28",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS LOS COMANDOS DE MOVIMIENTO",
        "info": "",
        "x": 3520,
        "y": 4520,
        "wires": []
    },
    {
        "id": "4ac9f546.19417c",
        "type": "comment",
        "z": "a15f261.24a1bd8",
        "name": "ENVIAMOS EL MODO POR MQTT",
        "info": "",
        "x": 3520,
        "y": 4360,
        "wires": []
    },
    {
        "id": "cf6b5cb5.3cc93",
        "type": "telegram bot",
        "z": "",
        "botname": "PieroEsp",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "9f982c38.3d3de",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "5ead47f6.defdd8",
        "type": "mongodb",
        "z": "",
        "hostname": "iot.ac.uma.es",
        "port": "27017",
        "db": "II1",
        "name": ""
    }
]