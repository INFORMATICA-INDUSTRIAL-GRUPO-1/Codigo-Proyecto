[
    {
        "id": "1e563b30.19d025",
        "type": "tab",
        "label": "LOGs",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8da071c6.75df5",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LOGhasta",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f78ec21c.2e4ea",
        "type": "ui_date_picker",
        "z": "1e563b30.19d025",
        "name": "",
        "label": "Fecha de final",
        "group": "e56524e6.d0de38",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "x": 260,
        "y": 400,
        "wires": [
            [
                "8da071c6.75df5"
            ]
        ]
    },
    {
        "id": "99b63bc7.97b428",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LOGdesde",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "434d6a5b.a7fc04",
        "type": "ui_date_picker",
        "z": "1e563b30.19d025",
        "name": "",
        "label": "Fecha de inicio",
        "group": "e56524e6.d0de38",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "x": 260,
        "y": 360,
        "wires": [
            [
                "99b63bc7.97b428"
            ]
        ]
    },
    {
        "id": "d3dd3c12.78248",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LOGsortby",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "ecefd0f9.12adc",
        "type": "ui_dropdown",
        "z": "1e563b30.19d025",
        "name": "",
        "label": "Ordenar Por:",
        "tooltip": "",
        "place": "Select option",
        "group": "e56524e6.d0de38",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "Fecha",
                "value": "Date",
                "type": "str"
            },
            {
                "label": "Conexion",
                "value": "Online",
                "type": "str"
            },
            {
                "label": "Placa",
                "value": "Placa",
                "type": "str"
            },
            {
                "label": "CHIP ID",
                "value": "CHIPID",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 250,
        "y": 480,
        "wires": [
            [
                "d3dd3c12.78248"
            ]
        ]
    },
    {
        "id": "9dc19546.490a78",
        "type": "ui_switch",
        "z": "1e563b30.19d025",
        "name": "",
        "label": "Orden: Des/Asen",
        "tooltip": "",
        "group": "e56524e6.d0de38",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "-1",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 270,
        "y": 440,
        "wires": [
            [
                "69f66432.463c0c"
            ]
        ]
    },
    {
        "id": "69f66432.463c0c",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LOGad",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "28f825ba.76656a",
        "type": "ui_numeric",
        "z": "1e563b30.19d025",
        "name": "",
        "label": "Limite Busq.",
        "tooltip": "",
        "group": "e56524e6.d0de38",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "10000",
        "step": 1,
        "x": 250,
        "y": 520,
        "wires": [
            [
                "c470d30b.38f34"
            ]
        ]
    },
    {
        "id": "c470d30b.38f34",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LOGlimit",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "192337ec.3e4b18",
        "type": "mongodb out",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_USERS",
        "payonly": true,
        "upsert": true,
        "multi": true,
        "operation": "store",
        "x": 1400,
        "y": 1360,
        "wires": []
    },
    {
        "id": "d153fa18.2f8ca8",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "set msg._id",
        "func": "msg._id = {\"CHIPID\" : msg.payload.CHIPID} ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 1320,
        "wires": [
            [
                "771f9bc.62eac64"
            ]
        ]
    },
    {
        "id": "c10dae13.39022",
        "type": "switch",
        "z": "1e563b30.19d025",
        "name": "IsCHIPID",
        "property": "_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 980,
        "y": 1320,
        "wires": [
            [
                "9cd43393.1184a",
                "ede9213b.cf356",
                "8cccb96b.84f878"
            ]
        ]
    },
    {
        "id": "948e9b0a.0cff98",
        "type": "link in",
        "z": "1e563b30.19d025",
        "name": "USER_conexion",
        "links": [
            "1ffdb0f0.77d75f",
            "767c0bda.d21794",
            "9230d0af.3822b",
            "968df0a.428a31",
            "acbf8679.a97388",
            "d1210b5c.9a9f28"
        ],
        "x": 195,
        "y": 1280,
        "wires": [
            [
                "1d37b167.d4fd2f"
            ]
        ]
    },
    {
        "id": "9cd43393.1184a",
        "type": "switch",
        "z": "1e563b30.19d025",
        "name": "IsPLACA",
        "property": "payload.placa",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1180,
        "y": 1400,
        "wires": [
            [
                "192337ec.3e4b18"
            ],
            [
                "176b3eba.c1b301"
            ]
        ]
    },
    {
        "id": "ece3a5c9.852f08",
        "type": "mongodb in",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_USERS",
        "operation": "count",
        "x": 1400,
        "y": 1240,
        "wires": [
            [
                "a66eb54f.21f348"
            ]
        ]
    },
    {
        "id": "ede9213b.cf356",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "set null",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1240,
        "wires": [
            [
                "ece3a5c9.852f08"
            ]
        ]
    },
    {
        "id": "a66eb54f.21f348",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "set flow.numUsers",
        "rules": [
            {
                "t": "set",
                "p": "numUsers",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "176b3eba.c1b301",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "USER_check",
        "func": "\n\nvar valor = msg.payload.CHIPID;\nmsg.payload={\"CHIPID\":valor};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1440,
        "wires": [
            [
                "a058f266.9ab7c",
                "f4a0168b.56ebd8"
            ]
        ]
    },
    {
        "id": "f4a0168b.56ebd8",
        "type": "mongodb in",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_USERS",
        "operation": "count",
        "x": 1700,
        "y": 1480,
        "wires": [
            [
                "527b2b64.0e69e4"
            ]
        ]
    },
    {
        "id": "527b2b64.0e69e4",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "set flow.checkCollision",
        "rules": [
            {
                "t": "set",
                "p": "checkCollision",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "c13e18d0.09ae98",
        "type": "switch",
        "z": "1e563b30.19d025",
        "name": "CheckCollisions",
        "property": "checkCollision",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1800,
        "y": 1400,
        "wires": [
            [
                "31c0881d.b90758"
            ],
            [
                "49f2c5cc.7f3c2c",
                "dc67f396.e5ed8"
            ]
        ]
    },
    {
        "id": "a058f266.9ab7c",
        "type": "delay",
        "z": "1e563b30.19d025",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1630,
        "y": 1400,
        "wires": [
            [
                "c13e18d0.09ae98"
            ]
        ]
    },
    {
        "id": "c4ef6db.440ad9",
        "type": "mqtt out",
        "z": "1e563b30.19d025",
        "name": "",
        "topic": "infind/GRUPO1/ESP0/config/placa",
        "qos": "",
        "retain": "",
        "broker": "c2067e54.3e3e6",
        "x": 3280,
        "y": 1420,
        "wires": []
    },
    {
        "id": "49f2c5cc.7f3c2c",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "Recover Data",
        "func": "var ChipID=msg.payload.CHIPID;\n\n\nmsg.payload=\n[\n    { \"$match\": { \"CHIPID\": ChipID } },\n    { \"$project\": {\n        \"CHIPID\": \"$CHIPID\",\n        \"placa\": \"$placa\",\n        \"grupo\": \"$grupo\"\n        }\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2060,
        "y": 1420,
        "wires": [
            [
                "81f20589.1a3698"
            ]
        ]
    },
    {
        "id": "81f20589.1a3698",
        "type": "mongodb in",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_USERS",
        "operation": "aggregate",
        "x": 2300,
        "y": 1420,
        "wires": [
            [
                "5b36bf27.10ffc",
                "aa5e340d.07b5d8"
            ]
        ]
    },
    {
        "id": "5b36bf27.10ffc",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "ARRAY[0]2OBJECT",
        "func": "\nvar payload = msg.payload[0];\nmsg.payload=payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2560,
        "y": 1420,
        "wires": [
            [
                "22824552.cce7ba"
            ]
        ]
    },
    {
        "id": "771f9bc.62eac64",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "+ fecha",
        "func": "\nmsg.payload.date = new Date();\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 1320,
        "wires": [
            [
                "c10dae13.39022"
            ]
        ]
    },
    {
        "id": "e79a4d77.d2b14",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "newPlaca",
        "func": "var ChipID=msg.payload.CHIPID;\nvar date = msg.payload.date;\nvar numUsers = flow.get(\"numUsers\");\nvar placa = numUsers + 1 ;\n\n\nmsg.payload=\n{\n    \"CHIPID\":ChipID,\n    \"grupo\" : 1,\n    \"placa\":placa,\n    \"date\":date\n    \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2360,
        "y": 1320,
        "wires": [
            [
                "41f1164e.4ae138"
            ]
        ]
    },
    {
        "id": "b996a6b3.412db8",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload._id",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3003.7585525512695,
        "y": 1419.9727783203125,
        "wires": [
            [
                "c4ef6db.440ad9"
            ]
        ]
    },
    {
        "id": "8cccb96b.84f878",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "set flow.oldPlaca",
        "rules": [
            {
                "t": "set",
                "p": "oldPlaca",
                "pt": "flow",
                "to": "payload.placa",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "22824552.cce7ba",
        "type": "switch",
        "z": "1e563b30.19d025",
        "name": "check ChangePlaca",
        "property": "payload.placa",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "oldPlaca",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2780,
        "y": 1420,
        "wires": [
            [
                "b996a6b3.412db8"
            ]
        ]
    },
    {
        "id": "1d37b167.d4fd2f",
        "type": "switch",
        "z": "1e563b30.19d025",
        "name": "check Online conection",
        "property": "payload.online",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 1280,
        "wires": [
            [
                "1fa99168.2d73bf",
                "be33ae69.60e26"
            ]
        ]
    },
    {
        "id": "31c0881d.b90758",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "set msg._id",
        "func": "msg._id = {\"CHIPID\" : msg.payload.CHIPID} ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2050,
        "y": 1320,
        "wires": [
            [
                "56f7c4f4.aae02c"
            ]
        ]
    },
    {
        "id": "56f7c4f4.aae02c",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "+ fecha",
        "func": "\nmsg.payload.date = new Date();\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2220,
        "y": 1320,
        "wires": [
            [
                "e79a4d77.d2b14"
            ]
        ]
    },
    {
        "id": "41f1164e.4ae138",
        "type": "mongodb out",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_USERS",
        "payonly": true,
        "upsert": true,
        "multi": true,
        "operation": "store",
        "x": 2600,
        "y": 1320,
        "wires": []
    },
    {
        "id": "dc67f396.e5ed8",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "Placa_check",
        "func": "\n\nvar valor = msg.payload.placa;\nmsg.payload={\"placa\":valor};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2050,
        "y": 1360,
        "wires": [
            [
                "1cbbdf03.3e2c61"
            ]
        ]
    },
    {
        "id": "1cbbdf03.3e2c61",
        "type": "mongodb in",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_USERS",
        "operation": "count",
        "x": 2300,
        "y": 1360,
        "wires": [
            [
                "b0b496e1.20ff98"
            ]
        ]
    },
    {
        "id": "b0b496e1.20ff98",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "set flow.checkPlacaCollision",
        "rules": [
            {
                "t": "set",
                "p": "checkPlacaCollision",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "1fa99168.2d73bf",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "set format",
        "func": "var CHIPID = msg.payload.CHIPID;\nvar GRUPO = msg.payload.grupo;\nvar PLACA = msg.payload.placa;\n\nmsg.payload={};\nmsg.payload.CHIPID= CHIPID;\nmsg.payload.grupo=GRUPO\nmsg.payload.placa=PLACA\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 1320,
        "wires": [
            [
                "d153fa18.2f8ca8"
            ]
        ]
    },
    {
        "id": "3c4d3527.647d1a",
        "type": "ui_form",
        "z": "1e563b30.19d025",
        "name": "",
        "label": "Nuevo Usuario",
        "group": "ac94d6c8.36f2c8",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "CHIP ID",
                "value": "CHIPID",
                "type": "text",
                "required": true
            },
            {
                "label": "Placa",
                "value": "placa",
                "type": "text",
                "required": true
            },
            {
                "label": "Grupo",
                "value": "grupo",
                "type": "text",
                "required": false
            }
        ],
        "formValue": {
            "CHIPID": "",
            "placa": "",
            "grupo": ""
        },
        "payload": "",
        "submit": "Añadir/Modificar(por CHIPID)",
        "cancel": "Cancelar",
        "topic": "",
        "x": 260,
        "y": 1320,
        "wires": [
            [
                "1fa99168.2d73bf"
            ]
        ]
    },
    {
        "id": "f85957b7.836ab8",
        "type": "ui_form",
        "z": "1e563b30.19d025",
        "name": "",
        "label": "Borrar Usuario",
        "group": "ac94d6c8.36f2c8",
        "order": 3,
        "width": "6",
        "height": "3",
        "options": [
            {
                "label": "Placa",
                "value": "placa",
                "type": "text",
                "required": true
            }
        ],
        "formValue": {
            "placa": ""
        },
        "payload": "",
        "submit": "Borrar Usuario",
        "cancel": "Cancelar",
        "topic": "",
        "x": 260,
        "y": 1180,
        "wires": [
            [
                "a890151f.a4b9e8"
            ]
        ]
    },
    {
        "id": "c5f4c403.fb9478",
        "type": "mongodb out",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_USERS",
        "payonly": true,
        "upsert": true,
        "multi": true,
        "operation": "delete",
        "x": 1400,
        "y": 1180,
        "wires": []
    },
    {
        "id": "e2c267be.fd1368",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "set msg._id",
        "func": "var usr = msg.payload[0];\nmsg.payload=usr;\nmsg._id =  msg.payload.CHIPID ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 1180,
        "wires": [
            [
                "c5f4c403.fb9478"
            ]
        ]
    },
    {
        "id": "a890151f.a4b9e8",
        "type": "mongodb in",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_USERS",
        "operation": "find",
        "x": 760,
        "y": 1180,
        "wires": [
            [
                "e2c267be.fd1368"
            ]
        ]
    },
    {
        "id": "6f73b24a.d4581c",
        "type": "ui_button",
        "z": "1e563b30.19d025",
        "name": "",
        "group": "ac94d6c8.36f2c8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Usuarios Registrados",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 280,
        "y": 900,
        "wires": [
            [
                "2e6b1dd3.e347b2"
            ]
        ]
    },
    {
        "id": "2e6b1dd3.e347b2",
        "type": "delay",
        "z": "1e563b30.19d025",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 900,
        "wires": [
            [
                "80f79784.5d3998"
            ]
        ]
    },
    {
        "id": "80f79784.5d3998",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "agreaga Filtros",
        "func": "\nmsg.payload=\n[\n   { \"$sort\": {\"placa\": 1} }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 900,
        "wires": [
            [
                "62c82199.47312"
            ]
        ]
    },
    {
        "id": "62c82199.47312",
        "type": "mongodb in",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_USERS",
        "operation": "aggregate",
        "x": 1400,
        "y": 900,
        "wires": [
            [
                "ecdda01d.d7f06"
            ]
        ]
    },
    {
        "id": "ecdda01d.d7f06",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "Lista Html dinamica",
        "func": "var ahora = new Date();\nvar desde = new Date(flow.get(\"LOGdesde\") || ahora);\nvar hasta = new Date(flow.get(\"LOGhasta\") || ahora); \n\n/* <h1>LOGs: </h1>\n <ul>\n{{#payload}}\n  <li>   {{Date}} Online: {{Online}} , CHIP_ID:{{CHIPID}} ,Placa: {{Placa}}, Grupo {{Grupo}}    </li>\n{{/payload}}\n </ul>*/\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n\n{\n  var  mensaje= \"<h1>Usuarios: </h1>\\n <ul> \\n\";\n    for (var i = 0; i < msg.payload.length; i++) \n        { \n            // añade datos al mensaje\n        //Compruebo los datos a escribir\n         mensaje+= \"<li>  \";\n         mensaje+= \"<strong> Placa :</strong>\" + msg.payload[i].placa +\"<br>\" ;\n         mensaje+= \"<strong> Registrado el :</strong>\"+msg.payload[i].date+\"<br>\";\n         mensaje+= \"<strong> CHIP ID :</strong>\" + msg.payload[i].CHIPID ;\n         mensaje+= \"<strong> Grupo :</strong>\" + msg.payload[i].grupo ;  \n         mensaje+=\"<br><br>\";\n        mensaje+= \"</li>  \\n\";\n        }\n    mensaje+=\"   </ul>\";\n    }        \n\nmsg.payload = mensaje;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1730,
        "y": 900,
        "wires": [
            [
                "915e443f.05a6c8"
            ]
        ]
    },
    {
        "id": "915e443f.05a6c8",
        "type": "ui_template",
        "z": "1e563b30.19d025",
        "group": "1a9dd8e9.03f057",
        "name": "",
        "order": 6,
        "width": "18",
        "height": "17",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 2020,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "45df4671.735a18",
        "type": "template",
        "z": "1e563b30.19d025",
        "name": "reset datos formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>LOGs: </h1>\n <ul>\n{{#payload}}\n  <li>      </li>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1750,
        "y": 820,
        "wires": [
            [
                "915e443f.05a6c8"
            ]
        ]
    },
    {
        "id": "5fff5917.9c62b8",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "Lista Html dinamica",
        "func": "var ahora = new Date();\nvar desde = new Date(flow.get(\"LOGdesde\") || ahora);\nvar hasta = new Date(flow.get(\"LOGhasta\") || ahora); \n\n/* <h1>LOGs: </h1>\n <ul>\n{{#payload}}\n  <li>   {{Date}} Online: {{Online}} , CHIP_ID:{{CHIPID}} ,Placa: {{Placa}}, Grupo {{Grupo}}    </li>\n{{/payload}}\n </ul>*/\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n\n{\n  var  mensaje= \"<h1>LOG's: </h1>\\n <ul> \\n\";\n    mensaje += \"<strong> Periodo de busqueda:<br> Desde:</strong>\"+desde+\"<br><strong>Hasta:</strong>\"+hasta+\"<br><br>\"\n    for (var i = 0; i < msg.payload.length; i++) \n        { \n            // añade datos al mensaje\n        //Compruebo los datos a escribir\n         mensaje+= \"<li>  \";\n        if (msg.payload[i].Online===\"true\"){\n            mensaje+= \"<strong> ONLINE :</strong>\";\n        }\n        else{\n            mensaje+= \"<strong> OFFLINE :</strong>\";\n        }\n         mensaje+= msg.payload[i].Date;\n         mensaje+= \"<strong> Placa :</strong>\" + msg.payload[i].Placa ;\n         mensaje+= \"<strong> CHIP ID :</strong>\" + msg.payload[i].CHIPID +\"<br><br>\";\n\n        mensaje+= \"</li>  \\n\";\n        }\n    mensaje+=\"   </ul>\";\n    }        \n\nmsg.payload = mensaje;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1730,
        "y": 760,
        "wires": [
            [
                "915e443f.05a6c8"
            ]
        ]
    },
    {
        "id": "52414c91.707c94",
        "type": "ui_button",
        "z": "1e563b30.19d025",
        "name": "",
        "group": "e56524e6.d0de38",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Limpiar Registros",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1350,
        "y": 820,
        "wires": [
            [
                "45df4671.735a18"
            ]
        ]
    },
    {
        "id": "2ab4864e.ea757a",
        "type": "inject",
        "z": "1e563b30.19d025",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 1390,
        "y": 860,
        "wires": [
            [
                "45df4671.735a18"
            ]
        ]
    },
    {
        "id": "6209c636.965768",
        "type": "mongodb in",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_LOGS",
        "operation": "aggregate",
        "x": 1390,
        "y": 760,
        "wires": [
            [
                "5fff5917.9c62b8",
                "d001bb89.085628"
            ]
        ]
    },
    {
        "id": "42cd3615.9dd718",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "agreaga Filtros",
        "func": "// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(flow.get(\"LOGdesde\") || ahora);\nvar hasta = new Date(flow.get(\"LOGhasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),1,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),24,59,59,99);\nvar sort = flow.get(\"LOGsort\");\nvar limit = flow.get(\"LOGlimit\")\n\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final } } },\n    { \"$project\": {\n        \"Date\": \"$date\",\n        \"Online\": \"$online\",\n        \"CHIPID\": \"$CHIPID\",\n        \"Placa\": \"$placa\",\n        \"Grupo\": \"$grupo\"\n        }},\n    \n    \n];\nif (limit === 0)\n    msg.payload[2]= sort\nelse{\n    msg.payload[2]={ \"$limit\": limit  }   \n    msg.payload[3]= sort\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 602.6665992736816,
        "y": 759.2333345413208,
        "wires": [
            [
                "6209c636.965768",
                "d001bb89.085628"
            ]
        ]
    },
    {
        "id": "4a3130d6.a16fd",
        "type": "delay",
        "z": "1e563b30.19d025",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 434.3905715942383,
        "y": 760.3752450942993,
        "wires": [
            [
                "42cd3615.9dd718"
            ]
        ]
    },
    {
        "id": "b4248d79.fcfb1",
        "type": "ui_button",
        "z": "1e563b30.19d025",
        "name": "",
        "group": "1a9dd8e9.03f057",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Buscar LOG's",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 260,
        "y": 760,
        "wires": [
            [
                "4a3130d6.a16fd",
                "b30f2e9a.82c8f"
            ]
        ]
    },
    {
        "id": "b30f2e9a.82c8f",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "Sort_Obj",
        "func": "\nvar sortBy = flow.get(\"LOGsortby\");\nvar ase_des = flow.get(\"LOGad\");\n\n\n/*\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final } } },\n    { \"$project\": {\n        \"date\": \"$date\",\n        \"STATUS\": \"$online\",\n        \"CHIPID\": \"$CHIPID\",\n        \"placa\": \"$placa\",\n        \"grupo\": \"$grupo\"\n        }\n    },\n    { \"$sort\" : { \"date\" : ase_des } }\n];\n*/\n\nmsg.payload= \" { \\\"$sort\\\" : { \\\"\" + sortBy + \"\\\":\" + ase_des + \"}}\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 720,
        "wires": [
            [
                "73ff70ea.35a1f"
            ]
        ]
    },
    {
        "id": "73ff70ea.35a1f",
        "type": "json",
        "z": "1e563b30.19d025",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 720,
        "wires": [
            [
                "7b1de978.6090d8"
            ]
        ]
    },
    {
        "id": "7b1de978.6090d8",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LOGsort",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "b1df9b72.c82d68",
        "type": "ui_template",
        "z": "1e563b30.19d025",
        "group": "e56524e6.d0de38",
        "name": "CSV_LOG's",
        "order": 2,
        "width": "0",
        "height": "0",
        "format": "<style>\n.button {\n    text-align: center;\n    font: bold 17px Arial;\n    text-decoration: none;\n    background-color: #339966;\n    color: white;\n    padding: 8px 10px;\n    border: 2px solid #CCCCCC;\n  }\n  \n  .button:hover\n  {\n   background-color: #26734d;\n  }\n\n</style>\n<a href=\"/LOGs\" class=\"button\">Descarga LOG's en CSV (EXCEL)</a>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 250,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "33a427f3.98bd48",
        "type": "http in",
        "z": "1e563b30.19d025",
        "name": "",
        "url": "/LOGs",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 470,
        "y": 1740,
        "wires": [
            [
                "ea327a08.b3cbd8",
                "56c34672.8c0628"
            ]
        ]
    },
    {
        "id": "d78631e.f9c4ed",
        "type": "csv",
        "z": "1e563b30.19d025",
        "name": "",
        "sep": ";",
        "hdrin": "",
        "hdrout": true,
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "Date,CHIPID,Placa,Online,Grupo",
        "skip": 0,
        "x": 1250,
        "y": 1740,
        "wires": [
            [
                "f22b5999.fbd8d8"
            ]
        ]
    },
    {
        "id": "f22b5999.fbd8d8",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "Unicode y separador",
        "func": "//add Unicode BOM character (byte order mark) to make EXCEL knows this is UTF-8\nif(flow.get(\"separador_decimal\")==\"punto\")\n{\n    msg.payload='\\ufeff'+msg.payload;\n\n}\nelse\n{\n    msg.payload='\\ufeff'+(msg.payload).replace(/\\./g,\",\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 1740,
        "wires": [
            [
                "ec79f626.68ec68"
            ]
        ]
    },
    {
        "id": "ec79f626.68ec68",
        "type": "http response",
        "z": "1e563b30.19d025",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Disposition": "attachment; filename=LOGs.csv"
        },
        "x": 1590,
        "y": 1740,
        "wires": []
    },
    {
        "id": "2050439.ad441bc",
        "type": "mongodb in",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_LOGS",
        "operation": "aggregate",
        "x": 1030,
        "y": 1740,
        "wires": [
            [
                "d78631e.f9c4ed"
            ]
        ]
    },
    {
        "id": "ea327a08.b3cbd8",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "Sort_Obj",
        "func": "\nvar sortBy = flow.get(\"LOGsortby\");\nvar ase_des = flow.get(\"LOGad\");\n\n\n/*\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final } } },\n    { \"$project\": {\n        \"date\": \"$date\",\n        \"STATUS\": \"$online\",\n        \"CHIPID\": \"$CHIPID\",\n        \"placa\": \"$placa\",\n        \"grupo\": \"$grupo\"\n        }\n    },\n    { \"$sort\" : { \"date\" : ase_des } }\n];\n*/\n\nmsg.payload= \" { \\\"$sort\\\" : { \\\"\" + sortBy + \"\\\":\" + ase_des + \"}}\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1700,
        "wires": [
            [
                "b9b85aa3.64e908"
            ]
        ]
    },
    {
        "id": "b9b85aa3.64e908",
        "type": "json",
        "z": "1e563b30.19d025",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 950,
        "y": 1700,
        "wires": [
            [
                "89b2fdb4.e836e"
            ]
        ]
    },
    {
        "id": "89b2fdb4.e836e",
        "type": "change",
        "z": "1e563b30.19d025",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LOGsort",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "5bb088d8.18bf38",
        "type": "http in",
        "z": "1e563b30.19d025",
        "name": "",
        "url": "/Users",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 470,
        "y": 1800,
        "wires": [
            [
                "20e2541d.835aec"
            ]
        ]
    },
    {
        "id": "702d5344.ee710c",
        "type": "mongodb in",
        "z": "1e563b30.19d025",
        "mongodb": "d630cc1.cf74a3",
        "name": "",
        "collection": "_USERS",
        "operation": "aggregate",
        "x": 1040,
        "y": 1800,
        "wires": [
            [
                "6c234c90.10e244"
            ]
        ]
    },
    {
        "id": "6c234c90.10e244",
        "type": "csv",
        "z": "1e563b30.19d025",
        "name": "",
        "sep": ";",
        "hdrin": "",
        "hdrout": true,
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "CHIPID,placa,grupo,date",
        "skip": 0,
        "x": 1250,
        "y": 1800,
        "wires": [
            [
                "241d0071.02064"
            ]
        ]
    },
    {
        "id": "241d0071.02064",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "Unicode y separador",
        "func": "//add Unicode BOM character (byte order mark) to make EXCEL knows this is UTF-8\nif(flow.get(\"separador_decimal\")==\"punto\")\n{\n    msg.payload='\\ufeff'+msg.payload;\n\n}\nelse\n{\n    msg.payload='\\ufeff'+(msg.payload).replace(/\\./g,\",\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 1800,
        "wires": [
            [
                "a25561d5.33bd1"
            ]
        ]
    },
    {
        "id": "a25561d5.33bd1",
        "type": "http response",
        "z": "1e563b30.19d025",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Disposition": "attachment; filename=Users.csv"
        },
        "x": 1590,
        "y": 1800,
        "wires": []
    },
    {
        "id": "8ce53c15.cd583",
        "type": "ui_template",
        "z": "1e563b30.19d025",
        "group": "e56524e6.d0de38",
        "name": "CSV_Users",
        "order": 3,
        "width": "0",
        "height": "0",
        "format": "<style>\n.button {\n    text-align: center;\n    font: bold 17px Arial;\n    text-decoration: none;\n    background-color: #339966;\n    color: white;\n    padding: 8px 10px;\n    border: 2px solid #CCCCCC;\n  }\n  \n  .button:hover\n  {\n   background-color: #26734d;\n  }\n\n</style>\n<a href=\"/Users\" class=\"button\">Descarga Usuarios en CSV (EXCEL)</a>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 250,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "20e2541d.835aec",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "agreaga Filtros",
        "func": "\nmsg.payload=\n[\n   { \"$sort\": {\"placa\": 1} }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1800,
        "wires": [
            [
                "702d5344.ee710c"
            ]
        ]
    },
    {
        "id": "aa5e340d.07b5d8",
        "type": "debug",
        "z": "1e563b30.19d025",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2550,
        "y": 1480,
        "wires": []
    },
    {
        "id": "be33ae69.60e26",
        "type": "debug",
        "z": "1e563b30.19d025",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 570,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d001bb89.085628",
        "type": "debug",
        "z": "1e563b30.19d025",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1710,
        "y": 720,
        "wires": []
    },
    {
        "id": "56c34672.8c0628",
        "type": "function",
        "z": "1e563b30.19d025",
        "name": "agreaga Filtros",
        "func": "// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(flow.get(\"LOGdesde\") || ahora);\nvar hasta = new Date(flow.get(\"LOGhasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),1,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),24,59,59,99);\nvar sort = flow.get(\"LOGsort\");\nvar limit = flow.get(\"LOGlimit\")\n\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final } } },\n    { \"$project\": {\n        \"Date\": \"$date\",\n        \"Online\": \"$online\",\n        \"CHIPID\": \"$CHIPID\",\n        \"Placa\": \"$placa\",\n        \"Grupo\": \"$grupo\"\n        }},\n    \n    \n];\nif (limit === 0)\n    msg.payload[2]= sort\nelse{\n    msg.payload[2]={ \"$limit\": limit  }   \n    msg.payload[3]= sort\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1740,
        "wires": [
            [
                "2050439.ad441bc"
            ]
        ]
    },
    {
        "id": "b915ba7f.f4f428",
        "type": "comment",
        "z": "1e563b30.19d025",
        "name": "Variables",
        "info": "",
        "x": 460,
        "y": 320,
        "wires": []
    },
    {
        "id": "e3a4ee19.0126b",
        "type": "comment",
        "z": "1e563b30.19d025",
        "name": "Entradas Dashboard",
        "info": "",
        "x": 270,
        "y": 320,
        "wires": []
    },
    {
        "id": "4bb60422.c3443c",
        "type": "comment",
        "z": "1e563b30.19d025",
        "name": "CSV",
        "info": "Genera los archivos CSV para descargar (desde el dashboard)\nde las entradas LOG's y Usuarios",
        "x": 230,
        "y": 1660,
        "wires": []
    },
    {
        "id": "aad6ae05.dd499",
        "type": "comment",
        "z": "1e563b30.19d025",
        "name": "Gestion Usuarios",
        "info": "Añade, modifica y/o borra los usuarios registrados en el sistema\n    1) de forma automatica (asigna el siguiente numero de placa disponible, a un CHIPID no registrado)\n    2)\"Harcodeado\" desde el ESP\n    3) manual desde el dashboard\n    \nResponde a un ESP, al conectarse, con su numero de placa registrado    ",
        "x": 260,
        "y": 1100,
        "wires": []
    },
    {
        "id": "74b20d2c.30fd14",
        "type": "comment",
        "z": "1e563b30.19d025",
        "name": "Busquedas",
        "info": "Genera y muestra en el dashboard, los resultados de las busquedas de LOG's y Usuarios",
        "x": 250,
        "y": 660,
        "wires": []
    },
    {
        "id": "f9990a50.01f388",
        "type": "comment",
        "z": "1e563b30.19d025",
        "name": "Broadcast",
        "info": "Responde por broadcast (a todos) la asignacion para un determinado CHIPID el numero de placa que le corresponde (almacenado en DB)",
        "x": 3200,
        "y": 1380,
        "wires": []
    },
    {
        "id": "e56524e6.d0de38",
        "type": "ui_group",
        "z": "",
        "name": "FiltersLOG's",
        "tab": "743c2184.f6ad3",
        "order": 1,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "d630cc1.cf74a3",
        "type": "mongodb",
        "z": "",
        "hostname": "iot.ac.uma.es",
        "port": "27017",
        "db": "II1",
        "name": ""
    },
    {
        "id": "c2067e54.3e3e6",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "ac94d6c8.36f2c8",
        "type": "ui_group",
        "z": "",
        "name": "Users",
        "tab": "743c2184.f6ad3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1a9dd8e9.03f057",
        "type": "ui_group",
        "z": "",
        "name": "Log_Data",
        "tab": "743c2184.f6ad3",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "743c2184.f6ad3",
        "type": "ui_tab",
        "z": "",
        "name": "LOGs",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    }
]