[
    {
        "id": "4f3a4e93.cc8bf",
        "type": "tab",
        "label": "TELEGRAM",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2513f67d.419fca",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje respuesta temperatura/humedad",
        "func": "var temp=msg.payload[0].DHT11.temp\nvar hum= msg.payload[0].DHT11.hum\nvar fecha=msg.payload[0].date\nvar temperatura= flow.get('Temperatura');\nvar humedad= flow.get('Humedad')\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nif(temperatura==1 && humedad===0)\n{\n\nmsg.payload.content=\"La temperatura es de \"+temp+\"ºC.\\nEste dato fue obtenido el \"+fecha+\"\\n\";\n}\n\nif(humedad==1 && temperatura===0)\n{\n    \n  msg.payload.content=\"La humedad relativa es del \"+hum+\"%.\\nEste dato fue obtenido el \"+fecha+\"\\n\";\n  \n    \n}\nif(temperatura==1 && humedad==1)\n{\n    \n    msg.payload.content=\"La temperatura es de \"+temp+\"ºC y la humedad relativa es del \"+hum+\"%\\nEstos datos fueron registrados el \"+fecha+\"\\n\";\n    \n    \n}\n\nflow.set('Humedad',0)\nflow.set('Temperatura',0)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1680,
        "y": 560,
        "wires": [
            [
                "615147c7.3f4cc8"
            ]
        ]
    },
    {
        "id": "407b2387.6f808c",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/Temperatura",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 130,
        "y": 480,
        "wires": [
            [
                "fe7fe597.bbaa08"
            ],
            [
                "34dc505f.37f6b"
            ]
        ]
    },
    {
        "id": "387a1bd1.8d4e54",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/help",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "e62f29a0.e22118"
            ],
            []
        ]
    },
    {
        "id": "44648f9.8a52f7",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1010,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1c0856a7.9b67f9",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/apaga",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 110,
        "y": 1080,
        "wires": [
            [
                "957190e4.ed6e1",
                "e2295ae3.bce7a8"
            ],
            [
                "6e547ab5.3f3374",
                "58d9b28a.2ae9bc"
            ]
        ]
    },
    {
        "id": "397dad48.b7c4a2",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/enciende",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 120,
        "y": 1440,
        "wires": [
            [
                "5fb45e87.85fec",
                "58c6c9a8.b41ba8"
            ],
            [
                "5f782b60.f58734",
                "55ba8325.f2204c"
            ]
        ]
    },
    {
        "id": "66c79087.fe2c1",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Identifica si llega mensaje de intensidad",
        "func": "//guardo información de telegram\n//monto mensaje para dispositivo\n\nvar intensidad= msg.payload.content\nmsg6={}\nif(intensidad>0 && intensidad <=100)\n{\n    NumeroLed=flow.get('NumLed');\n    var id = String(new Date().getTime());\n    msg6.telegram=msg.payload;\n    msg={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\nif(NumeroLed===1){\n    msg.payload={\"level\":intensidad,\"id\":id};\n    msg.id=id\n    msg.orden=true;\n    msg6.payload=msg.payload\n\n}\nelse if(NumeroLed==2){\n    \n    msg2.payload={\"level\":intensidad,\"id\":id};\n    msg2.id=id;\n    msg2.orden=true;\n    msg6=msg2\n    \n}\nelse if(NumeroLed==3){\n    \n    msg3.payload={\"level\":intensidad,\"id\":id};\n    msg3.id=id\n    msg6.orden=true;\n    msg6=msg3\n    \n\n}\nelse if(NumeroLed===4){\n    \n    msg4.payload={\"level\":intensidad,\"id\":id};\n    msg6.id=id;\n    msg6.payload=msg4.payload\n    msg6.orden=true;\n    \n    \n}\n\n\nelse if(NumeroLed==5){\n    \n    msg5.payload={\"level\":intensidad,\"id\":id};\n    msg6.id=id;\n    msg6.orden=true;\n    msg6.payload=msg5.payload\n    \n\n}\n\n\nelse if(NumeroLed==6){\n    \n    msg5.payload={\"level\":intensidad,\"id\":id};\n    msg5.id=id;\n    msg5.orden=true;\n    msg6=msg5\n    msg=msg5\n    msg2=msg5\n    msg3=msg5\n    msg4=msg5\n    \n    \n\n}\n\nreturn[msg,msg2,msg3,msg4,msg5,msg6]\n}\n\n\n\n",
        "outputs": 6,
        "noerr": 0,
        "x": 720,
        "y": 1240,
        "wires": [
            [
                "843ee7f4.68db78"
            ],
            [
                "65713d84.f574e4"
            ],
            [
                "3e54c2de.55ec3e"
            ],
            [
                "6842463b.c16a28",
                "8dc41194.8fee7"
            ],
            [
                "d0a2a3e6.f4956"
            ],
            [
                "8dc41194.8fee7",
                "c37a1e14.9b8ac"
            ]
        ]
    },
    {
        "id": "d46a7b05.ab9d58",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "Respuesta del dispositivo",
        "info": "",
        "x": 130,
        "y": 1540,
        "wires": []
    },
    {
        "id": "e2216199.f32df",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "Control del LED PRINCIPAL",
        "info": "",
        "x": 400,
        "y": 760,
        "wires": []
    },
    {
        "id": "e62f29a0.e22118",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje bienvenida",
        "func": "if(msg.payload.content.substring(0,1)!=\"/\")\n{\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\" soy un bot ejecutando en NodeRED diseñado por el Grupo 1 de  Informática Industrial!Puedo responderte a estos comandos:\\n\";\n msg.payload.content+=\"/led - Te indico los distintos comandos relacionados con el control del estado del LED\\n\";\n msg.payload.content+=\"/Sensores - Te indico los distintos comandos relacionados con los sensores que tenemos disponibles\\n\";\n msg.payload.content+=\"/ListaComandos - Te indico todos los comandos disponibles.\\n\";\n msg.payload.content+=\"/ComandosRobot - Te indico todos los comandos relacionados con el control del robot PIERO\\n\";\n if(global.get(\"TemperaturaMIN\")>-20)\n{\n}\nelse\n{\n global.set(\"TemperaturaMIN\",10)\n global.set(\"TemperaturaMAX\",30)\n global.set(\"HumedadMIN\",30)\n global.set(\"HumedadMAX\",90)\n global.set(\"CambiandoTMIN\",0)\n global.set(\"CambiandoTMAX\",0)\n global.set(\"CambiandoHMIN\",0)\n global.set(\"CambiandoHMAX\",0)\n}\n return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 40,
        "wires": [
            [
                "44648f9.8a52f7"
            ]
        ]
    },
    {
        "id": "ad50e153.1005c",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1670,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "8d83eb8e.6a89e8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "func": "msg.payload={};\n\nmsg.payload.chatId=-1001354631151;\nmsg.payload.type=\"message\";\nmsg.payload.content=\"El bot publica correctamente\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1450,
        "y": 1900,
        "wires": [
            [
                "ad50e153.1005c"
            ]
        ]
    },
    {
        "id": "b8d52f30.53961",
        "type": "inject",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1280,
        "y": 1780,
        "wires": [
            [
                "8d83eb8e.6a89e8"
            ]
        ]
    },
    {
        "id": "a12e6650.5b88f8",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/Humedad",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 140,
        "y": 660,
        "wires": [
            [
                "fe7fe597.bbaa08"
            ],
            [
                "91c54bd5.1fbe38"
            ]
        ]
    },
    {
        "id": "ec46dcc6.dbae6",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 1780,
        "wires": [
            [
                "131a94.980b756c",
                "c37a1e14.9b8ac",
                "e5509a6d.2837d8"
            ]
        ]
    },
    {
        "id": "615147c7.3f4cc8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 2110,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "340a86a2.c23e0a",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "CHAT DIFUSIÓN TELEGRAM",
        "info": "",
        "x": 1560,
        "y": 1820,
        "wires": []
    },
    {
        "id": "b06c41a7.bde8d",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/consulta",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 140,
        "y": 560,
        "wires": [
            [
                "fe7fe597.bbaa08"
            ],
            [
                "34dc505f.37f6b",
                "91c54bd5.1fbe38"
            ]
        ]
    },
    {
        "id": "91c54bd5.1fbe38",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Indica Orden Humedad",
        "func": "//Filtro la base de datos y almaceno el chatId\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n}\nflow.set('Usuario',msg.payload.chatId)\nflow.set('ESP',msg.payload.content)\nflow.set('Humedad',1)\nmsg.payload = {};\nmsg.sort = {\"date\" : -1};\nmsg.limit = 1;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 680,
        "wires": [
            [
                "3f42de89.345c52"
            ]
        ]
    },
    {
        "id": "3747d1af.49a98e",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 130,
        "y": 1240,
        "wires": [
            [
                "66c79087.fe2c1",
                "a64e5635.270058"
            ],
            []
        ]
    },
    {
        "id": "ee561c1c.8c2c1",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/Sensores",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 120,
        "y": 140,
        "wires": [
            [
                "ffa6158d.ba2d58"
            ],
            []
        ]
    },
    {
        "id": "ffa6158d.ba2d58",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Sensores info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te indican informacion sobre los sensores. \\n\";\n msg.payload.content+=\"/Temperatura - te indica el ultimo dato respecto a la temperatura registrada por el DHT-11\\n\";\n msg.payload.content+=\"/Humedad    - te indica el ultimo dato respecto a la humedad registrada por el DHT-11\\n\";\n msg.payload.content+=\"/consulta   - Te indico simultaneamente el ultimo dato registrado por cada sensor.\\n\";\n msg.payload.content+=\"/ConsultaHistorica - Te permito realizar una consulta con respecto a dias atras, donde te informaré sobre distintos aspectos de la humedad y la temperatura registrados en el periodo que me indiques.\\n\"\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 120,
        "wires": [
            [
                "44648f9.8a52f7"
            ]
        ]
    },
    {
        "id": "75aafec9.40543",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/ListaComandos",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 140,
        "y": 200,
        "wires": [
            [
                "9cd6b02e.17663"
            ]
        ]
    },
    {
        "id": "9cd6b02e.17663",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Lista Comandos",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico todos los comandos de los que dispongo... Usa este poder sabiamente. \\n\";\n msg.payload.content+=\"/Sensores - Te indico los distintos comandos relacionados con los sensores que tenemos disponibles\\n\";\n msg.payload.content+=\"/Temperatura - te indica el ultimo dato respecto a la temperatura registrada por el DHT-11\\n\";\n msg.payload.content+=\"/Humedad    - te indica el ultimo dato respecto a la humedad registrada por el DHT-11\\n\";\n msg.payload.content+=\"/consulta   - Te indico simultaneamente el ultimo dato registrado por cada sensor.\\n\";\n msg.payload.content+=\"/media   - Te indico la media de la humedad y la temperatura registrada la ultima media hora.\\n\";\n msg.payload.content+=\"/led - Te indico los distintos comandos relacionados con el control del estado del LED\\n\";\n msg.payload.content+=\"/enciende - enciende el led rojo a la intensidad que me indiques\\n\";\n msg.payload.content+=\"/apaga    - apaga el led rojo\\n\";\n msg.payload.content+=\"/estado   - Te indico el ultimo estado del led, indicando 0 que esta apagado, y 100 que esta encendido con maxima luminosidad.\\n\";\n msg.payload.content+=\"/ConsultaHistorica - Te permito realizar una consulta con respecto a dias atras, donde te informaré sobre distintos aspectos de la humedad y la temperatura registrados en el periodo que me indiques.\\n\"\n msg.payload.content+=\"/PieroManual - te permite controlar el robot de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/PieroAutomatico   -Activa el modo de funcionamiento automático de PIERO, donde el solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir    - al activarlo, PIERO pasa a modo reposo.\\n\";\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 180,
        "wires": [
            [
                "44648f9.8a52f7"
            ]
        ]
    },
    {
        "id": "a614d29f.2bbcf",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Control Led",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te ayudan a controlar el estado del led. \\n\";\n msg.payload.content+=\"/enciende - enciende el led rojo a la intensidad que me indiques\\n\";\n msg.payload.content+=\"/apaga    - apaga el led rojo\\n\";\n msg.payload.content+=\"/estado   - Te indico el ultimo estado del led, indicando 0 que esta apagado, y 100 que esta encendido con maxima luminosidad.\\n\";\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 300,
        "wires": [
            [
                "44648f9.8a52f7"
            ]
        ]
    },
    {
        "id": "dd9aedce.d3897",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/led",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 110,
        "y": 320,
        "wires": [
            [
                "a614d29f.2bbcf"
            ],
            []
        ]
    },
    {
        "id": "e105a4d1.1f9098",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1790,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "bafc295a.630ec8",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/ConsultaHistorica",
        "command": "/ConsultaHistorica",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 170,
        "y": 2000,
        "wires": [
            [
                "38952845.5e9638",
                "766b83ff.8b20ac"
            ],
            [
                "4b8175f2.d6e94c"
            ]
        ]
    },
    {
        "id": "38952845.5e9638",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta placa",
        "func": "flow.set('Placa',\"Ninguna\")\nflow.set('Avanza',0)\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['PLACA1','PLACA2'],\n      ['PLACA3'],\n      ['PLACA4','PLACA5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Con que antigüedad deseas realizar la consulta?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 510,
        "y": 1980,
        "wires": [
            [
                "f022bce4.a7d6c"
            ]
        ]
    },
    {
        "id": "f022bce4.a7d6c",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 1000,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "220a7fd6.5913a",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos",
        "func": "// fecha por defecto es hoy\nContinua=flow.get('Avanza')\nhayplaca=flow.get('Placa')\nmensaje=msg.payload.content\n\nif(mensaje ==\"Ayer\" || mensaje==\"Hoy\" || mensaje==\"Hace dos dias\" || mensaje==\"Hace siete dias\")\n{\nif(Continua==1 && hayplaca!=\"Ninguna\" )\n{\n    if (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\nvar now_ms = new Date().getTime();\nvar ahora = new Date();\nvar ms_per_minute = 60000;\nvar desde2;\n\n\n\n\n    \n    if(msg.payload.content === 'Ayer') {\n        desde2=ahora.getTime()-ms_per_minute*1440; //un dia tiene 1440 minutos\n    }\n    else if(msg.payload.content==='Hoy'){\n        \n        desde2=ahora;\n    }\n    else if(msg.payload.content === 'Hace dos dias')     {\n        desde2=ahora.getTime()-ms_per_minute*1440*2; //un dia tiene 1440 minutos. Dos dias, el doble. \n    }\n    else if(msg.payload.content === 'Hace siete dias')   {\n        desde2=ahora.getTime()-ms_per_minute*1440*7 //numero de min de 1 dia * 7 dias\n    }\n}\n\n\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(desde2);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final } } },\n    { \"$project\": {\n        \"temperatura\": \"$DHT11.temp\",\n        \"humedad\":\"$DHT11.hum\"\n        }\n    },\n    { \"$group\": {\n        \"_id\": 0,\n        \"Tmedia\":{\"$avg\":\"$temperatura\"},\n        \"Tmax\":  {\"$max\":\"$temperatura\"},\n        \"Tmin\":  {\"$min\":\"$temperatura\"},\n        \"Hmedia\":{\"$avg\":\"$humedad\"},\n        \"Hmax\":  {\"$max\":\"$humedad\"},\n        \"Hmin\":  {\"$min\":\"$humedad\"},\n        \"datos\": {\"$sum\":1}\n    }}\n];\n\nreturn msg;\n\n}\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 2220,
        "wires": [
            [
                "df75fb0c.b41708",
                "af55a13b.2c33"
            ]
        ]
    },
    {
        "id": "77871d4b.e7e7a4",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "operation": "aggregate",
        "x": 1250,
        "y": 2060,
        "wires": [
            [
                "35cd42c1.4a47be"
            ]
        ]
    },
    {
        "id": "35cd42c1.4a47be",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje respuesta agreg",
        "func": "var tmedia=msg.payload[0].Tmedia\nvar tmax= msg.payload[0].Tmax\nvar tmin= msg.payload[0].Tmin\nvar hmedia=msg.payload[0].Hmedia\nvar hmax= msg.payload[0].Hmax\nvar hmin= msg.payload[0].Hmin\nvar datos= msg.payload[0].datos\n\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nmsg.payload.content=\"La temperatura media es de \"+tmedia+\"ºC.\\nLa temperatura maxima fue de \"+tmax+\"ºC y la minima fue de \"+tmin+\"ºC.\\nRespecto a la humedad, la humedad media es de \"+hmedia+\". La humedad maxima fue de \"+hmax+\"% y la humedad minima fue de \"+hmin+\"%. Se han consultado un total de \"+datos+\" datos.\\n\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1530,
        "y": 2200,
        "wires": [
            [
                "e105a4d1.1f9098"
            ]
        ]
    },
    {
        "id": "766b83ff.8b20ac",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "a6edeb78.1e5ad8",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/start",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 110,
        "y": 20,
        "wires": [
            [
                "e62f29a0.e22118"
            ],
            []
        ]
    },
    {
        "id": "b1f8420d.507e2",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/ComandosRobot",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 120,
        "y": 260,
        "wires": [
            [
                "86437a12.bbb358"
            ],
            []
        ]
    },
    {
        "id": "a64e5635.270058",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 310,
        "y": 1300,
        "wires": []
    },
    {
        "id": "957190e4.ed6e1",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado led",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Led1','Led2'],\n      ['Led3','Led4'],\n      ['Led5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué led desea apagar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 400,
        "y": 1040,
        "wires": [
            [
                "e7fa1770.1eb728"
            ]
        ]
    },
    {
        "id": "e7fa1770.1eb728",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 760,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "843ee7f4.68db78",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1510,
        "y": 880,
        "wires": []
    },
    {
        "id": "6e547ab5.3f3374",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos",
        "func": "msg6={}\n\n\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    msg6.telegram=msg.payload\n    var id = String(new Date().getTime());\n    msg1={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\n    \n    \n    \n    if(msg.payload.content === 'Led1') {\n        \n        msg1.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',1)\n        msg6.orden=true;\n        msg6.payload=msg1.payload\n        msg6.id=id\n    }\n    else if(msg.payload.content === 'Led2')     {\n        msg2.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',2)\n        msg6.orden=true;\n        msg6.payload=msg2.payload\n        msg6.id=id\n    }\n    else if(msg.payload.content === 'Led3')   {\n        msg3.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',3)\n        msg6.orden=true;\n        msg6.payload=msg3.payload\n        msg6.id=id\n    }\n    else if(msg.payload.content === 'Led4')   {\n    \n        msg4.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',4)\n        msg6.orden=true;\n        msg6.payload=msg4.payload\n        msg6.id=id\n        //msg4.id=id\n    }\n    else if(msg.payload.content === 'Led5')   {\n        msg5.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',5)\n        msg6.orden=true;\n        msg6.id=id\n    }\n    else if(msg.payload.content === 'Todos')   {\n        var id = String(new Date().getTime());\n        msg5.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',6)\n        msg6.id=id;\n        msg6.orden=true;\n        msg5=msg6;\n        msg4=msg5\n        msg3=msg5\n        msg2=msg5\n        msg1=msg5\n    }\n    \n    return [msg1,msg2,msg3,msg4,msg5,msg6]\n}\n\n\n\n\n\n",
        "outputs": 6,
        "noerr": 0,
        "x": 740,
        "y": 1140,
        "wires": [
            [
                "843ee7f4.68db78"
            ],
            [
                "65713d84.f574e4"
            ],
            [
                "3e54c2de.55ec3e"
            ],
            [
                "6842463b.c16a28",
                "a21e5ac6.337a88"
            ],
            [
                "d0a2a3e6.f4956"
            ],
            [
                "c37a1e14.9b8ac"
            ]
        ]
    },
    {
        "id": "65713d84.f574e4",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1610,
        "y": 940,
        "wires": []
    },
    {
        "id": "3e54c2de.55ec3e",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1650,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6842463b.c16a28",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1630,
        "y": 1060,
        "wires": []
    },
    {
        "id": "d0a2a3e6.f4956",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1590,
        "y": 1120,
        "wires": []
    },
    {
        "id": "58d9b28a.2ae9bc",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 350,
        "y": 1180,
        "wires": []
    },
    {
        "id": "af55a13b.2c33",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 570,
        "y": 2340,
        "wires": []
    },
    {
        "id": "5fb45e87.85fec",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado led",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Led1','Led2'],\n      ['Led3','Led4'],\n      ['Led5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué led desea encender, indicando la intensidad?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 500,
        "y": 1400,
        "wires": [
            [
                "c0ae5e2f.41a02"
            ]
        ]
    },
    {
        "id": "c0ae5e2f.41a02",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 720,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "5f782b60.f58734",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos",
        "func": "\n\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    if(msg.payload.content === 'Led1') {\n        \n        flow.set('NumLed',1)\n    }\n    else if(msg.payload.content === 'Led2')     {\n        flow.set('NumLed',2)\n    }\n    else if(msg.payload.content === 'Led3')   {\n        flow.set('NumLed',3)\n    }\n    else if(msg.payload.content === 'Led4')   {\n       flow.set('NumLed',4)\n    }\n    else if(msg.payload.content === 'Led5')   {\n        flow.set('NumLed',5)\n    }\n    else if(msg.payload.content === 'Todos')   {\n        flow.set('NumLed',6)\n    }\n    \n    msg.payload.content=\"Responde a este mensaje indicando ahora la intensidad con la que quieres que se encienda el LED, de 0 a 100\"\n    \n}\n\nreturn msg\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1480,
        "wires": [
            [
                "3862e651.e43aea"
            ]
        ]
    },
    {
        "id": "55ba8325.f2204c",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 390,
        "y": 1540,
        "wires": []
    },
    {
        "id": "3862e651.e43aea",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 710,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "877c8902.89e3d8",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "CONTROL MOVIMIENTO DEL ROBOT",
        "info": "",
        "x": 310,
        "y": 2420,
        "wires": []
    },
    {
        "id": "e1635cf3.9cd91",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1790,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "a21e5ac6.337a88",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1150,
        "y": 920,
        "wires": []
    },
    {
        "id": "f80f2359.2c5b5",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1830,
        "y": 1400,
        "wires": []
    },
    {
        "id": "93709d59.c8f95",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "DATOS_ESP1",
        "operation": "find",
        "x": 1130,
        "y": 460,
        "wires": [
            [
                "2513f67d.419fca",
                "b8e99c84.1b872"
            ]
        ]
    },
    {
        "id": "2d1a7a19.d0e326",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "FUNCIONES PRESENTACIÓN E INTRODUCCIÓN AL USUARIO",
        "info": "",
        "x": 950,
        "y": 40,
        "wires": []
    },
    {
        "id": "b96e0769.8e8f48",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "SENSORES",
        "info": "",
        "x": 370,
        "y": 400,
        "wires": []
    },
    {
        "id": "3f42de89.345c52",
        "type": "switch",
        "z": "4f3a4e93.cc8bf",
        "name": "Para elegir base de datos",
        "property": "ESP",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "ESP1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ESP2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ESP3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ESP4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ESP5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 770,
        "y": 580,
        "wires": [
            [
                "93709d59.c8f95",
                "5cf25249.7f9b5c"
            ],
            [
                "4667944d.93335c"
            ],
            [
                "2714b099.7d42c"
            ],
            [
                "a35ad9e0.a66828",
                "5cf25249.7f9b5c"
            ],
            [
                "5b45e7be.bc53a8"
            ]
        ]
    },
    {
        "id": "16648e15.4a8cb2",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 680,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "fe7fe597.bbaa08",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado led",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['ESP1','ESP2'],\n      ['ESP3'],\n      ['ESP4','ESP5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Con respecto a cual ESP querría realizar la consulta?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 420,
        "y": 500,
        "wires": [
            [
                "16648e15.4a8cb2"
            ]
        ]
    },
    {
        "id": "34dc505f.37f6b",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Indica Orden Temperatura/Humedad",
        "func": "//Filtro la base de datos y almaceno el chatId\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n}\nflow.set('Usuario',msg.payload.chatId)\nflow.set('ESP',msg.payload.content)\nflow.set('Temperatura',1)\nmsg.payload = {};\nmsg.sort = {\"date\" : -1};\nmsg.limit = 1;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 580,
        "wires": [
            [
                "3f42de89.345c52"
            ]
        ]
    },
    {
        "id": "4667944d.93335c",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "DATOS_ESP2",
        "operation": "find",
        "x": 1130,
        "y": 520,
        "wires": [
            [
                "2513f67d.419fca",
                "b8e99c84.1b872"
            ]
        ]
    },
    {
        "id": "5cf25249.7f9b5c",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 360,
        "wires": []
    },
    {
        "id": "1bd15fcc.62a84",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 770,
        "y": 720,
        "wires": []
    },
    {
        "id": "2714b099.7d42c",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "DATOS_ESP3",
        "operation": "find",
        "x": 1130,
        "y": 580,
        "wires": [
            [
                "2513f67d.419fca",
                "b8e99c84.1b872"
            ]
        ]
    },
    {
        "id": "a35ad9e0.a66828",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "DATOS_ESP4",
        "operation": "find",
        "x": 1150,
        "y": 640,
        "wires": [
            [
                "2513f67d.419fca",
                "b8e99c84.1b872"
            ]
        ]
    },
    {
        "id": "5b45e7be.bc53a8",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "DATOS_ESP5",
        "operation": "find",
        "x": 1150,
        "y": 700,
        "wires": [
            [
                "2513f67d.419fca"
            ]
        ]
    },
    {
        "id": "b8e99c84.1b872",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1630,
        "y": 700,
        "wires": []
    },
    {
        "id": "4f70e154.386af",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "Control del SWITCH",
        "info": "",
        "x": 310,
        "y": 3140,
        "wires": []
    },
    {
        "id": "a4e4a1cd.2abd2",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/apagaSwitch",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 110,
        "y": 3520,
        "wires": [
            [
                "3ba3290f.7abdb6"
            ],
            [
                "ae90c911.b54348"
            ]
        ]
    },
    {
        "id": "3ba3290f.7abdb6",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado switch",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Switch1','Switch2'],\n      ['Switch3','Switch4'],\n      ['Switch5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué switch desea apagar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 450,
        "y": 3380,
        "wires": [
            [
                "1d821906.6e3ab7"
            ]
        ]
    },
    {
        "id": "1d821906.6e3ab7",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 780,
        "y": 3420,
        "wires": [
            []
        ]
    },
    {
        "id": "ae90c911.b54348",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos",
        "func": "msg6={}\n\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    msg6.telegram=msg.payload\n    msg1={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\n    var id = String(new Date().getTime());\n    if(msg.payload.content === 'Switch1') {\n        \n        flow.set('Num',1)\n        msg1.payload={\"level\":0,\"id\":id};\n        msg6.orden=true\n        msg6.payload=msg1.payload\n        msg6.id=id;\n        \n    }\n    else if(msg.payload.content === 'Switch2')     {\n        msg2.payload={\"level\":0,\"id\":id};\n        flow.set('Num',2)\n        msg6.orden=true\n        msg6.payload=msg2.payload\n        msg6.id=id;\n    }\n    else if(msg.payload.content === 'Switch3')   {\n        msg3.payload={\"level\":0,\"id\":id};\n        flow.set('Num',3)\n        msg6.orden=true\n        msg6.payload=msg3.payload\n        msg6.id=id;\n    }\n    else if(msg.payload.content === 'Switch4')   {\n         msg4.payload={\"level\":0,\"id\":id};\n        flow.set('Num',4)\n        msg6.orden=true\n        msg6.payload=msg4.payload\n        msg6.id=id;\n    }\n    else if(msg.payload.content === 'Switch5')   {\n        msg5.payload={\"level\":0,\"id\":id};\n        flow.set('Num',5)\n        msg6.orden=true\n        msg6.payload=msg5.payload\n        msg6.id=id;\n    }\n    else if(msg.payload.content === 'Todos')   {\n        msg5.payload={\"level\":0};\n        flow.set('Num',6)\n        msg6.orden=true\n        msg6.payload=msg5.payload\n        msg6.id=id;\n        msg5=msg6\n        msg1=msg5\n        msg2=msg5\n        msg3=msg5\n        msg4=msg5;\n    }\n    return [msg1,msg2,msg3,msg4,msg5,msg6]\n}\n\n\n\n\n\n",
        "outputs": 6,
        "noerr": 0,
        "x": 420,
        "y": 3600,
        "wires": [
            [
                "238d868d.21a69a"
            ],
            [
                "60949eab.1c332"
            ],
            [
                "488a9817.deb8c8"
            ],
            [
                "e4d7811f.bc7ca"
            ],
            [
                "a8f35a.eacf8ca8"
            ],
            [
                "81d8468a.ff4e68",
                "33443db0.ff0802",
                "20b9a102.8d4d5e"
            ]
        ]
    },
    {
        "id": "60949eab.1c332",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1000,
        "y": 3580,
        "wires": []
    },
    {
        "id": "238d868d.21a69a",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1020,
        "y": 3500,
        "wires": []
    },
    {
        "id": "488a9817.deb8c8",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1000,
        "y": 3660,
        "wires": []
    },
    {
        "id": "e4d7811f.bc7ca",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 980,
        "y": 3760,
        "wires": []
    },
    {
        "id": "a8f35a.eacf8ca8",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 980,
        "y": 3840,
        "wires": []
    },
    {
        "id": "5d56f3c6.6155dc",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1450,
        "y": 4360,
        "wires": [
            []
        ]
    },
    {
        "id": "3594062b.8e3d2a",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "DATOS_ESP1",
        "operation": "aggregate",
        "x": 1010,
        "y": 2140,
        "wires": [
            [
                "35cd42c1.4a47be"
            ]
        ]
    },
    {
        "id": "3719cb70.5a1684",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "DATOS_ESP2",
        "operation": "aggregate",
        "x": 1010,
        "y": 2200,
        "wires": [
            [
                "35cd42c1.4a47be"
            ]
        ]
    },
    {
        "id": "25edc64f.9a26ba",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "DATOS_ESP3",
        "operation": "aggregate",
        "x": 1010,
        "y": 2260,
        "wires": [
            [
                "35cd42c1.4a47be"
            ]
        ]
    },
    {
        "id": "2d69ba80.0e1296",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "DATOS_ESP4",
        "operation": "aggregate",
        "x": 1010,
        "y": 2320,
        "wires": [
            [
                "35cd42c1.4a47be",
                "4fa175e2.c2276c"
            ]
        ]
    },
    {
        "id": "b64ee57d.deeb18",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "DATOS_ESP5",
        "operation": "aggregate",
        "x": 1010,
        "y": 2360,
        "wires": [
            [
                "35cd42c1.4a47be"
            ]
        ]
    },
    {
        "id": "4b8175f2.d6e94c",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos dia pregunta",
        "func": "\nhayplaca=flow.get('Placa')\nif(hayplaca==\"Ninguna\")\n{\nflow.set('Placa',msg.payload.content)\n\n\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Ayer','Hoy'],\n      ['Hace siete dias'],\n      ['Hace dos dias']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Con que antigüedad deseas realizar la consulta?';\nmsg.payload.options = opts;\nflow.set('Avanza',1)\n\nreturn [ msg ];\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 520,
        "y": 2060,
        "wires": [
            [
                "b54067e5.caf578"
            ]
        ]
    },
    {
        "id": "ebf6486b.14bb68",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 130,
        "y": 2220,
        "wires": [
            [
                "220a7fd6.5913a"
            ],
            []
        ]
    },
    {
        "id": "df75fb0c.b41708",
        "type": "switch",
        "z": "4f3a4e93.cc8bf",
        "name": "Para elegir base de datos",
        "property": "Placa",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "PLACA1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PLACA2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PLACA3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PLACA4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PLACA5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ninguna",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 670,
        "y": 2220,
        "wires": [
            [
                "3594062b.8e3d2a"
            ],
            [
                "3719cb70.5a1684"
            ],
            [
                "25edc64f.9a26ba"
            ],
            [
                "2d69ba80.0e1296"
            ],
            [
                "b64ee57d.deeb18"
            ],
            []
        ]
    },
    {
        "id": "4fa175e2.c2276c",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1530,
        "y": 2380,
        "wires": []
    },
    {
        "id": "b54067e5.caf578",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 920,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "e2295ae3.bce7a8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "58c6c9a8.b41ba8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "cbf08799.f022e8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Indica usuario que se ha encendido/apagado un led",
        "func": "var intensidad = msg.payload.level\nvar NumeroLed=flow.get('NumLed');\n\n\nif(intensidad > 0)\n{\n    if(NumeroLed==6)\n    {\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se ha recibido la orden para encender todos los LEDS a una intensidad del \"+intensidad+\"%... ten cuidado con la factura de la luz!\\n\";\n\n    return msg;\n    }\n    else\n    {\n    msg.payload={}\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se ha recibido la orden de encender al \"+intensidad+ \"% el Led\"+NumeroLed+\" \\n\";\n    return msg;\n}\n}\nelse if(intensidad===0) {\n     if(NumeroLed==6)\n    {\n    msg.payload={}\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se ha recibido la orden de apagar todos los Leds. ¡La factura de la luz te lo agradecerá!\\n\";\n        return msg;\n    }\n    else\n    {\n    msg.payload={}\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se ha recibido la de apagar el Led\"+NumeroLed+\" \\n\";\n    return msg;\n    \n    \n}\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1850,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "f3758657.2b8a08",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/enciendeSwitch",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 100,
        "y": 3900,
        "wires": [
            [
                "e438646.b503298"
            ],
            [
                "459b670.47f8398"
            ]
        ]
    },
    {
        "id": "e438646.b503298",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado switch",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Switch1','Switch2'],\n      ['Switch3','Switch4'],\n      ['Switch5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué switch desea apagar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 150,
        "y": 3720,
        "wires": [
            [
                "b1ab771f.6a2c68"
            ]
        ]
    },
    {
        "id": "b1ab771f.6a2c68",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 380,
        "y": 3760,
        "wires": [
            []
        ]
    },
    {
        "id": "81d8468a.ff4e68",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Indica al canal de difusión que se ha encendido/apagado un led",
        "func": "var intensidad = msg.payload.level\nvar NumeroLed=flow.get('Num');\nif(intensidad > 0)\n{\n    if(NumeroLed==6)\n    {\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se acaban de encender todos los Switches.\\n\";\n    return msg;\n    }\n    else\n    {\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se acaba de encender a maxima intensidad el Switch\"+NumeroLed+\" \\n\";\n    return msg;\n}\n}\nelse if(intensidad===0) {\n     if(NumeroLed==6)\n    {\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se acaban de apagar todos los Switch.\\n\";\n        return msg;\n    }\n    else\n    {\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se acaba de apagar el Switch\"+NumeroLed+\" \\n\";\n    return msg;\n    \n    \n}\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 3900,
        "wires": [
            [
                "5d56f3c6.6155dc"
            ]
        ]
    },
    {
        "id": "33443db0.ff0802",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Indica usuario que se ha encendido/apagado un led",
        "func": "var intensidad = msg.payload.level\nvar NumeroLed=flow.get('Num');\n\n\nif(intensidad > 0)\n{\n    if(NumeroLed==6)\n    {\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se ha recibido la orden correctamente. Acabas de encender todos los Switches... ten cuidado con la factura de la luz!\\n\";\n\n    return msg;\n    }\n    else\n    {\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se ha recibido la orden correctamente. Acabas de encender el Switch\"+NumeroLed+\" \\n\";\n    return msg;\n}\n}\nelse if(intensidad===0) {\n     if(NumeroLed==6)\n    {\n    msg.payload={}\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se ha recibido la orden correctamente, se acaban de apagar todos los Switches. ¡La factura de la luz te lo agradecerá!\\n\";\n        return msg;\n    }\n    else\n    {\n    msg.payload={}\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se ha recibido la orden correctamente,acabas de apagar el Switch\"+NumeroLed+\" \\n\";\n    return msg;\n    \n    \n}\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 3960,
        "wires": [
            [
                "5d56f3c6.6155dc"
            ]
        ]
    },
    {
        "id": "459b670.47f8398",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos",
        "func": "msg6={}\n\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    msg6.telegram=msg.payload\n    msg1={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\n    var id = String(new Date().getTime());\n    if(msg.payload.content === 'Switch1') {\n        \n        flow.set('Num',1)\n        msg1.payload={\"level\":1,\"id\":id};\n        msg6.orden=true\n        msg6.payload=msg1.payload\n        msg6.id=id;\n        \n    }\n    else if(msg.payload.content === 'Switch2')     {\n        msg2.payload={\"level\":1,\"id\":id};\n        flow.set('Num',2)\n        msg6.orden=true\n        msg6.payload=msg2.payload\n        msg6.id=id;\n    }\n    else if(msg.payload.content === 'Switch3')   {\n        msg3.payload={\"level\":1,\"id\":id};\n        flow.set('Num',3)\n        msg6.orden=true\n        msg6.payload=msg3.payload\n        msg6.id=id;\n    }\n    else if(msg.payload.content === 'Switch4')   {\n         msg4.payload={\"level\":1,\"id\":id};\n        flow.set('Num',4)\n        msg6.orden=true\n        msg6.payload=msg4.payload\n        msg6.id=id;\n    }\n    else if(msg.payload.content === 'Switch5')   {\n        msg5.payload={\"level\":1,\"id\":id};\n        flow.set('Num',5)\n        msg6.orden=true\n        msg6.payload=msg5.payload\n        msg6.id=id;\n    }\n    else if(msg.payload.content === 'Todos')   {\n        msg5.payload={\"level\":1};\n        flow.set('Num',6)\n        msg6.orden=true\n        msg6.payload=msg5.payload\n        msg6.id=id;\n        msg5=msg6\n        msg1=msg5\n        msg2=msg5\n        msg3=msg5\n        msg4=msg5;\n    }\n    return [msg1,msg2,msg3,msg4,msg5,msg6]\n}\n\n\n\n\n\n",
        "outputs": 6,
        "noerr": 0,
        "x": 380,
        "y": 3880,
        "wires": [
            [
                "238d868d.21a69a"
            ],
            [
                "60949eab.1c332"
            ],
            [
                "488a9817.deb8c8"
            ],
            [
                "e4d7811f.bc7ca"
            ],
            [
                "a8f35a.eacf8ca8"
            ],
            [
                "81d8468a.ff4e68",
                "20b9a102.8d4d5e"
            ]
        ]
    },
    {
        "id": "866c8437.aee248",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3780,
        "y": 380,
        "wires": []
    },
    {
        "id": "3f77d518.d8243a",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3420,
        "y": 1920,
        "wires": []
    },
    {
        "id": "221a7536.e0d6ba",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3480,
        "y": 3000,
        "wires": []
    },
    {
        "id": "462332b7.57150c",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3620,
        "y": 3860,
        "wires": []
    },
    {
        "id": "62ef540e.4953ac",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 4680,
        "y": 2460,
        "wires": []
    },
    {
        "id": "8cd95749.82c228",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero1Manual",
        "command": "/Piero1Manual",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 3050,
        "y": 80,
        "wires": [
            [
                "37c83603.6cfcda",
                "34e13498.6cf54c"
            ],
            []
        ]
    },
    {
        "id": "37c83603.6cfcda",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir1']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir -Salir del modo de conduccion manual\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT1','3')\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3410,
        "y": 200,
        "wires": [
            [
                "c24ea6f2.fce5c8"
            ]
        ]
    },
    {
        "id": "c24ea6f2.fce5c8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3760,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "bd7f4692.35d9d8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\n\nmodomanual=flow.get('ROBOT1')\n\nif(modomanual==3)\n{\n\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir1')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        flow.set('ROBOT1',0)\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3410,
        "y": 400,
        "wires": [
            [
                "c441269b.f9df88"
            ]
        ]
    },
    {
        "id": "34e13498.6cf54c",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3380,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c441269b.f9df88",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3660,
        "y": 540,
        "wires": []
    },
    {
        "id": "6d95ee5f.2678d",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Salir1",
        "command": "/Salir1",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 3030,
        "y": 560,
        "wires": [
            [
                "ed05c00c.30648",
                "7ee6703e.f6f35"
            ],
            []
        ]
    },
    {
        "id": "ed05c00c.30648",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero1Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3330,
        "y": 620,
        "wires": [
            [
                "8cd96c19.052b"
            ]
        ]
    },
    {
        "id": "8cd96c19.052b",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3640,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "7ee6703e.f6f35",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3280,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "d043cc45.290ef",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 3050,
        "y": 360,
        "wires": [
            [
                "bd7f4692.35d9d8",
                "8e117deb.64a6f"
            ],
            []
        ]
    },
    {
        "id": "8e117deb.64a6f",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero1Manual\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir1\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero1Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3400,
        "y": 340,
        "wires": [
            [
                "866c8437.aee248"
            ]
        ]
    },
    {
        "id": "c894dbd5.ae1e58",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir1 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3380,
        "y": 260,
        "wires": [
            [
                "60918d76.f076d4"
            ]
        ]
    },
    {
        "id": "8f4e9082.736fa",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero1auto",
        "command": "/Piero1Automatico",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 3030,
        "y": 200,
        "wires": [
            [
                "c894dbd5.ae1e58",
                "34e13498.6cf54c"
            ],
            []
        ]
    },
    {
        "id": "60918d76.f076d4",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 4150,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "e35a4b64.9b6c58",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/PIERO/Obstaculo",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 3090,
        "y": 740,
        "wires": [
            [
                "84805a0f.133b28"
            ]
        ]
    },
    {
        "id": "84805a0f.133b28",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3390,
        "y": 740,
        "wires": [
            [
                "4a13ec7.f197814"
            ]
        ]
    },
    {
        "id": "4a13ec7.f197814",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Obstáculos",
        "func": "if(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3640,
        "y": 720,
        "wires": [
            [
                "60918d76.f076d4"
            ]
        ]
    },
    {
        "id": "6f36ce5.10b723",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/led/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 190,
        "y": 1600,
        "wires": [
            [
                "fd20aa91.e81788"
            ]
        ]
    },
    {
        "id": "6de44599.4c682c",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/led/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 190,
        "y": 1660,
        "wires": [
            [
                "747c1f34.1cb34"
            ]
        ]
    },
    {
        "id": "a4b60a09.81d968",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/led/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 190,
        "y": 1720,
        "wires": [
            [
                "c1ae734d.b0277"
            ]
        ]
    },
    {
        "id": "46d6e25f.fc32ac",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/led/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 190,
        "y": 1780,
        "wires": [
            [
                "ec46dcc6.dbae6"
            ]
        ]
    },
    {
        "id": "5a5f3456.c258cc",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/led/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 190,
        "y": 1840,
        "wires": [
            [
                "749cdfd.0aa7d2"
            ]
        ]
    },
    {
        "id": "4db0ed04.502564",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero2Manual",
        "command": "/Piero2Manual",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2690,
        "y": 1640,
        "wires": [
            [
                "ebf3d17d.75aa2",
                "d7b12f99.f09b3"
            ],
            []
        ]
    },
    {
        "id": "ebf3d17d.75aa2",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir2']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir2 -Salir del modo de conduccion manual\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT2',3)\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3070,
        "y": 1760,
        "wires": [
            [
                "5fd129f3.c4bbf8"
            ]
        ]
    },
    {
        "id": "5fd129f3.c4bbf8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3420,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "44842de2.089aa4",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\ncosas=flow.get('ROBOT2')\nif(cosas==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir2')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        flow.set('ROBOT2',0)\n        return msg;\n        \n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3050,
        "y": 1940,
        "wires": [
            [
                "d405728e.8c6d4"
            ]
        ]
    },
    {
        "id": "d7b12f99.f09b3",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "d405728e.8c6d4",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3340,
        "y": 2080,
        "wires": []
    },
    {
        "id": "1aaffe7b.fee972",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Salir2",
        "command": "/Salir2",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2710,
        "y": 2140,
        "wires": [
            [
                "7d08b329.85cc2c",
                "1137399d.f86256"
            ],
            []
        ]
    },
    {
        "id": "7d08b329.85cc2c",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero2Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 2990,
        "y": 2180,
        "wires": [
            [
                "a2bb298a.95f2f8"
            ]
        ]
    },
    {
        "id": "a2bb298a.95f2f8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3280,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "1137399d.f86256",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2920,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "862e006b.be657",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2690,
        "y": 1880,
        "wires": [
            [
                "44842de2.089aa4",
                "1a7875ef.00cd3a"
            ],
            []
        ]
    },
    {
        "id": "1a7875ef.00cd3a",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero2Manual\" || msg.originalMessage.text==\"/PieroManual@UwU87bot\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir2\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero2Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 1880,
        "wires": [
            [
                "3f77d518.d8243a"
            ]
        ]
    },
    {
        "id": "3595c07b.f50cf",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir2 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3060,
        "y": 1820,
        "wires": [
            [
                "b87b5487.9062d8"
            ]
        ]
    },
    {
        "id": "ce4a863a.b14918",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero2auto",
        "command": "/Piero2Automatico",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2690,
        "y": 1780,
        "wires": [
            [
                "3595c07b.f50cf",
                "d7b12f99.f09b3"
            ],
            []
        ]
    },
    {
        "id": "b87b5487.9062d8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 3670,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "e43a4724.332308",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/PIERO/Obstaculo",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 2780,
        "y": 2300,
        "wires": [
            [
                "70721a58.f5dda4"
            ]
        ]
    },
    {
        "id": "70721a58.f5dda4",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3010,
        "y": 2300,
        "wires": [
            [
                "b98a4c5b.cb2be"
            ]
        ]
    },
    {
        "id": "b98a4c5b.cb2be",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Obstáculos",
        "func": "if(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3260,
        "y": 2300,
        "wires": [
            [
                "b87b5487.9062d8"
            ]
        ]
    },
    {
        "id": "95cb2c8e.a4175",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero3Manual",
        "command": "/Piero3Manual",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2750,
        "y": 2700,
        "wires": [
            [
                "bc4fbd50.c6fa9",
                "aa8acc73.f6707"
            ],
            []
        ]
    },
    {
        "id": "bc4fbd50.c6fa9",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir3']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir3 -Salir del modo de conduccion manual\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT3',3)\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3130,
        "y": 2840,
        "wires": [
            [
                "2d7daa0a.c4e0c6"
            ]
        ]
    },
    {
        "id": "2d7daa0a.c4e0c6",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3490,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "be27525e.6bf3d",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\nrobot=flow.get('ROBOT3')\nif(robot==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir3')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        flow.set('ROBOT3',0)\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3120,
        "y": 3020,
        "wires": [
            [
                "dee8e994.ac1298"
            ]
        ]
    },
    {
        "id": "aa8acc73.f6707",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3110,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "dee8e994.ac1298",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3380,
        "y": 3140,
        "wires": []
    },
    {
        "id": "38854ff3.ea732",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Salir3",
        "command": "/Salir3",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2750,
        "y": 3160,
        "wires": [
            [
                "cf70f3d0.42b99",
                "5eed92a5.57ed4c"
            ],
            []
        ]
    },
    {
        "id": "cf70f3d0.42b99",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero3Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3040,
        "y": 3240,
        "wires": [
            [
                "c3c60a68.a3d4f8"
            ]
        ]
    },
    {
        "id": "c3c60a68.a3d4f8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3350,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "5eed92a5.57ed4c",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2990,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "3a929750.37ef68",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2750,
        "y": 2960,
        "wires": [
            [
                "be27525e.6bf3d",
                "bd10e03c.d8a12"
            ],
            []
        ]
    },
    {
        "id": "bd10e03c.d8a12",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero3Manual\" || msg.originalMessage.text==\"/PieroManual@UwU87bot\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir3\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero3Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3110,
        "y": 2960,
        "wires": [
            [
                "221a7536.e0d6ba"
            ]
        ]
    },
    {
        "id": "c7404244.aa574",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir3 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3090,
        "y": 2900,
        "wires": [
            [
                "2f00aa1e.23d946"
            ]
        ]
    },
    {
        "id": "e6e9944f.956ea8",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero3auto",
        "command": "/Piero3Automatico",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2780,
        "y": 2840,
        "wires": [
            [
                "c7404244.aa574",
                "aa8acc73.f6707"
            ],
            []
        ]
    },
    {
        "id": "2f00aa1e.23d946",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 3880,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "fb89e464.c5f3a8",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/PIERO/Obstaculo",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 2760,
        "y": 3380,
        "wires": [
            [
                "f60d0a45.124f78"
            ]
        ]
    },
    {
        "id": "f60d0a45.124f78",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3080,
        "y": 3380,
        "wires": [
            [
                "46be6e97.2e4e2"
            ]
        ]
    },
    {
        "id": "46be6e97.2e4e2",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Obstáculos",
        "func": "if(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3320,
        "y": 3380,
        "wires": [
            [
                "2f00aa1e.23d946"
            ]
        ]
    },
    {
        "id": "b295723b.29516",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero4Manual",
        "command": "/Piero4Manual",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2870,
        "y": 3540,
        "wires": [
            [
                "845dfc4a.85c8b",
                "a05e200a.30e1a"
            ],
            []
        ]
    },
    {
        "id": "845dfc4a.85c8b",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir4']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir4 -Salir del modo de conduccion manual\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT4',3)\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3240,
        "y": 3680,
        "wires": [
            [
                "c026c7ee.1c7ee8"
            ]
        ]
    },
    {
        "id": "c026c7ee.1c7ee8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3590,
        "y": 3660,
        "wires": [
            []
        ]
    },
    {
        "id": "64902a42.71d7a4",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\nrobot4= flow.get('ROBOT4')\nif(robot4==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir4')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        flow.set('ROBOT4',0)\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3220,
        "y": 3860,
        "wires": [
            [
                "254981c3.ea89fe"
            ]
        ]
    },
    {
        "id": "a05e200a.30e1a",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3210,
        "y": 3620,
        "wires": [
            []
        ]
    },
    {
        "id": "254981c3.ea89fe",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3440,
        "y": 4000,
        "wires": []
    },
    {
        "id": "b7ccc964.412d28",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Salir4",
        "command": "/Salir4",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2840,
        "y": 4000,
        "wires": [
            [
                "53029390.1b4d0c",
                "a5e94432.19b4c8"
            ],
            []
        ]
    },
    {
        "id": "53029390.1b4d0c",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero4Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3140,
        "y": 4080,
        "wires": [
            [
                "ee344616.06a8c8"
            ]
        ]
    },
    {
        "id": "ee344616.06a8c8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3450,
        "y": 4080,
        "wires": [
            []
        ]
    },
    {
        "id": "a5e94432.19b4c8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3090,
        "y": 4020,
        "wires": [
            []
        ]
    },
    {
        "id": "4de6560d.28fd78",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2870,
        "y": 3800,
        "wires": [
            [
                "64902a42.71d7a4",
                "b6b0766b.434378"
            ],
            []
        ]
    },
    {
        "id": "b6b0766b.434378",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero4Manual\" || msg.originalMessage.text==\"/PieroManual@UwU87bot\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir4\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero4Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3210,
        "y": 3800,
        "wires": [
            [
                "462332b7.57150c"
            ]
        ]
    },
    {
        "id": "3fbf24df.e997fc",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir4 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3190,
        "y": 3740,
        "wires": [
            [
                "e0c0c654.77e048"
            ]
        ]
    },
    {
        "id": "f553d748.299a18",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero4auto",
        "command": "/Piero4Automatico",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2880,
        "y": 3680,
        "wires": [
            [
                "3fbf24df.e997fc",
                "a05e200a.30e1a"
            ],
            []
        ]
    },
    {
        "id": "e0c0c654.77e048",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 3980,
        "y": 3780,
        "wires": [
            []
        ]
    },
    {
        "id": "bd9e2b.5c4de1d8",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/PIERO/Obstaculo",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 2950,
        "y": 4220,
        "wires": [
            [
                "92b11ee6.05bc2"
            ]
        ]
    },
    {
        "id": "92b11ee6.05bc2",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3180,
        "y": 4220,
        "wires": [
            [
                "9a296210.b12e9"
            ]
        ]
    },
    {
        "id": "9a296210.b12e9",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Obstáculos",
        "func": "if(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3430,
        "y": 4220,
        "wires": [
            [
                "e0c0c654.77e048"
            ]
        ]
    },
    {
        "id": "c004d1f7.37d63",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero5Manual",
        "command": "/Piero5Manual",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 3970,
        "y": 2160,
        "wires": [
            [
                "e87f0a0b.f24328",
                "50911edc.abf16"
            ],
            []
        ]
    },
    {
        "id": "e87f0a0b.f24328",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir5 -Salir del modo de conduccion manual\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT5',3)\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 4340,
        "y": 2300,
        "wires": [
            [
                "600e9c91.8a9834"
            ]
        ]
    },
    {
        "id": "600e9c91.8a9834",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 4690,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "5d61ddaa.c2bc44",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\nrobot5=flow.get('ROBOT5')\nif(robot5==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir5')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 4320,
        "y": 2480,
        "wires": [
            [
                "b5dd0f70.a5b8c"
            ]
        ]
    },
    {
        "id": "50911edc.abf16",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 4310,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "b5dd0f70.a5b8c",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 4580,
        "y": 2620,
        "wires": []
    },
    {
        "id": "1fffddc5.265a42",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Salir5",
        "command": "/Salir5",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 3940,
        "y": 2620,
        "wires": [
            [
                "4fcf9a31.140b04",
                "1ad10d10.382453"
            ],
            []
        ]
    },
    {
        "id": "4fcf9a31.140b04",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero5Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 4240,
        "y": 2700,
        "wires": [
            [
                "d2b7a305.3ce25"
            ]
        ]
    },
    {
        "id": "d2b7a305.3ce25",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 4550,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "1ad10d10.382453",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 4190,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "d2f09235.59bf8",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 3890,
        "y": 2420,
        "wires": [
            [
                "5d61ddaa.c2bc44",
                "d154b3f8.9121a"
            ],
            []
        ]
    },
    {
        "id": "d154b3f8.9121a",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero5Manual\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir5\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero5Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 4310,
        "y": 2420,
        "wires": [
            [
                "62ef540e.4953ac"
            ]
        ]
    },
    {
        "id": "67c1ff4.aaa78",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir5 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 4290,
        "y": 2360,
        "wires": [
            [
                "1f63b203.56572e"
            ]
        ]
    },
    {
        "id": "877dc42.eeb4038",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero5auto",
        "command": "/Piero5Automatico",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 3970,
        "y": 2280,
        "wires": [
            [
                "67c1ff4.aaa78",
                "50911edc.abf16"
            ],
            []
        ]
    },
    {
        "id": "1f63b203.56572e",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 4890,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "7dfd9d64.1c84e4",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/PIERO/Obstaculo",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 4100,
        "y": 2800,
        "wires": [
            [
                "85147dcf.8fb37"
            ]
        ]
    },
    {
        "id": "85147dcf.8fb37",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4390,
        "y": 2800,
        "wires": [
            [
                "27c80fbf.1b5e7"
            ]
        ]
    },
    {
        "id": "27c80fbf.1b5e7",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Obstáculos",
        "func": "if(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 4840,
        "y": 2800,
        "wires": [
            [
                "1f63b203.56572e"
            ]
        ]
    },
    {
        "id": "43dc90fa.d1bf1",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robot info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te indican informacion sobre el robot. \\n\";\n msg.payload.content+=\"/Piero1Manual - te permite controlar el robot 1 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero1Automatico   -Activa el modo de funcionamiento automático del PIERO 1, donde el solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir1    - al activarlo, PIERO 1 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1610,
        "y": 120,
        "wires": [
            [
                "9c3d6659.291c48"
            ]
        ]
    },
    {
        "id": "86437a12.bbb358",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robots info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te indican informacion sobre los robots. \\n\";\n msg.payload.content+=\"/Robot1 -te indico los comandos relacionados con el PIERO 1\\n\";\n  msg.payload.content+=\"/Robot2 -te indico los comandos relacionados con el PIERO 2\\n\";\n msg.payload.content+=\"/Robot3 -te indico los comandos relacionados con el PIERO 3\\n\";\n  msg.payload.content+=\"/Robot4 -te indico los comandos relacionados con el PIERO 4\\n\";\n  msg.payload.content+=\"/Robot5 -te indico los comandos relacionados con el PIERO 5\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 240,
        "wires": [
            [
                "44648f9.8a52f7"
            ]
        ]
    },
    {
        "id": "56f1f740.297398",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Robot1",
        "command": "/Robot1",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 1390,
        "y": 120,
        "wires": [
            [
                "43dc90fa.d1bf1"
            ],
            []
        ]
    },
    {
        "id": "f172646d.af9468",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Robot2",
        "command": "/Robot2",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 1390,
        "y": 180,
        "wires": [
            [
                "9fc2d42c.b32f18"
            ],
            []
        ]
    },
    {
        "id": "9b4ed1ff.9fa2f",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Robot3",
        "command": "/Robot3",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 1390,
        "y": 240,
        "wires": [
            [
                "c69ae3d3.3d42"
            ],
            []
        ]
    },
    {
        "id": "a633cb98.786298",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Robot4",
        "command": "/Robot4",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 1390,
        "y": 300,
        "wires": [
            [
                "b0c2f32f.dba67"
            ],
            []
        ]
    },
    {
        "id": "9b8e1a60.156548",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Robot5",
        "command": "/Robot5",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 1390,
        "y": 360,
        "wires": [
            [
                "fc9cc83.362a038"
            ],
            []
        ]
    },
    {
        "id": "9fc2d42c.b32f18",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robot info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te indican informacion sobre el robot. \\n\";\n msg.payload.content+=\"/Piero2Manual - te permite controlar el robot 2 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero2Automatico   -Activa el modo de funcionamiento automático del PIERO 2, donde el solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir2    - al activarlo, PIERO 2 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1630,
        "y": 180,
        "wires": [
            [
                "9c3d6659.291c48"
            ]
        ]
    },
    {
        "id": "c69ae3d3.3d42",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robot info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te indican informacion sobre los robot. \\n\";\n msg.payload.content+=\"/Piero3Manual - te permite controlar el robot 3 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero3Automatico   -Activa el modo de funcionamiento automático del PIERO 3, donde el solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir3    - al activarlo, PIERO 3 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1630,
        "y": 220,
        "wires": [
            [
                "9c3d6659.291c48"
            ]
        ]
    },
    {
        "id": "b0c2f32f.dba67",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robot info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te indican informacion sobre el robot. \\n\";\n msg.payload.content+=\"/Piero4Manual - te permite controlar el robot 4 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero4Automatico   -Activa el modo de funcionamiento automático del PIERO 4, donde el solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir4    - al activarlo, PIERO 4 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1630,
        "y": 280,
        "wires": [
            [
                "9c3d6659.291c48"
            ]
        ]
    },
    {
        "id": "fc9cc83.362a038",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robot info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te indican informacion sobre el robot. \\n\";\n msg.payload.content+=\"/Piero5Manual - te permite controlar el robot 5 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero5Automatico   -Activa el modo de funcionamiento automático del PIERO 5, donde el solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir5    - al activarlo, PIERO 5 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1650,
        "y": 340,
        "wires": [
            [
                "9c3d6659.291c48"
            ]
        ]
    },
    {
        "id": "9c3d6659.291c48",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1950,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c1ae734d.b0277",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 1720,
        "wires": [
            [
                "131a94.980b756c",
                "c37a1e14.9b8ac",
                "4eed8cc4.e7ba04"
            ]
        ]
    },
    {
        "id": "747c1f34.1cb34",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 1660,
        "wires": [
            [
                "131a94.980b756c",
                "c37a1e14.9b8ac",
                "b1cd723d.325e3"
            ]
        ]
    },
    {
        "id": "fd20aa91.e81788",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 1600,
        "wires": [
            [
                "131a94.980b756c",
                "c37a1e14.9b8ac",
                "90a2871e.6ac6a8"
            ]
        ]
    },
    {
        "id": "749cdfd.0aa7d2",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 1840,
        "wires": [
            [
                "131a94.980b756c",
                "c37a1e14.9b8ac",
                "89715446.0ebcb8"
            ]
        ]
    },
    {
        "id": "8dc41194.8fee7",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1450,
        "y": 1300,
        "wires": []
    },
    {
        "id": "3a5b20ad.1a4bc",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Indica usuario confirmacion encendido/apagado un led",
        "func": "var intensidad = msg.payload.led\nvar NumeroLed=flow.get('NumLed');\n\n\nif(intensidad > 0)\n{\n    if(NumeroLed==6)\n    {\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Acabas de encender todos los LEDS a una intensidad del \"+intensidad+\"%... ten cuidado con la factura de la luz!\\n\";\n\n    return msg;\n    }\n    else if(NumeroLed==1 || NumeroLed==2 || NumeroLed==3 || NumeroLed==4 || NumeroLed==5)\n    {\n    msg.payload={}\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Acabas de encender al \"+intensidad+ \"% el Led\"+NumeroLed+\" \\n\";\n    return msg;\n}\n}\nelse if(intensidad===0) {\n     if(NumeroLed==6)\n    {\n    msg.payload={}\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se acaban de apagar todos los Leds. ¡La factura de la luz te lo agradecerá!\\n\";\n        return msg;\n    }\n    else if((NumeroLed==1 || NumeroLed==2 || NumeroLed==3 || NumeroLed==4 || NumeroLed==5))\n    {\n    msg.payload={}\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Acabas de apagar el Led\"+NumeroLed+\" \\n\";\n    return msg;\n    \n    \n}\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1820,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "131a94.980b756c",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 830,
        "y": 1860,
        "wires": []
    },
    {
        "id": "bab29777.322758",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Indica al canal de difusión que se ha encendido/apagado un led",
        "func": "var intensidad = msg.payload.led\nvar NumeroLed=flow.get('NumLed');\nif(intensidad > 0)\n{\n    if(NumeroLed==6)\n    {\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se acaba de ajustar a una intensidad del \"+intensidad+ \" % todos los Leds.\\n\";\n    flow.set('NumLed',80)\n    return msg;\n    }\n    else if((NumeroLed==1 || NumeroLed==2 || NumeroLed==3 || NumeroLed==4 || NumeroLed==5))\n    {\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se acaba de encender a una intensidad del \"+intensidad+ \" % el Led\"+NumeroLed+\" \\n\";\n    return msg;\n}\n}\nelse if(intensidad===0) {\n     if(NumeroLed==6)\n    {\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se acaba de apagar todos los Leds.\\n\";\n    flow.set('NumLed',80)\n        return msg;\n    }\n    else if((NumeroLed==1 || NumeroLed==2 || NumeroLed==3 || NumeroLed==4 || NumeroLed==5))\n    {\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Se acaba de apagar el Led\"+NumeroLed+\" \\n\";\n    return msg;\n    \n    \n}\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1770,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "8ca220d2.66c64",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/AjustarTemperaturaMinima",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 200,
        "y": 4420,
        "wires": [
            [
                "d6888afc.f73548"
            ],
            []
        ]
    },
    {
        "id": "41905ef.07521a",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/AjustarTemperaturaMaxima",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 180,
        "y": 4500,
        "wires": [
            [
                "12c63a0e.48f546"
            ],
            []
        ]
    },
    {
        "id": "d6888afc.f73548",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje cambio tmin",
        "func": "\n msg.payload.content=\"A qué temperatura minima te gustaría que te avisara? Responde a este mensaje indicando un valor entre 0 y 50 para cambiar la temperatura.\"\n    global.set(\"CambiandoTMIN\",1)\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 4420,
        "wires": [
            [
                "5d56f3c6.6155dc"
            ]
        ]
    },
    {
        "id": "12c63a0e.48f546",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje cambio tmax",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\":\\n\";\n msg.payload.content+=\"A qué temperatura máxima te gustaría que te avisara? Responde a este mensaje indicando un valor entre 0 y 50 para cambiar la temperatura.\"\n    global.set(\"CambiandoTMAX\",1)\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 4500,
        "wires": [
            [
                "5d56f3c6.6155dc"
            ]
        ]
    },
    {
        "id": "c87884d.8e6ad78",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 190,
        "y": 4600,
        "wires": [
            [
                "5cb441e7.9da43",
                "9319fb0c.e80f28"
            ],
            []
        ]
    },
    {
        "id": "5cb441e7.9da43",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Ajustar cosas temperatura",
        "func": "var cambiartmax=global.get('CambiandoTMAX')\nvar cambiartmin=global.get('CambiandoTMIN')\nvar temperatura=Number(msg.payload.content);\nvar temperaturaMinAct=global.get('TemperaturaMIN')\nvar temperaturaMaxAct=global.get('TemperaturaMAX')\nif(global.get('CambiandoTMAX')==1)\n{\nif(temperatura >=-10 && temperatura<=60)\n{\n\n    if(temperatura>temperaturaMinAct)\n    {\n        global.set('TemperaturaMAX',temperatura)\n        msg.payload.content=\"Se ha ajustado la temperatura máxima de aviso a \"+temperatura+\"ºC\";\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n        global.set('CambiandoTMAX',0);\n        cambiartmax=0;\n    }\n    else\n    {\n        \n        msg.payload.content=\"Se ha producido un error, la temperatura maxima introducida es menor que la temperatura mínima.\"\n        global.set('CambiandoTMAX',0)\n        cambiartmax=0;\n    }\n    \n    \n}\nif(global.get('CambiandoTMIN')==1)\n{\n    if(temperatura<=temperaturaMaxAct)\n    {\n        global.set('TemperaturaMIN',temperatura)\n        msg.payload.content=\"Se ha ajustado la temperatura minima de aviso a \"+temperatura+\"ºC\"\n        global.set('CambiandoTMIN',0)\n        cambiartmin=0;\n    }\n    else\n    {\n        msg.payload.content=\"Se ha producido un error, la temperatura minima introducida es mayor que la temperatura maxima indicada.\"\n        cambiartmin=0;\n    }\n    \n    global.set('CambiandoTMIN',0)\n    \n    \n}\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 4580,
        "wires": [
            [
                "5d56f3c6.6155dc",
                "224d4efc.692932"
            ]
        ]
    },
    {
        "id": "da16b59c.cefe58",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/AjustarHumedadMinima",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 170,
        "y": 4700,
        "wires": [
            [
                "cf17df31.f0596"
            ],
            []
        ]
    },
    {
        "id": "8ddef9c9.c53478",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/AjustarHumedadMaxima",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 170,
        "y": 4800,
        "wires": [
            [
                "1e3666ba.e08bb9"
            ],
            []
        ]
    },
    {
        "id": "cf17df31.f0596",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje cambio hmin",
        "func": "\n msg.payload.content=\"A qué humedad minima te gustaría que te avisara? Responde a este mensaje indicando un valor entre 0 y 100 para cambiar la humedad.\"\n    global.set(\"CambiandoHMIN\",1)\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 4720,
        "wires": [
            [
                "5d56f3c6.6155dc"
            ]
        ]
    },
    {
        "id": "1e3666ba.e08bb9",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje cambio hmax",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\":\\n\";\n msg.payload.content+=\"A qué humedad máxima te gustaría que te avisara? Responde a este mensaje indicando un valor entre 0 y 100 para cambiar la humedad.\"\n    global.set(\"CambiandoHMAX\",1)\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 4800,
        "wires": [
            [
                "5d56f3c6.6155dc"
            ]
        ]
    },
    {
        "id": "9319fb0c.e80f28",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Ajustar cosas humedad",
        "func": "\nvar humedad=Number(msg.payload.content);\n\nif(global.get('CambiandoHMAX')==1)\n{\nif(humedad >=0 && humedad<=100)\n{\n\n    if(humedad>global.get('HumedadMIN'))\n    {\n        global.set('HumedadMAX',humedad)\n        msg.payload.content=\"Se ha ajustado la humedad máxima de aviso a \"+humedad+\"%\";\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n        global.set('CambiandoHMAX',0);\n    }\n    else\n    {\n        \n        msg.payload.content=\"Se ha producido un error, la humedad maxima introducida es menor que la humedad mínima.\"\n        global.set('CambiandoHMAX',0)\n    }\n    \n    \n}\nif(global.get('CambiandoHMIN')==1)\n{\n    if(humedad<=global.get('HumedadMAX'))\n    {\n        global.set('HumedadMIN',humedad)\n        msg.payload.content=\"Se ha ajustado la humedad minima de aviso a \"+humedad+\"%\"\n        global.set('CambiandoHMIN',0)\n    }\n    else\n    {\n        msg.payload.content=\"Se ha producido un error, la humedad minima introducida es mayor que la humedad maxima indicada.\"\n    }\n    \n    global.set('CambiandoHMIN',0)\n    \n    \n}\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 4640,
        "wires": [
            [
                "5d56f3c6.6155dc",
                "224d4efc.692932"
            ]
        ]
    },
    {
        "id": "748a8310.6ba80c",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Apaga el led",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nvar id = String(new Date().getTime());\nif(msg.originalMessage.text==\"/apaga\" || msg.originalMessage.text==\"/apaga@UwU87bot\")\n{\n    msg.payload={\"level\":0,\"id\":id};\n    msg.topic=\"infind/GRUPO1/led/cmd\";\n// información para la función que registra la operación\nmsg.orden=true;\nmsg.id=id;\nreturn msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 697,
        "y": 1055,
        "wires": [
            []
        ]
    },
    {
        "id": "c37a1e14.9b8ac",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Registra orden/espera respuesta",
        "func": "/*\nEsta función recibe dos tipos de mensajes. Cuando se ordena un cambio en el led, \nque se trata en la parte then del if. Y cuando se recibe la confirmación del cambio, \nque se trata en la parte else del if.\nEn el primer caso (then), programamos un timeout de 3 segundos que dará un mensaje \nde error si no se recibe la confirmación. Y guardamos la información necesaria para \nhacer las gestiones posteriores.\nEn el segundo caso (else) se compruena si había una confirmación pendiente, se cancela el \ntemporizador de timeout y se da el mensaje correspondiente.\n\nEsto es un ejemplo de uso de temporizadores y almacenamiento en el contexto de un nodo función.\nTambién se muestra cómo asignar un estado al nodo.\n*/\n\n//Estas funciones son básicamente por si hubiera usuarios simultáneos\nfunction localiza_operacion(lista_operaciones, id)\n{\n    for(var i=0; i<lista_operaciones.length; i++)\n    {\n        if(lista_operaciones[i].id==id) return i;\n    }\n    return -1;\n}\n\nfunction elimina_operacion(lista_operaciones, index)\n{\n    lista_operaciones.splice(index,1);\n    context.set(\"lista_operaciones\",lista_operaciones);\n}\n\n\nif(msg.orden)\n{ // es una orden\n    var id_operacion = msg.id;\n    node.status({fill:\"yellow\", shape:\"ring\", text:\"Wait\"}); // estado del nodo\n    var id_timeout= setTimeout(function(id){    // timeout de 3 segundos\n        // is expira el temporizador, el dispositivo no responde\n        node.warn(\"ATENCION: Operacion \"+id+\" timeout\")\n        node.status({fill:\"red\", shape:\"ring\", text:\"Timeout\"});\n        //busca operación en la lista\n        var lista_operaciones = context.get(\"lista_operaciones\") || [];\n        var index=localiza_operacion(lista_operaciones, id)\n        if(index>=0)\n        {\n            msg.payload=lista_operaciones[index].telegram_info; // restaurar info telegram (chatid)\n            msg.payload.content=\"Error timeout: dispositivo no responde (id:\"+id+\")\";\n            elimina_operacion(lista_operaciones, index);\n            node.send(msg); // envía mensaje a telegram\n        }\n        else\n            node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\") \n    }, 10000, id_operacion); \n    //añade operación a la lista\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var nueva_operacion = \n      {\"id\":id_operacion, \"id_timeout\":id_timeout,\"telegram_info\":msg.telegram};\n    lista_operaciones.push(nueva_operacion);\n    context.set(\"lista_operaciones\",lista_operaciones);\n    node.warn(\"Registrada nueva operación \"+id_operacion);\n    msg.payload=msg.telegram;\n    msg.payload.content=\"Se ha enviado la petición(id:\"+id_operacion+\")\";\n    return msg;\n}\nelse\n{ // es una confirmación\n    //busca operación con esta id en la lista\n    var id=msg.payload.id;\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var index=localiza_operacion(lista_operaciones, id)\n    if(index>=0) // orden localizada\n    {\n        clearTimeout(lista_operaciones[index].id_timeout); // cancelo el temporizador\n        var status=msg.payload.led;\n        var topic=msg.topic\n        var numeroInfoLed\n        if(topic==\"infind/GRUPO1/ESP1/led/status\")\n        {\n            numeroInfoLed=1;\n        }\n        else if(topic==\"infind/GRUPO1/ESP2/led/status\")\n        {\n            \n            numeroInfoLed=2;\n        }\n        else if(topic==\"infind/GRUPO1/ESP3/led/status\")\n        {\n            \n            numeroInfoLed=3;\n        }\n        else if(topic==\"infind/GRUPO1/ESP4/led/status\")\n        {\n            \n            numeroInfoLed=4;\n        }\n        else if(topic==\"infind/GRUPO1/ESP5/led/status\")\n        {\n            \n            numeroInfoLed=5;\n        }\n        \n        msg.payload=lista_operaciones[index].telegram_info; // restaura info telegram (chatid)\n        msg.payload.content=\"Se ha procesado correctamente la orden (id:\"+id+\") el estado del LED\"+numeroInfoLed+\" actual es: \"+status+\"\";\n        elimina_operacion(lista_operaciones, index)\n        node.warn(\"Procesada respuesta operación \"+id);\n        setTimeout(function(){  // cambio estado del nodo 1.5s después para que se vea el estado anterior\n            node.status({fill:\"green\", shape:\"ring\", text:\"Ok\"});\n        }, 10000);\n        return msg; // enviar mensaje a telegram\n    }\n    else\n        node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\")\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 1380,
        "wires": [
            [
                "e1635cf3.9cd91"
            ]
        ]
    },
    {
        "id": "1449973.e899469",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "FUNCIONES PRESENTACIÓN E INTRODUCCIÓN AL USUARIO QUE INFORMAN SOBRE EL ROBOT",
        "info": "",
        "x": 1650,
        "y": 40,
        "wires": []
    },
    {
        "id": "48e06914.b7be58",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "PARTE RELACIONADA CON EL PIERO 1",
        "info": "",
        "x": 3480,
        "y": 40,
        "wires": []
    },
    {
        "id": "a18bb67e.a741d8",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "PARTE RELACIONADA CON EL PIERO 2",
        "info": "",
        "x": 3100,
        "y": 1520,
        "wires": []
    },
    {
        "id": "90a2871e.6ac6a8",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estado1",
        "rules": [
            {
                "t": "set",
                "p": "estado1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "b1cd723d.325e3",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estado2",
        "rules": [
            {
                "t": "set",
                "p": "estado2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "4eed8cc4.e7ba04",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estado3",
        "rules": [
            {
                "t": "set",
                "p": "estado3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "e5509a6d.2837d8",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estado4",
        "rules": [
            {
                "t": "set",
                "p": "estado4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "89715446.0ebcb8",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estado5",
        "rules": [
            {
                "t": "set",
                "p": "estado5",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "9fdf3f0b.8b5cb",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/estado",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 130,
        "y": 820,
        "wires": [
            [
                "58980c6b.1a30f4"
            ],
            []
        ]
    },
    {
        "id": "58980c6b.1a30f4",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado led",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Led1','Led2'],\n      ['Led3','Led4'],\n      ['Led5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué led desea apagar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 380,
        "y": 820,
        "wires": [
            [
                "e7fa1770.1eb728"
            ]
        ]
    },
    {
        "id": "7f1e0d00.bd3b84",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos",
        "func": "\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    \n    if(msg.payload.content === 'Led1') {\n        var estado=flow.get('estado1')\n        msg.payload=\"El estado del Led actual es:\"+estado.led+\" \"\n    }\n    else if(msg.payload.content === 'Led2')     {\n        \n        \n    }\n    else if(msg.payload.content === 'Led3')   {\n       \n    }\n    else if(msg.payload.content === 'Led4')   {\n     var estado=flow.get('estado1')\n        msg.payload=\"El estado del Led actual es:\"+estado4.led+\" \"\n    }\n    else if(msg.payload.content === 'Led5')   {\n        \n    }\n   \n    \n    return msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 900,
        "wires": [
            [
                "e1635cf3.9cd91"
            ]
        ]
    },
    {
        "id": "224d4efc.692932",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1280,
        "y": 4580,
        "wires": []
    },
    {
        "id": "20b9a102.8d4d5e",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Registra orden/espera respuesta",
        "func": "/*\nEsta función recibe dos tipos de mensajes. Cuando se ordena un cambio en el led, \nque se trata en la parte then del if. Y cuando se recibe la confirmación del cambio, \nque se trata en la parte else del if.\nEn el primer caso (then), programamos un timeout de 3 segundos que dará un mensaje \nde error si no se recibe la confirmación. Y guardamos la información necesaria para \nhacer las gestiones posteriores.\nEn el segundo caso (else) se compruena si había una confirmación pendiente, se cancela el \ntemporizador de timeout y se da el mensaje correspondiente.\n\nEsto es un ejemplo de uso de temporizadores y almacenamiento en el contexto de un nodo función.\nTambién se muestra cómo asignar un estado al nodo.\n*/\n\n//Estas funciones son básicamente por si hubiera usuarios simultáneos\nfunction localiza_operacion(lista_operaciones, id)\n{\n    for(var i=0; i<lista_operaciones.length; i++)\n    {\n        if(lista_operaciones[i].id==id) return i;\n    }\n    return -1;\n}\n\nfunction elimina_operacion(lista_operaciones, index)\n{\n    lista_operaciones.splice(index,1);\n    context.set(\"lista_operaciones\",lista_operaciones);\n}\n\n\nif(msg.orden)\n{ // es una orden\n    var id_operacion = msg.id;\n    node.status({fill:\"yellow\", shape:\"ring\", text:\"Wait\"}); // estado del nodo\n    var id_timeout= setTimeout(function(id){    // timeout de 3 segundos\n        // is expira el temporizador, el dispositivo no responde\n        node.warn(\"ATENCION: Operacion \"+id+\" timeout\")\n        node.status({fill:\"red\", shape:\"ring\", text:\"Timeout\"});\n        //busca operación en la lista\n        var lista_operaciones = context.get(\"lista_operaciones\") || [];\n        var index=localiza_operacion(lista_operaciones, id)\n        if(index>=0)\n        {\n            msg.payload=lista_operaciones[index].telegram_info; // restaurar info telegram (chatid)\n            msg.payload.content=\"Error timeout: dispositivo no responde (id:\"+id+\")\";\n            elimina_operacion(lista_operaciones, index);\n            node.send(msg); // envía mensaje a telegram\n        }\n        else\n            node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\") \n    }, 10000, id_operacion); \n    //añade operación a la lista\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var nueva_operacion = \n      {\"id\":id_operacion, \"id_timeout\":id_timeout,\"telegram_info\":msg.telegram};\n    lista_operaciones.push(nueva_operacion);\n    context.set(\"lista_operaciones\",lista_operaciones);\n    node.warn(\"Registrada nueva operación \"+id_operacion);\n    msg.payload=msg.telegram;\n    msg.payload.content=\"Se ha enviado la petición(id:\"+id_operacion+\")\";\n    return msg;\n}\nelse\n{ // es una confirmación\n    //busca operación con esta id en la lista\n    var id=msg.payload.id;\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var index=localiza_operacion(lista_operaciones, id)\n    if(index>=0) // orden localizada\n    {\n        clearTimeout(lista_operaciones[index].id_timeout); // cancelo el temporizador\n        var status=msg.payload.Switch\n        if (status===true)\n        {\n            status=\"Encendido\"\n        }\n        if(status===false)\n        {\n            status=\"Apagado\"\n        }\n        var topic=msg.topic\n        var numeroInfoS\n        if(topic==\"infind/GRUPO1/ESP1/switch/status\")\n        {\n            numeroInfoS=1;\n        }\n        else if(topic==\"infind/GRUPO1/ESP2/switch/status\")\n        {\n            \n            numeroInfoS=2;\n        }\n        else if(topic==\"infind/GRUPO1/ESP3/switch/status\")\n        {\n            \n            numeroInfoS=3;\n        }\n        else if(topic==\"infind/GRUPO1/ESP4/switch/status\")\n        {\n            \n            numeroInfoS=4;\n        }\n        else if(topic==\"infind/GRUPO1/ESP5/switch/status\")\n        {\n            \n            numeroInfoS=5;\n        }\n        \n        msg.payload=lista_operaciones[index].telegram_info; // restaura info telegram (chatid)\n        msg.payload.content=\"Se ha procesado correctamente la orden (id:\"+id+\") el estado del SWITCH\"+numeroInfoS+\" actual es: \"+status+\"\";\n        elimina_operacion(lista_operaciones, index)\n        node.warn(\"Procesada respuesta operación \"+id);\n        setTimeout(function(){  // cambio estado del nodo 1.5s después para que se vea el estado anterior\n            node.status({fill:\"green\", shape:\"ring\", text:\"Ok\"});\n        }, 10000);\n        return msg; // enviar mensaje a telegram\n    }\n    else\n        node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\")\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 4040,
        "wires": [
            [
                "5d56f3c6.6155dc"
            ]
        ]
    },
    {
        "id": "451b9af3.85f864",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/switch/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 160,
        "y": 4100,
        "wires": [
            [
                "11d74992.f45b56"
            ]
        ]
    },
    {
        "id": "deead72d.fbf238",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/switch/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 160,
        "y": 4160,
        "wires": [
            [
                "11d74992.f45b56"
            ]
        ]
    },
    {
        "id": "dfed33a2.d209d",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/switch/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 160,
        "y": 4220,
        "wires": [
            [
                "11d74992.f45b56"
            ]
        ]
    },
    {
        "id": "ced7999f.d223a8",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/switch/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 160,
        "y": 4280,
        "wires": [
            [
                "11d74992.f45b56"
            ]
        ]
    },
    {
        "id": "ad633379.05c0a",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/switch/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 160,
        "y": 4340,
        "wires": [
            [
                "11d74992.f45b56"
            ]
        ]
    },
    {
        "id": "11d74992.f45b56",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 4180,
        "wires": [
            [
                "20b9a102.8d4d5e",
                "224d4efc.692932"
            ]
        ]
    },
    {
        "id": "a81099d1.e12868",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos",
        "func": "msg6={}\n\n\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    msg6.telegram=msg.payload\n    var id = String(new Date().getTime());\n    msg1={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\n    \n    \n    \n    if(msg.payload.content === 'Led1') {\n        \n        msg1.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',1)\n        msg6.orden=true;\n        msg6.payload=msg1.payload\n        msg6.id=id\n    }\n    else if(msg.payload.content === 'Led2')     {\n        msg2.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',2)\n        msg6.orden=true;\n        msg6.payload=msg2.payload\n        msg6.id=id\n    }\n    else if(msg.payload.content === 'Led3')   {\n        msg3.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',3)\n        msg6.orden=true;\n        msg6.payload=msg3.payload\n        msg6.id=id\n    }\n    else if(msg.payload.content === 'Led4')   {\n    \n        msg4.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',4)\n        msg6.orden=true;\n        msg6.payload=msg4.payload\n        msg6.id=id\n        //msg4.id=id\n    }\n    else if(msg.payload.content === 'Led5')   {\n        msg5.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',5)\n        msg6.orden=true;\n        msg6.id=id\n    }\n    else if(msg.payload.content === 'Todos')   {\n        var id = String(new Date().getTime());\n        msg5.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',6)\n        msg6.id=id;\n        msg6.orden=true;\n        msg5=msg6;\n        msg4=msg5\n        msg3=msg5\n        msg2=msg5\n        msg1=msg5\n    }\n    \n    return [msg1,msg2,msg3,msg4,msg5,msg6]\n}\n\n\n\n\n\n",
        "outputs": 6,
        "noerr": 0,
        "x": 160,
        "y": 3620,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "2a1be692.da76fa",
        "type": "telegram bot",
        "z": "",
        "botname": "UwU87bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "b1e5fae2.4dc578",
        "type": "mongodb",
        "z": "",
        "hostname": "iot.ac.uma.es",
        "port": "27017",
        "db": "II1",
        "name": ""
    },
    {
        "id": "b25567ea.2cea98",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    }
]