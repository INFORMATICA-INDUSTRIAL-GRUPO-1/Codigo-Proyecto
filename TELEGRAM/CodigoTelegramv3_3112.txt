[
    {
        "id": "156707ef.eadb38",
        "type": "tab",
        "label": "TELEGRAM",
        "disabled": false,
        "info": ""
    },
    {
        "id": "16bf142d.b8d89c",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "ultimo registro",
        "func": "msg.limit=1;\nmsg.sort={\"date\":-1};\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 160,
        "wires": [
            [
                "24646128.1e01ce"
            ]
        ]
    },
    {
        "id": "319ffbc3.e4dff4",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1030,
        "y": 200,
        "wires": []
    },
    {
        "id": "b77455a7.95fa58",
        "type": "inject",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 170,
        "y": 240,
        "wires": [
            [
                "24646128.1e01ce"
            ]
        ]
    },
    {
        "id": "e4ab7f16.6dcd9",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "mensaje respuesta temperatura",
        "func": "var temp=msg.payload[0].DHT11.temp\nvar fecha=msg.payload[0].date\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nmsg.payload.content=\"La temperatura es de \"+temp+\"ºC.\\nEste dato fue obtenido el \"+fecha+\"\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 660,
        "wires": [
            [
                "1b779a8a.e1e6d5"
            ]
        ]
    },
    {
        "id": "9a3a7522.9e98d8",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/Temperatura",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 130,
        "y": 600,
        "wires": [
            [
                "f1557d71.f2b6e"
            ],
            []
        ]
    },
    {
        "id": "c5b36f60.42d9a",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/help",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 250,
        "y": 340,
        "wires": [
            [
                "3ba56957.8e8ec6"
            ]
        ]
    },
    {
        "id": "1b779a8a.e1e6d5",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1270,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "e4bb1175.35d47",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "+ fecha",
        "func": "msg.payload.date = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 80,
        "wires": [
            [
                "f6103b54.ffab18"
            ]
        ]
    },
    {
        "id": "59f5f49.c65c30c",
        "type": "json",
        "z": "156707ef.eadb38",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 40,
        "wires": [
            [
                "25fe3561.4fc9da",
                "e4bb1175.35d47"
            ]
        ]
    },
    {
        "id": "25fe3561.4fc9da",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 550,
        "y": 20,
        "wires": []
    },
    {
        "id": "d6fb1dd7.50524",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/apaga",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 130,
        "y": 1020,
        "wires": [
            [
                "dae35452.b5afc8"
            ]
        ]
    },
    {
        "id": "e750ca08.1d9808",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/enciende",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "1937c135.9c028f"
            ],
            []
        ]
    },
    {
        "id": "4e5886b.97a9278",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Identifica si llega mensaje de intensidad",
        "func": "//guardo información de telegram\n//monto mensaje para dispositivo\nmsg.telegram=msg.payload;\nvar intensidad= msg.payload.content\nvar id = String(new Date().getTime());\nif(intensidad> 0 || intensidad<=100){\n    msg.payload={\"level\":intensidad,\"id\":id};\n    msg.topic=\"infind/GRUPO1/led/cmd\";\n// información para la función que registra la operación\nmsg.orden=true;\nmsg.id=id;\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "df607db9.1bf6a",
                "6460e350.7e57ac"
            ]
        ]
    },
    {
        "id": "3d5f94ca.e423fc",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/estado",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 150,
        "y": 880,
        "wires": [
            [
                "a7b5243b.e41dc8",
                "c0815a67.eb9598"
            ],
            []
        ]
    },
    {
        "id": "a7b5243b.e41dc8",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "estado en variable flow",
        "func": "//recupero estado almacenado en flow\nvar respuesta=flow.get(\"estado\") || {\"orden\":\"No definido\",\"id\":0};\n//monto respuesta telegram\nmsg.payload.content=\"Estado del LED : \"+respuesta.led+\"\\n\";\n//var fecha2= JSON(respuesta.id);\n//var fecha = new Date(fecha2);\n//var hora=fecha.toLocaleTimeString('es-ES', { timeZone: 'Europe/Madrid', hour12: false });\n//var dia =fecha.toLocaleDateString('es-ES', { timeZone: 'Europe/Madrid' });\n//msg.payload.content+=\"Consultado : \"+hora+\" (\"+dia+\")\";\nreturn msg; // send message to telegram\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 960,
        "wires": [
            [
                "b2cc46bb.b6ac28",
                "8c177f2.549978"
            ]
        ]
    },
    {
        "id": "f1e71ad6.29e7d8",
        "type": "comment",
        "z": "156707ef.eadb38",
        "name": "Respuesta del dispositivo",
        "info": "",
        "x": 170,
        "y": 1400,
        "wires": []
    },
    {
        "id": "1a4d0699.23d9b9",
        "type": "comment",
        "z": "156707ef.eadb38",
        "name": "Control del LED",
        "info": "",
        "x": 140,
        "y": 940,
        "wires": []
    },
    {
        "id": "3ba56957.8e8ec6",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "mensaje bienvenida",
        "func": "if(msg.payload.content.substring(0,1)!=\"/\")\n{\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\" soy un bot ejecutando en NodeRED para la asignatura de Informática Industrial!Puedo responderte a estos comandos:\\n\";\n msg.payload.content+=\"/led - Te indico los distintos comandos relacionados con el control del estado del LED\\n\";\n msg.payload.content+=\"/Sensores - Te indico los distintos comandos relacionados con los sensores que tenemos disponibles\\n\";\n msg.payload.content+=\"/ListaComandos - Te indico todos los comandos disponibles.\\n\";\n msg.payload.content+=\"/ComandosRobot - Te indico todos los comandos relacionados con el control del robot PIERO\\n\";\n return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 340,
        "wires": [
            [
                "1b779a8a.e1e6d5",
                "45949173.1f822"
            ]
        ]
    },
    {
        "id": "53513a4b.b4d7b4",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1190,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "cdd5635b.c3c0c",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "",
        "func": "msg.payload={};\n\nmsg.payload.chatId=-1001354631151;\nmsg.payload.type=\"message\";\nmsg.payload.content=\"El bot publica correctamente\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 1800,
        "wires": [
            [
                "53513a4b.b4d7b4"
            ]
        ]
    },
    {
        "id": "12895cf8.7f71e3",
        "type": "inject",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 680,
        "y": 1800,
        "wires": [
            [
                "cdd5635b.c3c0c"
            ]
        ]
    },
    {
        "id": "92e8ff4.9c994",
        "type": "mqtt in",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "infind/GRUPO1/datos",
        "qos": "2",
        "broker": "fc5c9554.5f0878",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "59f5f49.c65c30c"
            ]
        ]
    },
    {
        "id": "f6103b54.ffab18",
        "type": "mongodb out",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 800,
        "y": 120,
        "wires": []
    },
    {
        "id": "6460e350.7e57ac",
        "type": "mqtt out",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "infind/GRUPO1/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "fc5c9554.5f0878",
        "x": 1130,
        "y": 1040,
        "wires": []
    },
    {
        "id": "24646128.1e01ce",
        "type": "mongodb in",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "operation": "find",
        "x": 680,
        "y": 200,
        "wires": [
            [
                "319ffbc3.e4dff4"
            ]
        ]
    },
    {
        "id": "2fdf120a.7f8c9e",
        "type": "mongodb in",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "operation": "find",
        "x": 640,
        "y": 660,
        "wires": [
            [
                "e4ab7f16.6dcd9"
            ]
        ]
    },
    {
        "id": "6cb068f7.c5ba38",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/Humedad",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 120,
        "y": 740,
        "wires": [
            [
                "3816bc9.5ef2744"
            ],
            []
        ]
    },
    {
        "id": "d81923fa.bcadc",
        "type": "inject",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 160,
        "y": 120,
        "wires": [
            [
                "16bf142d.b8d89c"
            ]
        ]
    },
    {
        "id": "f1557d71.f2b6e",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Indica Orden Temperatura",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nmsg.payload = {};\nmsg.sort = {\"date\" : -1};\nmsg.limit = 1;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 660,
        "wires": [
            [
                "2fdf120a.7f8c9e"
            ]
        ]
    },
    {
        "id": "7f85fc9.92e0804",
        "type": "mqtt in",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "infind/GRUPO1/led/status",
        "qos": "2",
        "broker": "fc5c9554.5f0878",
        "x": 150,
        "y": 1440,
        "wires": [
            [
                "fa9e7423.171bf8",
                "59ec6d48.c77154"
            ]
        ]
    },
    {
        "id": "df607db9.1bf6a",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Registra orden/espera respuesta",
        "func": "/*\nEsta función recibe dos tipos de mensajes. Cuando se ordena un cambio en el led, \nque se trata en la parte then del if. Y cuando se recibe la confirmación del cambio, \nque se trata en la parte else del if.\nEn el primer caso (then), programamos un timeout de 3 segundos que dará un mensaje \nde error si no se recibe la confirmación. Y guardamos la información necesaria para \nhacer las gestiones posteriores.\nEn el segundo caso (else) se compruena si había una confirmación pendiente, se cancela el \ntemporizador de timeout y se da el mensaje correspondiente.\n\nEsto es un ejemplo de uso de temporizadores y almacenamiento en el contexto de un nodo función.\nTambién se muestra cómo asignar un estado al nodo.\n*/\n\n//Estas funciones son básicamente por si hubiera usuarios simultáneos\nfunction localiza_operacion(lista_operaciones, id)\n{\n    for(var i=0; i<lista_operaciones.length; i++)\n    {\n        if(lista_operaciones[i].id==id) return i;\n    }\n    return -1;\n}\n\nfunction elimina_operacion(lista_operaciones, index)\n{\n    lista_operaciones.splice(index,1);\n    context.set(\"lista_operaciones\",lista_operaciones);\n}\n\n\nif(msg.orden)\n{ // es una orden\n    var id_operacion = msg.id;\n    node.status({fill:\"yellow\", shape:\"ring\", text:\"Wait\"}); // estado del nodo\n    var id_timeout= setTimeout(function(id){    // timeout de 3 segundos\n        // is expira el temporizador, el dispositivo no responde\n        node.warn(\"ATENCION: Operacion \"+id+\" timeout\")\n        node.status({fill:\"red\", shape:\"ring\", text:\"Timeout\"});\n        //busca operación en la lista\n        var lista_operaciones = context.get(\"lista_operaciones\") || [];\n        var index=localiza_operacion(lista_operaciones, id)\n        if(index>=0)\n        {\n            msg.payload=lista_operaciones[index].telegram_info; // restaurar info telegram (chatid)\n            msg.payload.content=\"Error timeout: dispositivo no responde (id:\"+id+\")\";\n            elimina_operacion(lista_operaciones, index);\n            node.send(msg); // envía mensaje a telegram\n        }\n        else\n            node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\") \n    }, 10000, id_operacion); \n    //añade operación a la lista\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var nueva_operacion = \n      {\"id\":id_operacion, \"id_timeout\":id_timeout,\"telegram_info\":msg.telegram};\n    lista_operaciones.push(nueva_operacion);\n    context.set(\"lista_operaciones\",lista_operaciones);\n    node.warn(\"Registrada nueva operación \"+id_operacion);\n    msg.payload=msg.telegram;\n    msg.payload.content=\"Orden enviada (id:\"+id_operacion+\")\";\n    return msg;\n}\nelse\n{ // es una confirmación\n    //busca operación con esta id en la lista\n    var id=msg.payload.id;\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var index=localiza_operacion(lista_operaciones, id)\n    if(index>=0) // orden localizada\n    {\n        clearTimeout(lista_operaciones[index].id_timeout); // cancelo el temporizador\n        var status=msg.payload.led;\n        msg.payload=lista_operaciones[index].telegram_info; // restaura info telegram (chatid)\n        msg.payload.content=\"Respuesta del dispositivo a la orden (id:\"+id+\"), LED : \"+status;\n        elimina_operacion(lista_operaciones, index)\n        node.warn(\"Procesada respuesta operación \"+id);\n        setTimeout(function(){  // cambio estado del nodo 1.5s después para que se vea el estado anterior\n            node.status({fill:\"green\", shape:\"ring\", text:\"Ok\"});\n        }, 10000);\n        return msg; // enviar mensaje a telegram\n    }\n    else\n        node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\")\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 1180,
        "wires": [
            [
                "7d89d854.4d97f8",
                "8c177f2.549978"
            ]
        ]
    },
    {
        "id": "872f04bf.e76658",
        "type": "change",
        "z": "156707ef.eadb38",
        "name": "guarda estado",
        "rules": [
            {
                "t": "set",
                "p": "estado",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "f15bda35.f20b78",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 1500,
        "wires": []
    },
    {
        "id": "fa9e7423.171bf8",
        "type": "json",
        "z": "156707ef.eadb38",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 1400,
        "wires": [
            [
                "df607db9.1bf6a",
                "872f04bf.e76658",
                "f15bda35.f20b78"
            ]
        ]
    },
    {
        "id": "45949173.1f822",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "9a7ac3cc.b64b",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "mensaje respuesta humedad",
        "func": "var hum=msg.payload[0].DHT11.hum\nvar fecha=msg.payload[0].date\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nmsg.payload.content=\"La humedad relativa es de \"+hum+\"%.\\nEste dato fue obtenido el \"+fecha+\"\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 740,
        "wires": [
            [
                "1b779a8a.e1e6d5"
            ]
        ]
    },
    {
        "id": "736c0137.330fd",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Humedad mayor que 90 %",
        "func": "var humedad = msg.payload.DHT11.hum\nif(humedad >= 95)\n{\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Alerta! La humedad ha alcanzado un valor de \"+humedad+ \" % \\n\";\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 40,
        "wires": [
            [
                "6f80b12a.2e8db"
            ]
        ]
    },
    {
        "id": "6f80b12a.2e8db",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1383.8964538574219,
        "y": 43.88884782791138,
        "wires": [
            []
        ]
    },
    {
        "id": "a218e2e.903f22",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Temperatura mayor que 25ºC",
        "func": "var temperatura = msg.payload.DHT11.Temp\n\nif(temperatura >= 30)\n{\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Uy! Ten cuidado que hace una temperatura de  \"+temperatura+ \"ºC. No olvides hidratarte! \\n\";\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 100,
        "wires": [
            [
                "1983fef9.2c6251"
            ]
        ]
    },
    {
        "id": "1983fef9.2c6251",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1349.8965911865234,
        "y": 133.8888063430786,
        "wires": [
            []
        ]
    },
    {
        "id": "ce18b3d7.3fbe2",
        "type": "comment",
        "z": "156707ef.eadb38",
        "name": "CHAT DIFUSIÓN TELEGRAM",
        "info": "",
        "x": 780,
        "y": 1720,
        "wires": []
    },
    {
        "id": "59ec6d48.c77154",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 410,
        "y": 1520,
        "wires": []
    },
    {
        "id": "7d89d854.4d97f8",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1130,
        "y": 1320,
        "wires": []
    },
    {
        "id": "c0815a67.eb9598",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 470,
        "y": 860,
        "wires": []
    },
    {
        "id": "45480893.ce8ae8",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/consulta",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 120,
        "y": 660,
        "wires": [
            [
                "f1557d71.f2b6e",
                "3816bc9.5ef2744"
            ],
            []
        ]
    },
    {
        "id": "92d5c455.1d8238",
        "type": "mongodb in",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "operation": "find",
        "x": 640,
        "y": 740,
        "wires": [
            [
                "9a7ac3cc.b64b"
            ]
        ]
    },
    {
        "id": "3816bc9.5ef2744",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Indica Orden Humedad",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nmsg.payload = {};\nmsg.sort = {\"date\" : -1};\nmsg.limit = 1;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 740,
        "wires": [
            [
                "92d5c455.1d8238"
            ]
        ]
    },
    {
        "id": "b2cc46bb.b6ac28",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "aef4c73e.059398",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/media",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 110,
        "y": 800,
        "wires": [
            [
                "6fbcc629.695348"
            ],
            []
        ]
    },
    {
        "id": "299cbf47.3f4b7",
        "type": "mongodb in",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "operation": "find",
        "x": 720,
        "y": 800,
        "wires": [
            [
                "32616d6a.e04be2",
                "2f13a879.77d7a8"
            ]
        ]
    },
    {
        "id": "32616d6a.e04be2",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "mensaje respuesta media",
        "func": "\nvar humedadmedia=0;\nvar temperaturamedia=0;\nvar valorestotales= msg.payload.length;\n for (var i = 0; i < msg.payload.length; i++)\n{\n    humedadmedia=humedadmedia + msg.payload[i].DHT11.hum;\n    temperaturamedia=temperaturamedia+msg.payload[i].DHT11.temp;\n}\ntemperaturamedia=temperaturamedia/i;\nhumedadmedia=humedadmedia/i;\nmsg.payload = {};\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nmsg.payload.content=\"Segun una estimación entre los datos recibidos en un periodo de treinta minutos, la humedad relativa media es de \"+humedadmedia+\"% y la temperatura media es de \"+temperaturamedia+\"ºC.\\n El numero de datos totales estimados fue de \"+valorestotales+\"\"; \n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 800,
        "wires": [
            [
                "1b779a8a.e1e6d5",
                "306dba92.a353c6"
            ]
        ]
    },
    {
        "id": "2f13a879.77d7a8",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 970,
        "y": 880,
        "wires": []
    },
    {
        "id": "6fbcc629.695348",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Consulta intervalo 5 y 15 mins",
        "func": "var ms_per_minute = 60000;\n//obtiene el timestamp actual\nvar now_ms = new Date().getTime();\nflow.set('Usuario',msg.payload.chatId)\n//crear objeto con hora de hace 5 mins\nvar oneminago = new Date(now_ms-ms_per_minute);\n\nvar treintaminsago = new Date(now_ms-30*ms_per_minute);\n\n\n// selecciona fecha posterior o igual a 5 mins\nmsg.payload ={\"$and\": [{\"date\": {\"$lte\": oneminago}}, {\"date\": {\"$gte\": treintaminsago}}]}; \nmsg.sort = {\"date\":1} ;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 800,
        "wires": [
            [
                "299cbf47.3f4b7"
            ]
        ]
    },
    {
        "id": "306dba92.a353c6",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1270,
        "y": 900,
        "wires": []
    },
    {
        "id": "1937c135.9c028f",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Mensaje a Usuario",
        "func": "\n msg.payload.content=\"Has seleccionado encender el led. Porfavor, responde a este mensaje, indicando de 0 a 100, la intensidad con la que quieres encender el led. Si quieres encenderlo al máximo, tu mensaje sería: 100\";\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1180,
        "wires": [
            [
                "8c177f2.549978"
            ]
        ]
    },
    {
        "id": "c42f8e0d.75f5b",
        "type": "telegram receiver",
        "z": "156707ef.eadb38",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 130,
        "y": 1080,
        "wires": [
            [
                "4e5886b.97a9278"
            ],
            []
        ]
    },
    {
        "id": "dae35452.b5afc8",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Apaga el led",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nvar id = String(new Date().getTime());\nif(msg.originalMessage.text==\"/apaga\" || msg.originalMessage.text==\"/apaga@UwU87bot\")\n{\n    msg.payload={\"level\":0,\"id\":id};\n    msg.topic=\"infind/GRUPO1/led/cmd\";\n// información para la función que registra la operación\nmsg.orden=true;\nmsg.id=id;\nreturn msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 1020,
        "wires": [
            [
                "6460e350.7e57ac",
                "df607db9.1bf6a"
            ]
        ]
    },
    {
        "id": "d2efa506.a1f998",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/Sensores",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 240,
        "y": 400,
        "wires": [
            [
                "21e6ccea.361f74"
            ],
            []
        ]
    },
    {
        "id": "21e6ccea.361f74",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Funcion Sensores info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te indican informacion sobre los sensores. \\n\";\n msg.payload.content+=\"/Temperatura - te indica el ultimo dato respecto a la temperatura registrada por el DHT-11\\n\";\n msg.payload.content+=\"/Humedad    - te indica el ultimo dato respecto a la humedad registrada por el DHT-11\\n\";\n msg.payload.content+=\"/consulta   - Te indico simultaneamente el ultimo dato registrado por cada sensor.\\n\";\n msg.payload.content+=\"/media   - Te indico la media de la humedad y la temperatura registrada la ultima media hora.\\n\";\n msg.payload.content+=\"/ConsultaHistorica - Te permito realizar una consulta con respecto a dias atras, donde te informaré sobre distintos aspectos de la humedad y la temperatura registrados en el periodo que me indiques.\\n\"\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 400,
        "wires": [
            [
                "1b779a8a.e1e6d5"
            ]
        ]
    },
    {
        "id": "d607961.5454c68",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/ListaComandos",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 220,
        "y": 460,
        "wires": [
            [
                "c562d394.a6217"
            ],
            []
        ]
    },
    {
        "id": "c562d394.a6217",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Funcion Lista Comandos",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico todos los comandos de los que dispongo... Usa este poder sabiamente. \\n\";\n msg.payload.content+=\"/Sensores - Te indico los distintos comandos relacionados con los sensores que tenemos disponibles\\n\";\n msg.payload.content+=\"/Temperatura - te indica el ultimo dato respecto a la temperatura registrada por el DHT-11\\n\";\n msg.payload.content+=\"/Humedad    - te indica el ultimo dato respecto a la humedad registrada por el DHT-11\\n\";\n msg.payload.content+=\"/consulta   - Te indico simultaneamente el ultimo dato registrado por cada sensor.\\n\";\n msg.payload.content+=\"/media   - Te indico la media de la humedad y la temperatura registrada la ultima media hora.\\n\";\n msg.payload.content+=\"/led - Te indico los distintos comandos relacionados con el control del estado del LED\\n\";\n msg.payload.content+=\"/enciende - enciende el led rojo a la intensidad que me indiques\\n\";\n msg.payload.content+=\"/apaga    - apaga el led rojo\\n\";\n msg.payload.content+=\"/estado   - Te indico el ultimo estado del led, indicando 0 que esta apagado, y 100 que esta encendido con maxima luminosidad.\\n\";\n msg.payload.content+=\"/ConsultaHistorica - Te permito realizar una consulta con respecto a dias atras, donde te informaré sobre distintos aspectos de la humedad y la temperatura registrados en el periodo que me indiques.\\n\"\n msg.payload.content+=\"/PieroManual - te permite controlar el robot de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/PieroAutomatico   -Activa el modo de funcionamiento automático de PIERO, donde el solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir    - al activarlo, PIERO pasa a modo reposo.\\n\";\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "1b779a8a.e1e6d5"
            ]
        ]
    },
    {
        "id": "41bdab12.7c2334",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Funcion Control Led",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te ayudan a controlar el estado del led. \\n\";\n msg.payload.content+=\"/enciende - enciende el led rojo a la intensidad que me indiques\\n\";\n msg.payload.content+=\"/apaga    - apaga el led rojo\\n\";\n msg.payload.content+=\"/estado   - Te indico el ultimo estado del led, indicando 0 que esta apagado, y 100 que esta encendido con maxima luminosidad.\\n\";\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 580,
        "wires": [
            [
                "1b779a8a.e1e6d5"
            ]
        ]
    },
    {
        "id": "ae5cd136.23999",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/led",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 330,
        "y": 580,
        "wires": [
            [
                "41bdab12.7c2334"
            ],
            []
        ]
    },
    {
        "id": "26db0758.822f88",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 680,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "c685141e.3237a8",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Ayer'],\n      ['Hace siete dias'],\n      ['Hace dos dias']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Con que antigüedad deseas realizar la consulta?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 370,
        "y": 2060,
        "wires": [
            [
                "26db0758.822f88"
            ]
        ]
    },
    {
        "id": "55d8fcb.027ba04",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "/excel",
        "command": "/excel",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 110,
        "y": 2140,
        "wires": [
            [
                "c685141e.3237a8",
                "63ea7a72.db1694"
            ],
            [
                "591b78d.8d09a88"
            ]
        ]
    },
    {
        "id": "591b78d.8d09a88",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Respondemos",
        "func": "// fecha por defecto es hoy\nvar now_ms = new Date().getTime();\nvar ahora = new Date();\nvar ms_per_minute = 60000;\nvar desde2;\n\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    \n    if(msg.payload.content === 'Ayer') {\n        desde2=ahora.getTime()-ms_per_minute*1440; //un dia tiene 1440 minutos\n    }\n    else if(msg.payload.content === 'Hace dos dias')     {\n        desde2=ahora.getTime()-ms_per_minute*1440*2; //un dia tiene 1440 minutos. Dos dias, el doble. \n    }\n    else if(msg.payload.content === 'Hace siete dias')   {\n        desde2=ahora.getTime()-ms_per_minute*1440*7 //numero de min de 1 dia * 7 dias\n    }\n}\n\n\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(desde2);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final } } },\n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"temperatura\": \"$DHT11.temp\",\n        \"humedad\": \"$DHT11.hum\",\n        }\n    },\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 2140,
        "wires": [
            [
                "9b070579.d03438"
            ]
        ]
    },
    {
        "id": "9b070579.d03438",
        "type": "mongodb in",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "operation": "aggregate",
        "x": 580,
        "y": 2180,
        "wires": [
            [
                "519011b1.7821a",
                "c0566441.8f4e98"
            ]
        ]
    },
    {
        "id": "519011b1.7821a",
        "type": "csv",
        "z": "156707ef.eadb38",
        "name": "",
        "sep": ";",
        "hdrin": "",
        "hdrout": true,
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "date, temperatura, humedad",
        "skip": 0,
        "x": 810,
        "y": 2180,
        "wires": [
            [
                "15549994.695fd6",
                "ed14f7fa.77e9e8"
            ]
        ]
    },
    {
        "id": "15549994.695fd6",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "mensaje respuesta excel",
        "func": "msg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type='document';\nmsg.payload.content='\\ufeff'+msg.payload;\nmsg.payload.document='prueba.pdf'\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 2180,
        "wires": [
            [
                "ebad9d26.1abc",
                "fc0a0ef.63d68f"
            ]
        ]
    },
    {
        "id": "ed14f7fa.77e9e8",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1030,
        "y": 2120,
        "wires": []
    },
    {
        "id": "ebad9d26.1abc",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1290,
        "y": 2020,
        "wires": []
    },
    {
        "id": "c0566441.8f4e98",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 770,
        "y": 2100,
        "wires": []
    },
    {
        "id": "8c177f2.549978",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1010,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "fc0a0ef.63d68f",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1310,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "63ea7a72.db1694",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 2240,
        "wires": [
            [
                "ffdcb46f.09f9b8"
            ]
        ]
    },
    {
        "id": "ffdcb46f.09f9b8",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 2240,
        "wires": []
    },
    {
        "id": "a86fe1ed.4b99",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "/ConsultaHistorica",
        "command": "/ConsultaHistorica",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 130,
        "y": 2420,
        "wires": [
            [
                "d2038cc3.a74b5",
                "b07f574a.b61b68"
            ],
            [
                "8c7ded3d.ec30d"
            ]
        ]
    },
    {
        "id": "d2038cc3.a74b5",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Ayer','Hoy'],\n      ['Hace siete dias'],\n      ['Hace dos dias']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Con que antigüedad deseas realizar la consulta?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 410,
        "y": 2340,
        "wires": [
            [
                "c0c23fcf.d5ff9"
            ]
        ]
    },
    {
        "id": "c0c23fcf.d5ff9",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 680,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "8c7ded3d.ec30d",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Respondemos",
        "func": "// fecha por defecto es hoy\nvar now_ms = new Date().getTime();\nvar ahora = new Date();\nvar ms_per_minute = 60000;\nvar desde2;\n\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    \n    if(msg.payload.content === 'Ayer') {\n        desde2=ahora.getTime()-ms_per_minute*1440; //un dia tiene 1440 minutos\n    }\n    else if(msg.payload.content==='Hoy'){\n        \n        desde2=ahora;\n    }\n    else if(msg.payload.content === 'Hace dos dias')     {\n        desde2=ahora.getTime()-ms_per_minute*1440*2; //un dia tiene 1440 minutos. Dos dias, el doble. \n    }\n    else if(msg.payload.content === 'Hace siete dias')   {\n        desde2=ahora.getTime()-ms_per_minute*1440*7 //numero de min de 1 dia * 7 dias\n    }\n}\n\n\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(desde2);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final } } },\n    { \"$project\": {\n        \"temperatura\": \"$DHT11.temp\",\n        \"humedad\":\"$DHT11.hum\"\n        }\n    },\n    { \"$group\": {\n        \"_id\": 0,\n        \"Tmedia\":{\"$avg\":\"$temperatura\"},\n        \"Tmax\":  {\"$max\":\"$temperatura\"},\n        \"Tmin\":  {\"$min\":\"$temperatura\"},\n        \"Hmedia\":{\"$avg\":\"$humedad\"},\n        \"Hmax\":  {\"$max\":\"$humedad\"},\n        \"Hmin\":  {\"$min\":\"$humedad\"},\n        \"datos\": {\"$sum\":1}\n    }}\n];\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 2440,
        "wires": [
            [
                "b6eaefcb.1a815"
            ]
        ]
    },
    {
        "id": "b6eaefcb.1a815",
        "type": "mongodb in",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "operation": "aggregate",
        "x": 620,
        "y": 2420,
        "wires": [
            [
                "9dadd038.baeb2",
                "e267ef19.662d5"
            ]
        ]
    },
    {
        "id": "9dadd038.baeb2",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "mensaje respuesta agreg",
        "func": "var tmedia=msg.payload[0].Tmedia\nvar tmax= msg.payload[0].Tmax\nvar tmin= msg.payload[0].Tmin\nvar hmedia=msg.payload[0].Hmedia\nvar hmax= msg.payload[0].Hmax\nvar hmin= msg.payload[0].Hmin\nvar datos= msg.payload[0].datos\n\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nmsg.payload.content=\"La temperatura media es de \"+tmedia+\"ºC.\\nLa temperatura maxima fue de \"+tmax+\"ºC y la minima fue de \"+tmin+\"ºC.\\nRespecto a la humedad, la humedad media es de \"+hmedia+\". La humedad maxima fue de \"+hmax+\"% y la humedad minima fue de \"+hmin+\"%. Se han consultado un total de \"+datos+\" datos.\\n\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 2440,
        "wires": [
            [
                "fc0a0ef.63d68f"
            ]
        ]
    },
    {
        "id": "e267ef19.662d5",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 930,
        "y": 2360,
        "wires": []
    },
    {
        "id": "b07f574a.b61b68",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "a8c8bbf1.182678",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "/PieroManual",
        "command": "/PieroManual",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 110,
        "y": 2720,
        "wires": [
            [
                "88a16cc1.b9ce6",
                "6cdb88bf.c88598",
                "c78137c.7c0d3c8",
                "f1f7764f.542888"
            ],
            []
        ]
    },
    {
        "id": "88a16cc1.b9ce6",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = 'W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D- Gira hacia la derecha \\n S- Reduce velocidad \\n Stop- Para el PIERO\\n -/Salir-Salir del modo de conduccion manual';\nmsg.payload.options = opts;\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 490,
        "y": 2740,
        "wires": [
            [
                "add1a31b.c2f6d",
                "b7bbe8b7.20bc58"
            ]
        ]
    },
    {
        "id": "add1a31b.c2f6d",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 860,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "7e6ca8b6.ba7f48",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\n\nif (context.global.keyboard.pending) {\n    \n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n    }\n    else if(msg.payload.content === '/Salir')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        \n    }\n}\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 2900,
        "wires": [
            [
                "e93946c4.69d7d8"
            ]
        ]
    },
    {
        "id": "6cdb88bf.c88598",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "e93946c4.69d7d8",
        "type": "mqtt out",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "infind/GRUPO1/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 700,
        "y": 3040,
        "wires": []
    },
    {
        "id": "b7bbe8b7.20bc58",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 870,
        "y": 2680,
        "wires": []
    },
    {
        "id": "febc24a2.cae418",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "/Salir",
        "command": "/Salir",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 130,
        "y": 3160,
        "wires": [
            [
                "cdd05464.f41998",
                "b2e5fc00.59a7e"
            ],
            []
        ]
    },
    {
        "id": "cdd05464.f41998",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/PieroManual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 410,
        "y": 3160,
        "wires": [
            [
                "11428a10.6707a6"
            ]
        ]
    },
    {
        "id": "11428a10.6707a6",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 740,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "b2e5fc00.59a7e",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 3060,
        "wires": [
            []
        ]
    },
    {
        "id": "10fffc6e.9325b4",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\n\nif (context.global.keyboard.pending) {\n    \n    \n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg2={};\n        msg.payload={\"orden\": 8};\n        msg2.payload.chatId=flow.get('Usuario' || 0);\n        msg2.payload.type=\"message\";\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        msg2.payload.chatId=flow.get('Usuario' || 0);\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        msg2=msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n    }\n    else if(msg.payload.content === 'FIN')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = true;\n    }\n}\n\nreturn [msg,msg2];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 630,
        "y": 2680,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "be333968.c1fee8",
        "type": "telegram receiver",
        "z": "156707ef.eadb38",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 130,
        "y": 2880,
        "wires": [
            [
                "7e6ca8b6.ba7f48",
                "f1f7764f.542888"
            ],
            []
        ]
    },
    {
        "id": "c78137c.7c0d3c8",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 410,
        "y": 2600,
        "wires": []
    },
    {
        "id": "f1f7764f.542888",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nvar id = String(new Date().getTime());\nif(msg.originalMessage.text==\"/PieroManual\" || msg.originalMessage.text==\"/PieroManual@UwU87bot\")\n{\n    msg.payload={\"Modo\":1,\"id\":id};\n    msg.topic=\"infind/GRUPO1/PIERO/Modo\"\n// información para la función que registra la operación\nmsg.orden=true;\nmsg.id=id;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir\")\n{\n    msg.payload={\"Modo\":0,\"id\":id};\n    msg.topic=\"infind/GRUPO1/PIERO/Modo\"\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 2820,
        "wires": [
            [
                "b2b059b9.0678e8"
            ]
        ]
    },
    {
        "id": "b2b059b9.0678e8",
        "type": "mqtt out",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "infind/GRUPO1/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 780,
        "y": 2820,
        "wires": []
    },
    {
        "id": "7baaf85d.1af248",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/start",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 290,
        "y": 280,
        "wires": [
            [
                "3ba56957.8e8ec6"
            ]
        ]
    },
    {
        "id": "d6c3394b.23c588",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/ComandosRobot",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 220,
        "y": 520,
        "wires": [
            [
                "e68fbcd9.01b64"
            ]
        ]
    },
    {
        "id": "e68fbcd9.01b64",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Funcion Sensores info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te indican informacion sobre los sensores. \\n\";\n msg.payload.content+=\"/PieroManual - te permite controlar el robot de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/PieroAutomatico   -Activa el modo de funcionamiento automático de PIERO, donde el solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir    - al activarlo, PIERO pasa a modo reposo.\\n\";\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 520,
        "wires": [
            [
                "1b779a8a.e1e6d5"
            ]
        ]
    },
    {
        "id": "2a1be692.da76fa",
        "type": "telegram bot",
        "z": "",
        "botname": "UwU87bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "fc5c9554.5f0878",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b1e5fae2.4dc578",
        "type": "mongodb",
        "z": "",
        "hostname": "iot.ac.uma.es",
        "port": "27017",
        "db": "II1",
        "name": ""
    },
    {
        "id": "b25567ea.2cea98",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    }
]
