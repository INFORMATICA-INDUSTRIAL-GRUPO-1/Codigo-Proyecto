[
    {
        "id": "156707ef.eadb38",
        "type": "tab",
        "label": "TELEGRAM",
        "disabled": false,
        "info": ""
    },
    {
        "id": "16bf142d.b8d89c",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "ultimo registro",
        "func": "msg.limit=1;\nmsg.sort={\"date\":-1};\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "24646128.1e01ce"
            ]
        ]
    },
    {
        "id": "319ffbc3.e4dff4",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 934.0004196166992,
        "y": 316.0000591278076,
        "wires": []
    },
    {
        "id": "b77455a7.95fa58",
        "type": "inject",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 170,
        "y": 240,
        "wires": [
            [
                "24646128.1e01ce"
            ]
        ]
    },
    {
        "id": "e4ab7f16.6dcd9",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "mensaje respuesta temperatura",
        "func": "var temp=msg.payload[0].DHT11.temp\nvar fecha=msg.payload[0].date\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nmsg.payload.content=\"La temperatura es de \"+temp+\"ºC\\n.Este dato fue obtenido el \"+fecha+\"\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 660,
        "wires": [
            [
                "1b779a8a.e1e6d5"
            ]
        ]
    },
    {
        "id": "ef8d6633.2e27a8",
        "type": "telegram receiver",
        "z": "156707ef.eadb38",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 210,
        "y": 340,
        "wires": [
            [],
            [
                "3ba56957.8e8ec6"
            ]
        ]
    },
    {
        "id": "9a3a7522.9e98d8",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/Temperatura",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 150,
        "y": 560,
        "wires": [
            [
                "f1557d71.f2b6e",
                "ba8282d7.edd49"
            ],
            []
        ]
    },
    {
        "id": "c5b36f60.42d9a",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/start",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 210,
        "y": 440,
        "wires": [
            [
                "3ba56957.8e8ec6"
            ],
            []
        ]
    },
    {
        "id": "1b779a8a.e1e6d5",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1270,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "e4bb1175.35d47",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "+ fecha",
        "func": "msg.payload.date = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 80,
        "wires": [
            [
                "f6103b54.ffab18"
            ]
        ]
    },
    {
        "id": "59f5f49.c65c30c",
        "type": "json",
        "z": "156707ef.eadb38",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 40,
        "wires": [
            [
                "25fe3561.4fc9da",
                "e4bb1175.35d47"
            ]
        ]
    },
    {
        "id": "25fe3561.4fc9da",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 550,
        "y": 20,
        "wires": []
    },
    {
        "id": "8c177f2.549978",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1010,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "d6fb1dd7.50524",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/apaga",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 210,
        "y": 1180,
        "wires": [
            [
                "4e5886b.97a9278"
            ],
            []
        ]
    },
    {
        "id": "e750ca08.1d9808",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/enciende",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "4e5886b.97a9278",
                "97e89f69.3d7cb"
            ],
            []
        ]
    },
    {
        "id": "4e5886b.97a9278",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "procesa orden",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nvar id = String(new Date().getTime());\nif(msg.originalMessage.text==\"/enciende\")\n    msg.payload={\"level\":100,\"id\":id};\nelse\n    msg.payload={\"level\":0,\"id\":id};\nmsg.topic=\"infind/GRUPO1/led/cmd\";\n// información para la función que registra la operación\nmsg.orden=true;\nmsg.id=id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 1180,
        "wires": [
            [
                "b477b97f.afada8",
                "df607db9.1bf6a",
                "6460e350.7e57ac"
            ]
        ]
    },
    {
        "id": "3d5f94ca.e423fc",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/estado",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 130,
        "y": 980,
        "wires": [
            [
                "a7b5243b.e41dc8",
                "c0815a67.eb9598"
            ],
            []
        ]
    },
    {
        "id": "a7b5243b.e41dc8",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "estado en variable flow",
        "func": "//recupero estado almacenado en flow\nvar respuesta=flow.get(\"estado\") || {\"orden\":\"No definido\",\"id\":0};\n//monto respuesta telegram\nmsg.payload.content=\"Estado del LED : \"+respuesta.led+\"\\n\";\nvar fecha2= JSON(respuesta.id);\nvar fecha = new Date(fecha2);\nvar hora=fecha.toLocaleTimeString('es-ES', { timeZone: 'Europe/Madrid', hour12: false });\nvar dia =fecha.toLocaleDateString('es-ES', { timeZone: 'Europe/Madrid' });\nmsg.payload.content+=\"Consultado : \"+hora+\" (\"+dia+\")\";\nreturn msg; // send message to telegram\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 1080,
        "wires": [
            [
                "8c177f2.549978",
                "b2cc46bb.b6ac28"
            ]
        ]
    },
    {
        "id": "f1e71ad6.29e7d8",
        "type": "comment",
        "z": "156707ef.eadb38",
        "name": "Respuesta del dispositivo",
        "info": "",
        "x": 190,
        "y": 1380,
        "wires": []
    },
    {
        "id": "1a4d0699.23d9b9",
        "type": "comment",
        "z": "156707ef.eadb38",
        "name": "Control del LED",
        "info": "",
        "x": 560,
        "y": 1120,
        "wires": []
    },
    {
        "id": "b477b97f.afada8",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 1260,
        "wires": []
    },
    {
        "id": "3ba56957.8e8ec6",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "mensaje bienvenida",
        "func": "if(msg.payload.content.substring(0,1)!=\"/\")\n{\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\" soy un bot ejecutando en NodeRED para la asignatura de Informática Industrial!. Puedo responderte a estos comandos:\\n/start\\n/consulta\\n\";\n msg.payload.content+=\"/enciende - enciende el led rojo\\n\";\n msg.payload.content+=\"/apaga    - apaga el led rojo\\n\";\n msg.payload.content+=\"/estado   - último estado recibido del led\\n\";\n msg.payload.content+=\"/Temperatura - Te indico la temperatura registrada en la sala\\n\";\n msg.payload.content+=\"/Humedad - Te indico la humedad relativa registrada en la sala\\n\";\n msg.payload.content+=\"/tiempo - Te indico el tiempo en Malaga\\n\";\n msg.payload.content+=\"/media - Te indico la media de los sensores recibida en los ultimos 30 minutos\\n\";\n return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 420,
        "wires": [
            [
                "1b779a8a.e1e6d5",
                "45949173.1f822"
            ]
        ]
    },
    {
        "id": "53513a4b.b4d7b4",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 836.8402709960938,
        "y": 1827.5520906448364,
        "wires": [
            []
        ]
    },
    {
        "id": "cdd5635b.c3c0c",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "",
        "func": "msg.payload={};\n\nmsg.payload.chatId=-1001354631151;\nmsg.payload.type=\"message\";\nmsg.payload.content=\"El bot publica correctamente\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530.8368339538574,
        "y": 1820.1946396827698,
        "wires": [
            [
                "53513a4b.b4d7b4"
            ]
        ]
    },
    {
        "id": "12895cf8.7f71e3",
        "type": "inject",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 233.82643508911133,
        "y": 1820.1807250976562,
        "wires": [
            [
                "cdd5635b.c3c0c"
            ]
        ]
    },
    {
        "id": "92e8ff4.9c994",
        "type": "mqtt in",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "infind/GRUPO1/datos",
        "qos": "2",
        "broker": "fc5c9554.5f0878",
        "x": 160,
        "y": 40,
        "wires": [
            [
                "59f5f49.c65c30c"
            ]
        ]
    },
    {
        "id": "f6103b54.ffab18",
        "type": "mongodb out",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 800,
        "y": 140,
        "wires": []
    },
    {
        "id": "6460e350.7e57ac",
        "type": "mqtt out",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "infind/GRUPO1/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "fc5c9554.5f0878",
        "x": 730,
        "y": 1180,
        "wires": []
    },
    {
        "id": "24646128.1e01ce",
        "type": "mongodb in",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "operation": "find",
        "x": 587.840202331543,
        "y": 293.83340644836426,
        "wires": [
            [
                "319ffbc3.e4dff4"
            ]
        ]
    },
    {
        "id": "2fdf120a.7f8c9e",
        "type": "mongodb in",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "operation": "find",
        "x": 640,
        "y": 660,
        "wires": [
            [
                "e4ab7f16.6dcd9",
                "27321e50.12e472"
            ]
        ]
    },
    {
        "id": "6cb068f7.c5ba38",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/Humedad",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 100,
        "y": 740,
        "wires": [
            [
                "3816bc9.5ef2744"
            ],
            []
        ]
    },
    {
        "id": "d81923fa.bcadc",
        "type": "inject",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 160,
        "y": 160,
        "wires": [
            [
                "16bf142d.b8d89c"
            ]
        ]
    },
    {
        "id": "f1557d71.f2b6e",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Indica Orden Temperatura",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nmsg.payload = {};\nmsg.sort = {\"date\" : -1};\nmsg.limit = 1;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 660,
        "wires": [
            [
                "2fdf120a.7f8c9e",
                "28d91930.36c1f6"
            ]
        ]
    },
    {
        "id": "7f85fc9.92e0804",
        "type": "mqtt in",
        "z": "156707ef.eadb38",
        "name": "",
        "topic": "infind/GRUPO1/led/status",
        "qos": "2",
        "broker": "fc5c9554.5f0878",
        "x": 190,
        "y": 1440,
        "wires": [
            [
                "fa9e7423.171bf8",
                "59ec6d48.c77154"
            ]
        ]
    },
    {
        "id": "df607db9.1bf6a",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Registra orden/espera respuesta",
        "func": "/*\nEsta función recibe dos tipos de mensajes. Cuando se ordena un cambio en el led, \nque se trata en la parte then del if. Y cuando se recibe la confirmación del cambio, \nque se trata en la parte else del if.\nEn el primer caso (then), programamos un timeout de 3 segundos que dará un mensaje \nde error si no se recibe la confirmación. Y guardamos la información necesaria para \nhacer las gestiones posteriores.\nEn el segundo caso (else) se compruena si había una confirmación pendiente, se cancela el \ntemporizador de timeout y se da el mensaje correspondiente.\n\nEsto es un ejemplo de uso de temporizadores y almacenamiento en el contexto de un nodo función.\nTambién se muestra cómo asignar un estado al nodo.\n*/\n\n//Estas funciones son básicamente por si hubiera usuarios simultáneos\nfunction localiza_operacion(lista_operaciones, id)\n{\n    for(var i=0; i<lista_operaciones.length; i++)\n    {\n        if(lista_operaciones[i].id==id) return i;\n    }\n    return -1;\n}\n\nfunction elimina_operacion(lista_operaciones, index)\n{\n    lista_operaciones.splice(index,1);\n    context.set(\"lista_operaciones\",lista_operaciones);\n}\n\n\nif(msg.orden)\n{ // es una orden\n    var id_operacion = msg.id;\n    node.status({fill:\"yellow\", shape:\"ring\", text:\"Wait\"}); // estado del nodo\n    var id_timeout= setTimeout(function(id){    // timeout de 3 segundos\n        // is expira el temporizador, el dispositivo no responde\n        node.warn(\"ATENCION: Operacion \"+id+\" timeout\")\n        node.status({fill:\"red\", shape:\"ring\", text:\"Timeout\"});\n        //busca operación en la lista\n        var lista_operaciones = context.get(\"lista_operaciones\") || [];\n        var index=localiza_operacion(lista_operaciones, id)\n        if(index>=0)\n        {\n            msg.payload=lista_operaciones[index].telegram_info; // restaurar info telegram (chatid)\n            msg.payload.content=\"Error timeout: dispositivo no responde (id:\"+id+\")\";\n            elimina_operacion(lista_operaciones, index);\n            node.send(msg); // envía mensaje a telegram\n        }\n        else\n            node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\") \n    }, 10000, id_operacion); \n    //añade operación a la lista\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var nueva_operacion = \n      {\"id\":id_operacion, \"id_timeout\":id_timeout,\"telegram_info\":msg.telegram};\n    lista_operaciones.push(nueva_operacion);\n    context.set(\"lista_operaciones\",lista_operaciones);\n    node.warn(\"Registrada nueva operación \"+id_operacion);\n    msg.payload=msg.telegram;\n    msg.payload.content=\"Orden enviada (id:\"+id_operacion+\")\";\n    return msg;\n}\nelse\n{ // es una confirmación\n    //busca operación con esta id en la lista\n    var id=msg.payload.id;\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var index=localiza_operacion(lista_operaciones, id)\n    if(index>=0) // orden localizada\n    {\n        clearTimeout(lista_operaciones[index].id_timeout); // cancelo el temporizador\n        var status=msg.payload.led;\n        msg.payload=lista_operaciones[index].telegram_info; // restaura info telegram (chatid)\n        msg.payload.content=\"Respuesta del dispositivo a la orden (id:\"+id+\"), LED : \"+status;\n        elimina_operacion(lista_operaciones, index)\n        node.warn(\"Procesada respuesta operación \"+id);\n        setTimeout(function(){  // cambio estado del nodo 1.5s después para que se vea el estado anterior\n            node.status({fill:\"green\", shape:\"ring\", text:\"Ok\"});\n        }, 10000);\n        return msg; // enviar mensaje a telegram\n    }\n    else\n        node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\")\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1360,
        "wires": [
            [
                "8c177f2.549978",
                "7d89d854.4d97f8"
            ]
        ]
    },
    {
        "id": "872f04bf.e76658",
        "type": "change",
        "z": "156707ef.eadb38",
        "name": "guarda estado",
        "rules": [
            {
                "t": "set",
                "p": "estado",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "f15bda35.f20b78",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 1500,
        "wires": []
    },
    {
        "id": "fa9e7423.171bf8",
        "type": "json",
        "z": "156707ef.eadb38",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 1400,
        "wires": [
            [
                "df607db9.1bf6a",
                "872f04bf.e76658",
                "f15bda35.f20b78"
            ]
        ]
    },
    {
        "id": "28d91930.36c1f6",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 500,
        "wires": []
    },
    {
        "id": "27321e50.12e472",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 870,
        "y": 560,
        "wires": []
    },
    {
        "id": "ba8282d7.edd49",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 370,
        "y": 540,
        "wires": []
    },
    {
        "id": "45949173.1f822",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 360,
        "wires": []
    },
    {
        "id": "9a7ac3cc.b64b",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "mensaje respuesta humedad",
        "func": "var hum=msg.payload[0].DHT11.hum\nvar fecha=msg.payload[0].date\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nmsg.payload.content=\"La humedad relativa es de \"+hum+\"%\\n Este dato fue obtenido el \"+fecha+\"\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 740,
        "wires": [
            [
                "1b779a8a.e1e6d5"
            ]
        ]
    },
    {
        "id": "736c0137.330fd",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Humedad mayor que 90 %",
        "func": "var humedad = msg.payload.DHT11.hum\nif(humedad >= 95)\n{\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Alerta! La humedad ha alcanzado un valor de \"+humedad+ \" % \\n\";\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1080,
        "y": 40,
        "wires": [
            [
                "6f80b12a.2e8db"
            ]
        ]
    },
    {
        "id": "6f80b12a.2e8db",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1383.8964538574219,
        "y": 43.88884782791138,
        "wires": [
            []
        ]
    },
    {
        "id": "a218e2e.903f22",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Temperatura mayor que 25ºC",
        "func": "var temperatura = msg.payload.DHT11.Temp\n\nif(temperatura >= 30)\n{\n    msg.payload={}\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"Uy! Ten cuidado que hace una temperatura de  \"+temperatura+ \"ºC. No olvides hidratarte! \\n\";\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 100,
        "wires": [
            [
                "1983fef9.2c6251"
            ]
        ]
    },
    {
        "id": "1983fef9.2c6251",
        "type": "telegram sender",
        "z": "156707ef.eadb38",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1349.8965911865234,
        "y": 133.8888063430786,
        "wires": [
            []
        ]
    },
    {
        "id": "ce18b3d7.3fbe2",
        "type": "comment",
        "z": "156707ef.eadb38",
        "name": "CHAT DIFUSIÓN TELEGRAM",
        "info": "",
        "x": 359.89593505859375,
        "y": 1726.9999160766602,
        "wires": []
    },
    {
        "id": "59ec6d48.c77154",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 410,
        "y": 1520,
        "wires": []
    },
    {
        "id": "7d89d854.4d97f8",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1092.895938873291,
        "y": 1342.666561126709,
        "wires": []
    },
    {
        "id": "c0815a67.eb9598",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 330,
        "y": 980,
        "wires": []
    },
    {
        "id": "97e89f69.3d7cb",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 390,
        "y": 1280,
        "wires": []
    },
    {
        "id": "45480893.ce8ae8",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/consulta",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 120,
        "y": 640,
        "wires": [
            [
                "f1557d71.f2b6e",
                "3816bc9.5ef2744"
            ],
            []
        ]
    },
    {
        "id": "92d5c455.1d8238",
        "type": "mongodb in",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "operation": "find",
        "x": 640,
        "y": 740,
        "wires": [
            [
                "9a7ac3cc.b64b"
            ]
        ]
    },
    {
        "id": "3816bc9.5ef2744",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Indica Orden Humedad",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nmsg.payload = {};\nmsg.sort = {\"date\" : -1};\nmsg.limit = 1;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 740,
        "wires": [
            [
                "92d5c455.1d8238"
            ]
        ]
    },
    {
        "id": "b2cc46bb.b6ac28",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 980,
        "wires": []
    },
    {
        "id": "aef4c73e.059398",
        "type": "telegram command",
        "z": "156707ef.eadb38",
        "name": "",
        "command": "/media",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 110,
        "y": 840,
        "wires": [
            [
                "6fbcc629.695348"
            ],
            []
        ]
    },
    {
        "id": "299cbf47.3f4b7",
        "type": "mongodb in",
        "z": "156707ef.eadb38",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "II1",
        "operation": "find",
        "x": 740,
        "y": 840,
        "wires": [
            [
                "32616d6a.e04be2",
                "2f13a879.77d7a8"
            ]
        ]
    },
    {
        "id": "32616d6a.e04be2",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "mensaje respuesta media",
        "func": "\nvar humedadmedia=0;\nvar temperaturamedia=0;\nvar valorestotales= msg.payload.length;\n for (var i = 0; i < msg.payload.length; i++)\n{\n    humedadmedia=humedadmedia + msg.payload[i].DHT11.hum;\n    temperaturamedia=temperaturamedia+msg.payload[i].DHT11.temp;\n}\ntemperaturamedia=temperaturamedia/i;\nhumedadmedia=humedadmedia/i;\nmsg.payload = {};\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nmsg.payload.content=\"Segun una estimación entre los datos recibidos en un periodo de treinta minutos, la humedad relativa media es de \"+humedadmedia+\"% y la temperatura media es de \"+temperaturamedia+\"ºC.\\n El numero de datos totales estimados fue de \"+valorestotales+\"\"; \n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 820,
        "wires": [
            [
                "1b779a8a.e1e6d5",
                "306dba92.a353c6"
            ]
        ]
    },
    {
        "id": "2f13a879.77d7a8",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 990,
        "y": 920,
        "wires": []
    },
    {
        "id": "8f742a30.ab8ae8",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 710,
        "y": 780,
        "wires": []
    },
    {
        "id": "6fbcc629.695348",
        "type": "function",
        "z": "156707ef.eadb38",
        "name": "Consulta intervalo 5 y 15 mins",
        "func": "var ms_per_minute = 60000;\n//obtiene el timestamp actual\nvar now_ms = new Date().getTime();\nflow.set('Usuario',msg.payload.chatId)\n//crear objeto con hora de hace 5 mins\nvar oneminago = new Date(now_ms-ms_per_minute);\n\nvar treintaminsago = new Date(now_ms-30*ms_per_minute);\n\n\n// selecciona fecha posterior o igual a 5 mins\nmsg.payload ={\"$and\": [{\"date\": {\"$lte\": oneminago}}, {\"date\": {\"$gte\": treintaminsago}}]}; \nmsg.sort = {\"date\":1} ;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 840,
        "wires": [
            [
                "299cbf47.3f4b7"
            ]
        ]
    },
    {
        "id": "306dba92.a353c6",
        "type": "debug",
        "z": "156707ef.eadb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1270,
        "y": 900,
        "wires": []
    },
    {
        "id": "2a1be692.da76fa",
        "type": "telegram bot",
        "z": "",
        "botname": "UwU87bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "fc5c9554.5f0878",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b1e5fae2.4dc578",
        "type": "mongodb",
        "z": "",
        "hostname": "iot.ac.uma.es",
        "port": "27017",
        "db": "II1",
        "name": ""
    }
]