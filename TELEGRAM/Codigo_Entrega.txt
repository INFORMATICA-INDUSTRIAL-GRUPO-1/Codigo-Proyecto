[
    {
        "id": "4f3a4e93.cc8bf",
        "type": "tab",
        "label": "TELEGRAM",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2513f67d.419fca",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje respuesta temperatura/humedad al usuario",
        "func": "var temp=msg.payload[0].DHT11.temp\nvar hum= msg.payload[0].DHT11.hum\nvar fecha=msg.payload[0].date\nvar temperatura= flow.get('Temperatura');\nvar humedad= flow.get('Humedad')\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nif(temperatura==1 && humedad===0)\n{\n\nmsg.payload.content=\"La temperatura es de \"+temp+\"ºC.\\nEste dato fue obtenido el \"+fecha+\"\\n\";\n}\n\nif(humedad==1 && temperatura===0)\n{\n    \n  msg.payload.content=\"La humedad relativa es del \"+hum+\"%.\\nEste dato fue obtenido el \"+fecha+\"\\n\";\n  \n    \n}\nif(temperatura==1 && humedad==1)\n{\n    \n    msg.payload.content=\"La temperatura es de \"+temp+\"ºC y la humedad relativa es del \"+hum+\"%.\\nEstos datos fueron registrados el \"+fecha+\"\\n\";\n    \n    \n}\n\nflow.set('Humedad',0)\nflow.set('Temperatura',0)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1680,
        "y": 740,
        "wires": [
            [
                "615147c7.3f4cc8"
            ]
        ]
    },
    {
        "id": "407b2387.6f808c",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/Temperatura",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 130,
        "y": 660,
        "wires": [
            [
                "fe7fe597.bbaa08"
            ],
            [
                "34dc505f.37f6b"
            ]
        ]
    },
    {
        "id": "387a1bd1.8d4e54",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/help",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 110,
        "y": 140,
        "wires": [
            [
                "e62f29a0.e22118"
            ],
            []
        ]
    },
    {
        "id": "44648f9.8a52f7",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 770,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "1c0856a7.9b67f9",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/apaga",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 150,
        "y": 4000,
        "wires": [
            [
                "957190e4.ed6e1",
                "e2295ae3.bce7a8"
            ],
            [
                "6e547ab5.3f3374"
            ]
        ]
    },
    {
        "id": "66c79087.fe2c1",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Identifica si llega mensaje de intensidad",
        "func": "//guardo información de telegram\n//monto mensaje para dispositivo\n\nvar intensidad= msg.payload.content\nmsg6={}\nif(flow.get('NumLed')>0 && flow.get('NumLed')<7)\n{\nif(intensidad>0 && intensidad <=100)\n{\n    NumeroLed=flow.get('NumLed');\n    var id = String(new Date().getTime());\n    msg6.telegram=msg.payload;\n    msg1={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\nif(NumeroLed===1){\n    msg1.payload={\"level\":intensidad,\"id\":id};\n    msg1.id=id\n    msg1.orden=true;\n    msg1.telegram=msg6.telegram\n    \n}\nelse if(NumeroLed==2){\n    \n    msg2.payload={\"level\":intensidad,\"id\":id};\n    msg2.id=id;\n    msg2.orden=true;\n    msg2.telegram=msg6.telegram\n    \n}\nelse if(NumeroLed==3){\n    \n    msg3.payload={\"level\":intensidad,\"id\":id};\n    msg3.id=id\n    msg3.orden=true;\n    msg3.telegram=msg6.telegram\n    \n\n}\nelse if(NumeroLed===4){\n    \n    msg4.payload={\"level\":intensidad,\"id\":id};\n    msg4.id=id\n    msg4.orden=true;\n    msg4.telegram=msg6.telegram\n    \n    \n}\n\n\nelse if(NumeroLed==5){\n    \n    msg5.payload={\"level\":intensidad,\"id\":id};\n    msg5.id=id\n    msg5.orden=true;\n    msg5.telegram=msg6.telegram\n    \n\n}\n\n\nelse if(NumeroLed==6){\n    \n    msg5.payload={\"level\":intensidad,\"id\":id};\n    msg5.id=id;\n    msg5.orden=true;\n    msg5.telegram=msg6.telegram\n    msg1=msg5\n    msg2=msg5\n    msg3=msg5\n    msg4=msg5\n    \n\n}\n\n\nreturn[msg1,msg2,msg3,msg4,msg5,msg6]\n}\n}\n\n\n\n",
        "outputs": 5,
        "noerr": 0,
        "x": 440,
        "y": 4200,
        "wires": [
            [
                "843ee7f4.68db78",
                "c37a1e14.9b8ac"
            ],
            [
                "65713d84.f574e4",
                "c37a1e14.9b8ac"
            ],
            [
                "3e54c2de.55ec3e",
                "c37a1e14.9b8ac"
            ],
            [
                "6842463b.c16a28",
                "c37a1e14.9b8ac"
            ],
            [
                "d0a2a3e6.f4956",
                "c37a1e14.9b8ac"
            ]
        ]
    },
    {
        "id": "e2216199.f32df",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "Control del LED PRINCIPAL",
        "info": "",
        "x": 200,
        "y": 3660,
        "wires": []
    },
    {
        "id": "e62f29a0.e22118",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje bienvenida",
        "func": "if(msg.payload.content.substring(0,1)!=\"/\")\n{\n msg.payload.content=\"¡Hola \"+msg.originalMessage.from.first_name+\" soy un bot ejecutado en NodeRED diseñado por el Grupo 1 de  Informática Industrial! Puedo responderte a estos comandos:\\n\";\n msg.payload.content+=\"/led - Te indico los distintos comandos relacionados con el control del estado del LED\\n\";\n msg.payload.content+=\"/Switch - Te indico los distintos comandos relacionados con el control del estado del Switch\\n\";\n msg.payload.content+=\"/Sensores - Te indico los distintos comandos relacionados con los sensores que tenemos disponibles\\n\";\n msg.payload.content+=\"/ListaComandos - Te indico todos los comandos disponibles.\\n\";\n msg.payload.content+=\"/ComandosRobot - Te indico todos los comandos relacionados con el control del robot PIERO\\n\";\n if(global.get(\"TemperaturaMIN\")>-20)\n{\n}\nelse\n{\n global.set(\"TemperaturaMIN\",10)\n global.set(\"TemperaturaMAX\",30)\n global.set(\"HumedadMIN\",30)\n global.set(\"HumedadMAX\",90)\n global.set(\"CambiandoTMIN\",0)\n global.set(\"CambiandoTMAX\",0)\n global.set(\"CambiandoHMIN\",0)\n global.set(\"CambiandoHMAX\",0)\n}\n return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 120,
        "wires": [
            [
                "44648f9.8a52f7"
            ]
        ]
    },
    {
        "id": "ad50e153.1005c",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 2130,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "8d83eb8e.6a89e8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "func": "msg.payload={};\n\nmsg.payload.chatId=-1001354631151;\nmsg.payload.type=\"message\";\nmsg.payload.content=\"El bot publica correctamente\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1890,
        "y": 2580,
        "wires": [
            [
                "ad50e153.1005c"
            ]
        ]
    },
    {
        "id": "b8d52f30.53961",
        "type": "inject",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1660,
        "y": 2580,
        "wires": [
            [
                "8d83eb8e.6a89e8"
            ]
        ]
    },
    {
        "id": "a12e6650.5b88f8",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/Humedad",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 120,
        "y": 840,
        "wires": [
            [
                "fe7fe597.bbaa08"
            ],
            [
                "91c54bd5.1fbe38"
            ]
        ]
    },
    {
        "id": "ec46dcc6.dbae6",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 4740,
        "wires": [
            [
                "c37a1e14.9b8ac",
                "e5509a6d.2837d8",
                "9c2a1d45.c47ee"
            ]
        ]
    },
    {
        "id": "615147c7.3f4cc8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 2070,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "340a86a2.c23e0a",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "CHAT DIFUSIÓN TELEGRAM",
        "info": "",
        "x": 1880,
        "y": 2440,
        "wires": []
    },
    {
        "id": "b06c41a7.bde8d",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/consulta",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 120,
        "y": 740,
        "wires": [
            [
                "fe7fe597.bbaa08"
            ],
            [
                "34dc505f.37f6b",
                "91c54bd5.1fbe38"
            ]
        ]
    },
    {
        "id": "91c54bd5.1fbe38",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Indica Orden Humedad",
        "func": "//Filtro la base de datos y almaceno el chatId\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n}\nflow.set('Usuario',msg.payload.chatId)\nflow.set('ESP',msg.payload.content)\nflow.set('Humedad',1)\nmsg.sort = {\"date\" : -1};\nmsg.limit = 1;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 840,
        "wires": [
            [
                "d11a4fce.6ac05"
            ]
        ]
    },
    {
        "id": "3747d1af.49a98e",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 150,
        "y": 4220,
        "wires": [
            [
                "66c79087.fe2c1"
            ],
            []
        ]
    },
    {
        "id": "ee561c1c.8c2c1",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/Sensores",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 120,
        "y": 200,
        "wires": [
            [
                "ffa6158d.ba2d58"
            ],
            []
        ]
    },
    {
        "id": "ffa6158d.ba2d58",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Sensores info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan informacion sobre los sensores. \\n\";\n msg.payload.content+=\"/Temperatura - te indica el último dato respecto a la temperatura registrada por el DHT-11. ¡Puedes elegir la placa desde la cual realizas la consulta!\\n\";\n msg.payload.content+=\"/AjustarTemperaturaMinima - te permito ajustar la temperatura mínima de aviso registrada por el DHT-11\\n\";\n  msg.payload.content+=\"/AjustarTemperaturaMaxima - te permito ajustar la temperatura máxima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/Humedad    - te indica el último dato respecto a la humedad registrada por el DHT-11. Al igual que en Temperatura... ¡también puedes elegir la placa donde realizar la consulta!\\n\";\n msg.payload.content+=\"/AjustarHumedadMinima   - te permito ajustar la humedad mínima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/AjustarHumedadMaxima   - te permito ajustar la humedad máxima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/consulta   - te indico simultaneamente el último dato registrado por cada sensor. ¡Recuerda especificarme la placa!\\n\";\n msg.payload.content+=\"/ConsultaHistorica - te permito realizar una consulta con respecto a días atrás, donde te informaré sobre distintos aspectos de la humedad y la temperatura registrados en el periodo que me indiques.\\n\"\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 200,
        "wires": [
            [
                "44648f9.8a52f7"
            ]
        ]
    },
    {
        "id": "75aafec9.40543",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/ListaComandos",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 140,
        "y": 260,
        "wires": [
            [
                "9cd6b02e.17663"
            ],
            []
        ]
    },
    {
        "id": "9cd6b02e.17663",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Lista Comandos",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico todos los comandos de los que dispongo... Usa este poder sabiamente. \\n\";\n msg.payload.content+=\"/Sensores - te indico los distintos comandos relacionados con los sensores que tenemos disponibles\\n\";\n msg.payload.content+=\"/Temperatura - te indica el último dato respecto a la temperatura registrada por el DHT-11\\n\";\n msg.payload.content+=\"/AjustarTemperaturaMinima - te permito ajustar la temperatura mínima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/AjustarTemperaturaMaxima - te permito ajustar la temperatura máxima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/Humedad    - te indica el último dato respecto a la humedad registrada por el DHT-11\\n\";\n msg.payload.content+=\"/AjustarHumedadMinima   - te permito ajustar la humedad mínima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/AjustarHumedadMaxima   - te permito ajustar la humedad máxima de aviso registrada por el DHT-11\\n\";\n msg.payload.content+=\"/consulta   - te indico simultaneamente el último dato registrado por cada sensor.\\n\";\n msg.payload.content+=\"/led - te indico los distintos comandos relacionados con el control del estado del LED\\n\";\n msg.payload.content+=\"/Switch - te indico los distintos comandos relacionados con el control del estado del Switch\\n\";\n msg.payload.content+=\"/enciende - enciende el led rojo a la intensidad que me indiques\\n\";\n msg.payload.content+=\"/apaga    - apaga el led rojo\\n\";\n msg.payload.content+=\"/enciendeSwitch - enciende el Switch a maxima intensidad\\n\";\n msg.payload.content+=\"/apagaSwitch    - apaga el Switch\\n\";\n msg.payload.content+=\"/estado   - te indico el último estado del led, indicando 0 que esta apagado, y 100 que esta encendido con maxima luminosidad.\\n\";\n msg.payload.content+=\"/estadoSwitch   - te indico el ultimo estado del Switch\\n\";\n msg.payload.content+=\"/ConsultaHistorica - te permito realizar una consulta con respecto a dias atras, donde te informaré sobre distintos aspectos de la humedad y la temperatura registrados en el periodo que me indiques.\\n\"\n msg.payload.content+=\"/ComandosRobot - te muestro los distintos comandos relacionados con el control del robot en una lista aparte.\\n\";\n\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 260,
        "wires": [
            [
                "44648f9.8a52f7"
            ]
        ]
    },
    {
        "id": "a614d29f.2bbcf",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Control Led",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te ayudan a controlar el estado del led. \\n\";\n msg.payload.content+=\"/enciende - Enciendo el led de la placa que me indiques, ¡a la intensidad que quieras!\\n\";\n msg.payload.content+=\"/apaga    - Apago el led de la placa que me indiques... ¡Incluso puedo apagarlos todos!\\n\";\n msg.payload.content+=\"/estado   - Te indico el último estado del led de la placa que quieras, indicando 0 que esta apagado, y 100 que esta encendido con máxima luminosidad.\\n\";\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 380,
        "wires": [
            [
                "44648f9.8a52f7"
            ]
        ]
    },
    {
        "id": "dd9aedce.d3897",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/led",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 110,
        "y": 380,
        "wires": [
            [
                "a614d29f.2bbcf"
            ],
            []
        ]
    },
    {
        "id": "e105a4d1.1f9098",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1970,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "bafc295a.630ec8",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/ConsultaHistorica",
        "command": "/ConsultaHistorica",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 150,
        "y": 1500,
        "wires": [
            [
                "38952845.5e9638",
                "766b83ff.8b20ac"
            ],
            [
                "4b8175f2.d6e94c"
            ]
        ]
    },
    {
        "id": "38952845.5e9638",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta placa",
        "func": "flow.set('Placa',\"Ninguna\")\nflow.set('Avanza',0)\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['PLACA1','PLACA2'],\n      ['PLACA3'],\n      ['PLACA4','PLACA5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Con respecto a qué placa le gustaría realizar la consulta?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 470,
        "y": 1500,
        "wires": [
            [
                "f022bce4.a7d6c"
            ]
        ]
    },
    {
        "id": "f022bce4.a7d6c",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 760,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "220a7fd6.5913a",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos",
        "func": "// fecha por defecto es hoy\nContinua=flow.get('Avanza')\nhayplaca=flow.get('Placa')\nmensaje=msg.payload.content\nvar placa\nif(mensaje ==\"Ayer\" || mensaje==\"Hoy\" || mensaje==\"Hace dos dias\" || mensaje==\"Hace siete dias\")\n{\nif(Continua==1 && hayplaca!=\"Ninguna\" )\n{\n    if (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\nvar now_ms = new Date().getTime();\nvar ahora = new Date();\nvar ms_per_minute = 60000;\nvar desde2;\n\nif(flow.get('Placa')=='PLACA1')\n{\n  placa=1  \n}\nelse if(flow.get('Placa')=='PLACA2')\n{\n    \n    placa=2\n}\nelse if(flow.get('Placa')=='PLACA3')\n{\n    \n    placa=3\n}\nelse if(flow.get('Placa')=='PLACA4')\n{\n    \n    placa=4\n}\nelse if(flow.get('Placa')=='PLACA5')\n{\n    \n    placa=5\n}\n\n\n    \n    if(msg.payload.content === 'Ayer') {\n        desde2=ahora.getTime()-ms_per_minute*1440; //un dia tiene 1440 minutos\n    }\n    else if(msg.payload.content==='Hoy'){\n        \n        desde2=ahora;\n    }\n    else if(msg.payload.content === 'Hace dos dias')     {\n        desde2=ahora.getTime()-ms_per_minute*1440*2; //un dia tiene 1440 minutos. Dos dias, el doble. \n    }\n    else if(msg.payload.content === 'Hace siete dias')   {\n        desde2=ahora.getTime()-ms_per_minute*1440*7 //numero de min de 1 dia * 7 dias\n    }\n}\n\n\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(desde2);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final },\"ESP_.placa\":placa } },\n    { \"$project\": {\n        \"temperatura\": \"$DHT11.temp\",\n        \"humedad\":\"$DHT11.hum\"\n        }\n    },\n    { \"$group\": {\n        \"_id\": 0,\n        \"Tmedia\":{\"$avg\":\"$temperatura\"},\n        \"Tmax\":  {\"$max\":\"$temperatura\"},\n        \"Tmin\":  {\"$min\":\"$temperatura\"},\n        \"Hmedia\":{\"$avg\":\"$humedad\"},\n        \"Hmax\":  {\"$max\":\"$humedad\"},\n        \"Hmin\":  {\"$min\":\"$humedad\"},\n        \"datos\": {\"$sum\":1}\n    }}\n];\n\nreturn msg;\n\n}\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 1760,
        "wires": [
            [
                "4509307f.68e08",
                "29100608.4331ca"
            ]
        ]
    },
    {
        "id": "35cd42c1.4a47be",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje respuesta agreg",
        "func": "var tmedia=msg.payload[0].Tmedia\nvar tmax= msg.payload[0].Tmax\nvar tmin= msg.payload[0].Tmin\nvar hmedia=msg.payload[0].Hmedia\nvar hmax= msg.payload[0].Hmax\nvar hmin= msg.payload[0].Hmin\nvar datos= msg.payload[0].datos\n\nmsg.payload.chatId=flow.get('Usuario' || 0);\nmsg.payload.type=\"message\";\nmsg.payload.content=\"La temperatura media es de \"+tmedia+\"ºC.\\nLa temperatura máxima fue de \"+tmax+\"ºC y la mínima fue de \"+tmin+\"ºC.\\nRespecto a la humedad, la humedad media es del \"+hmedia+\"%. La humedad máxima fue de \"+hmax+\"% y la humedad mínima fue del \"+hmin+\"%. Se han consultado un total de \"+datos+\" datos.\\n\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1590,
        "y": 1760,
        "wires": [
            [
                "e105a4d1.1f9098"
            ]
        ]
    },
    {
        "id": "766b83ff.8b20ac",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "a6edeb78.1e5ad8",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/start",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "e62f29a0.e22118"
            ],
            []
        ]
    },
    {
        "id": "b1f8420d.507e2",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/ComandosRobot",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 140,
        "y": 320,
        "wires": [
            [
                "86437a12.bbb358"
            ],
            []
        ]
    },
    {
        "id": "957190e4.ed6e1",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado led",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Led1','Led2'],\n      ['Led3','Led4'],\n      ['Led5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué led desea apagar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 380,
        "y": 4000,
        "wires": [
            [
                "e7fa1770.1eb728"
            ]
        ]
    },
    {
        "id": "e7fa1770.1eb728",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 720,
        "y": 3700,
        "wires": [
            []
        ]
    },
    {
        "id": "843ee7f4.68db78",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1190,
        "y": 3820,
        "wires": []
    },
    {
        "id": "6e547ab5.3f3374",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos a la peticion ",
        "func": "msg6={}\n\n\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    msg6.telegram=msg.payload\n    var id = String(new Date().getTime());\n    msg1={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\n    \n    \n    \n    if(msg.payload.content === 'Led1') {\n        \n        msg1.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',1)\n        msg1.orden=true;\n        msg1.id=id\n        msg1.telegram=msg6.telegram\n    }\n    else if(msg.payload.content === 'Led2')     {\n        msg2.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',2)\n        msg2.orden=true;\n        msg2.id=id\n        msg2.telegram=msg6.telegram\n        \n    }\n    else if(msg.payload.content === 'Led3')   {\n        msg3.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',3)\n        msg3.orden=true;\n        msg3.id=id\n        msg3.telegram=msg6.telegram\n    }\n    else if(msg.payload.content === 'Led4')   {\n    \n        msg4.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',4)\n        msg4.orden=true;\n        msg4.id=id\n        msg4.telegram=msg6.telegram\n    }\n    else if(msg.payload.content === 'Led5')   {\n        msg5.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',5)\n        msg5.orden=true;\n        msg5.id=id\n        msg5.telegram=msg6.telegram\n    }\n    else if(msg.payload.content === 'Todos')   {\n        msg5.payload={\"level\":0,\"id\":id};\n        flow.set('NumLed',6)\n        msg5.orden=true;\n        msg5.id=id\n        msg5.telegram=msg6.telegram\n        msg1=msg5\n        msg2=msg5\n        msg3=msg5\n        msg4=msg5\n    }\n    \n    return [msg1,msg2,msg3,msg4,msg5]\n}\n\n\n\n\n\n",
        "outputs": 5,
        "noerr": 0,
        "x": 400,
        "y": 4100,
        "wires": [
            [
                "843ee7f4.68db78",
                "c37a1e14.9b8ac"
            ],
            [
                "65713d84.f574e4",
                "c37a1e14.9b8ac"
            ],
            [
                "3e54c2de.55ec3e",
                "c37a1e14.9b8ac"
            ],
            [
                "6842463b.c16a28",
                "c37a1e14.9b8ac"
            ],
            [
                "d0a2a3e6.f4956",
                "c37a1e14.9b8ac"
            ]
        ]
    },
    {
        "id": "65713d84.f574e4",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1190,
        "y": 3880,
        "wires": []
    },
    {
        "id": "3e54c2de.55ec3e",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1190,
        "y": 3940,
        "wires": []
    },
    {
        "id": "6842463b.c16a28",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1190,
        "y": 4000,
        "wires": []
    },
    {
        "id": "d0a2a3e6.f4956",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/led/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1190,
        "y": 4060,
        "wires": []
    },
    {
        "id": "877c8902.89e3d8",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "CONTROL MOVIMIENTO DEL ROBOT",
        "info": "",
        "x": 2810,
        "y": 40,
        "wires": []
    },
    {
        "id": "e1635cf3.9cd91",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1690,
        "y": 3800,
        "wires": [
            []
        ]
    },
    {
        "id": "93709d59.c8f95",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "_DATOS",
        "operation": "find",
        "x": 1280,
        "y": 740,
        "wires": [
            [
                "2513f67d.419fca",
                "e5fb3686.58b638"
            ]
        ]
    },
    {
        "id": "2d1a7a19.d0e326",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "FUNCIONES PRESENTACIÓN E INTRODUCCIÓN AL USUARIO",
        "info": "",
        "x": 350,
        "y": 20,
        "wires": []
    },
    {
        "id": "b96e0769.8e8f48",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "PARTE RELACIONADAS CON LOS COMANDOS DE LOS SENSORES Y CÓMO HA DE ACTUAR",
        "info": "",
        "x": 420,
        "y": 580,
        "wires": []
    },
    {
        "id": "16648e15.4a8cb2",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 780,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "fe7fe597.bbaa08",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado led",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['ESP1','ESP2'],\n      ['ESP3'],\n      ['ESP4','ESP5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Con respecto a qué ESP querría realizar la consulta?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 460,
        "y": 660,
        "wires": [
            [
                "16648e15.4a8cb2"
            ]
        ]
    },
    {
        "id": "34dc505f.37f6b",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Indica Orden Temperatura/Humedad",
        "func": "//Filtro la base de datos y almaceno el chatId\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n}\nflow.set('Usuario',msg.payload.chatId)\nflow.set('ESP',msg.payload.content)\nflow.set('Temperatura',1)\nmsg.sort = {\"date\" : -1};\nmsg.limit = 1;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 740,
        "wires": [
            [
                "d11a4fce.6ac05",
                "a4dd70a1.6b47f"
            ]
        ]
    },
    {
        "id": "4f70e154.386af",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "Control del SWITCH",
        "info": "",
        "x": 170,
        "y": 2220,
        "wires": []
    },
    {
        "id": "a4e4a1cd.2abd2",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/apagaSwitch",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 150,
        "y": 2640,
        "wires": [
            [
                "3ba3290f.7abdb6"
            ],
            [
                "ae90c911.b54348"
            ]
        ]
    },
    {
        "id": "3ba3290f.7abdb6",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado switch",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Switch1','Switch2'],\n      ['Switch3','Switch4'],\n      ['Switch5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué switch desea apagar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 430,
        "y": 2600,
        "wires": [
            [
                "1d821906.6e3ab7"
            ]
        ]
    },
    {
        "id": "1d821906.6e3ab7",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 720,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "ae90c911.b54348",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos apagar switch",
        "func": "msg6={}\n//if(flow.get('Num')>0 && flow.get('Num')<7)\n//{\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    msg6.telegram=msg.payload\n    msg1={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\n    var id = String(new Date().getTime());\n    if(msg.payload.content === 'Switch1') {\n        \n        flow.set('Num',1)\n        msg1.payload={\"level\":0,\"id\":id};\n        msg1.orden=true\n        msg1.telegram=msg6.telegram\n        msg1.id=id;\n        \n    }\n    else if(msg.payload.content === 'Switch2')     {\n        msg2.payload={\"level\":0,\"id\":id};\n        flow.set('Num',2)\n        msg2.orden=true\n        msg2.telegram=msg6.telegram\n        msg2.id=id;\n    }\n    else if(msg.payload.content === 'Switch3')   {\n        msg3.payload={\"level\":0,\"id\":id};\n        flow.set('Num',3)\n        msg3.orden=true\n        msg3.telegram=msg6.telegram\n        msg3.id=id;\n    }\n    else if(msg.payload.content === 'Switch4')   {\n         msg4.payload={\"level\":0,\"id\":id};\n        flow.set('Num',4)\n        msg4.orden=true\n        msg4.telegram=msg6.telegram\n        msg4.id=id;\n    }\n    else if(msg.payload.content === 'Switch5')   {\n        msg5.payload={\"level\":0,\"id\":id};\n        flow.set('Num',5)\n        msg5.orden=true\n        msg5.telegram=msg6.telegram\n        msg5.id=id;\n    }\n    else if(msg.payload.content === 'Todos')   {\n        msg5.payload={\"level\":0,\"id\":id};\n        flow.set('Num',6)\n        msg5.orden=true\n        msg5.telegram=msg6.telegram\n        msg5.id=id;\n        msg1=msg5\n        msg2=msg5\n        msg3=msg5\n        msg4=msg5;\n    }\n    \n    return [msg1,msg2,msg3,msg4,msg5]\n}\n//}\n\n\n\n\n\n",
        "outputs": 5,
        "noerr": 0,
        "x": 440,
        "y": 2700,
        "wires": [
            [
                "238d868d.21a69a",
                "20b9a102.8d4d5e"
            ],
            [
                "60949eab.1c332",
                "20b9a102.8d4d5e"
            ],
            [
                "488a9817.deb8c8",
                "20b9a102.8d4d5e"
            ],
            [
                "e4d7811f.bc7ca",
                "20b9a102.8d4d5e"
            ],
            [
                "a8f35a.eacf8ca8",
                "20b9a102.8d4d5e"
            ]
        ]
    },
    {
        "id": "60949eab.1c332",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1200,
        "y": 2720,
        "wires": []
    },
    {
        "id": "238d868d.21a69a",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1200,
        "y": 2660,
        "wires": []
    },
    {
        "id": "488a9817.deb8c8",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1200,
        "y": 2780,
        "wires": []
    },
    {
        "id": "e4d7811f.bc7ca",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1200,
        "y": 2840,
        "wires": []
    },
    {
        "id": "a8f35a.eacf8ca8",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/switch/cmd",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 1200,
        "y": 2900,
        "wires": []
    },
    {
        "id": "5d56f3c6.6155dc",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 1710,
        "y": 3000,
        "wires": [
            []
        ]
    },
    {
        "id": "4b8175f2.d6e94c",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos dia pregunta",
        "func": "\nhayplaca=flow.get('Placa')\nif(hayplaca==\"Ninguna\")\n{\nflow.set('Placa',msg.payload.content)\n\n\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Ayer','Hoy'],\n      ['Hace siete dias'],\n      ['Hace dos dias']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Con qué antigüedad desea realizar la consulta?';\nmsg.payload.options = opts;\nflow.set('Avanza',1)\n\nreturn [ msg ];\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 460,
        "y": 1580,
        "wires": [
            [
                "b54067e5.caf578"
            ]
        ]
    },
    {
        "id": "ebf6486b.14bb68",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 110,
        "y": 1760,
        "wires": [
            [
                "220a7fd6.5913a"
            ],
            []
        ]
    },
    {
        "id": "b54067e5.caf578",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 760,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "e2295ae3.bce7a8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 3920,
        "wires": [
            []
        ]
    },
    {
        "id": "f3758657.2b8a08",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/enciendeSwitch",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 160,
        "y": 2940,
        "wires": [
            [
                "e438646.b503298"
            ],
            [
                "a60c03fc.0e212"
            ]
        ]
    },
    {
        "id": "e438646.b503298",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado switch",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Switch1','Switch2'],\n      ['Switch3','Switch4'],\n      ['Switch5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué switch desea encender?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 430,
        "y": 2980,
        "wires": [
            [
                "b1ab771f.6a2c68"
            ]
        ]
    },
    {
        "id": "b1ab771f.6a2c68",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 720,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "81d8468a.ff4e68",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Indica al canal de difusión que se ha encendido/apagado un switch",
        "func": "\n var status=msg.payload.Switch\n if (status===true)\n        {\n            status=\"Encendido\"\n        }\n        if(status===false)\n        {\n            status=\"Apagado\"\n        }\n        var topic=msg.topic\n        var numeroInfoS\n        if(topic==\"infind/GRUPO1/ESP1/switch/status\")\n        {\n            numeroInfoS=1;\n        }\n        else if(topic==\"infind/GRUPO1/ESP2/switch/status\")\n        {\n            \n            numeroInfoS=2;\n        }\n        else if(topic==\"infind/GRUPO1/ESP3/switch/status\")\n        {\n            \n            numeroInfoS=3;\n        }\n        else if(topic==\"infind/GRUPO1/ESP4/switch/status\")\n        {\n            \n            numeroInfoS=4;\n        }\n        else if(topic==\"infind/GRUPO1/ESP5/switch/status\")\n        {\n            \n            numeroInfoS=5;\n        }\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"El estado del Switch\"+numeroInfoS+\" es:\"+status+\" \\n\";\n    return msg;\n        \n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 3140,
        "wires": [
            [
                "5d56f3c6.6155dc"
            ]
        ]
    },
    {
        "id": "866c8437.aee248",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3440,
        "y": 340,
        "wires": []
    },
    {
        "id": "3f77d518.d8243a",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3440,
        "y": 1220,
        "wires": []
    },
    {
        "id": "221a7536.e0d6ba",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3520,
        "y": 1900,
        "wires": []
    },
    {
        "id": "462332b7.57150c",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3400,
        "y": 2680,
        "wires": []
    },
    {
        "id": "62ef540e.4953ac",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/PIERO/Modo",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3500,
        "y": 3400,
        "wires": []
    },
    {
        "id": "8cd95749.82c228",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero1Manual",
        "command": "/Piero1Manual",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2730,
        "y": 160,
        "wires": [
            [
                "37c83603.6cfcda",
                "34e13498.6cf54c"
            ],
            []
        ]
    },
    {
        "id": "37c83603.6cfcda",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir1']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir1 -Salir del modo de conducción manual\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT1','3')\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3090,
        "y": 140,
        "wires": [
            [
                "c24ea6f2.fce5c8"
            ]
        ]
    },
    {
        "id": "c24ea6f2.fce5c8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3800,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "bd7f4692.35d9d8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\n\nmodomanual=flow.get('ROBOT1')\n\nif(modomanual==3)\n{\n\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir1')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        flow.set('ROBOT1',0)\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3030,
        "y": 400,
        "wires": [
            [
                "c441269b.f9df88"
            ]
        ]
    },
    {
        "id": "34e13498.6cf54c",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3020,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c441269b.f9df88",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3460,
        "y": 400,
        "wires": []
    },
    {
        "id": "6d95ee5f.2678d",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Salir1",
        "command": "/Salir1",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2710,
        "y": 460,
        "wires": [
            [
                "ed05c00c.30648",
                "7ee6703e.f6f35"
            ],
            []
        ]
    },
    {
        "id": "ed05c00c.30648",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero1Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3090,
        "y": 540,
        "wires": [
            [
                "8cd96c19.052b"
            ]
        ]
    },
    {
        "id": "8cd96c19.052b",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3380,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "7ee6703e.f6f35",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3020,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d043cc45.290ef",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2710,
        "y": 380,
        "wires": [
            [
                "bd7f4692.35d9d8",
                "8e117deb.64a6f"
            ],
            []
        ]
    },
    {
        "id": "8e117deb.64a6f",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero1Manual\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir1\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero1Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3060,
        "y": 340,
        "wires": [
            [
                "866c8437.aee248"
            ]
        ]
    },
    {
        "id": "c894dbd5.ae1e58",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir1 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3060,
        "y": 260,
        "wires": [
            [
                "60918d76.f076d4"
            ]
        ]
    },
    {
        "id": "8f4e9082.736fa",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero1auto",
        "command": "/Piero1Automatico",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2730,
        "y": 240,
        "wires": [
            [
                "c894dbd5.ae1e58",
                "34e13498.6cf54c"
            ],
            []
        ]
    },
    {
        "id": "60918d76.f076d4",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 3810,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e35a4b64.9b6c58",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/PIERO/Obstaculo",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 2820,
        "y": 740,
        "wires": [
            [
                "84805a0f.133b28"
            ]
        ]
    },
    {
        "id": "84805a0f.133b28",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3070,
        "y": 740,
        "wires": [
            [
                "4a13ec7.f197814"
            ]
        ]
    },
    {
        "id": "4a13ec7.f197814",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Obstáculos",
        "func": "if(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\nelse if(msg.payload.Sensores[\"1\"]=='centro'){\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se han detectado obstáculos por el centro. Evitalos!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n    \n \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3400,
        "y": 740,
        "wires": [
            [
                "60918d76.f076d4"
            ]
        ]
    },
    {
        "id": "6f36ce5.10b723",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/led/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 230,
        "y": 4560,
        "wires": [
            [
                "fd20aa91.e81788"
            ]
        ]
    },
    {
        "id": "6de44599.4c682c",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/led/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 230,
        "y": 4620,
        "wires": [
            [
                "747c1f34.1cb34"
            ]
        ]
    },
    {
        "id": "a4b60a09.81d968",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/led/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 230,
        "y": 4680,
        "wires": [
            [
                "c1ae734d.b0277"
            ]
        ]
    },
    {
        "id": "46d6e25f.fc32ac",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/led/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 230,
        "y": 4740,
        "wires": [
            [
                "ec46dcc6.dbae6"
            ]
        ]
    },
    {
        "id": "5a5f3456.c258cc",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/led/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 230,
        "y": 4800,
        "wires": [
            [
                "749cdfd.0aa7d2"
            ]
        ]
    },
    {
        "id": "4db0ed04.502564",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero2Manual",
        "command": "/Piero2Manual",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2730,
        "y": 940,
        "wires": [
            [
                "ebf3d17d.75aa2",
                "d7b12f99.f09b3"
            ],
            []
        ]
    },
    {
        "id": "ebf3d17d.75aa2",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir2']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir2 -Salir del modo de conducción manual\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT2',3)\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3090,
        "y": 1000,
        "wires": [
            [
                "5fd129f3.c4bbf8"
            ]
        ]
    },
    {
        "id": "5fd129f3.c4bbf8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3820,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "44842de2.089aa4",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\ncosas=flow.get('ROBOT2')\nif(cosas==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir2')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        flow.set('ROBOT2',0)\n        return msg;\n        \n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3050,
        "y": 1280,
        "wires": [
            [
                "d405728e.8c6d4"
            ]
        ]
    },
    {
        "id": "d7b12f99.f09b3",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3020,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "d405728e.8c6d4",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3460,
        "y": 1280,
        "wires": []
    },
    {
        "id": "1aaffe7b.fee972",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Salir2",
        "command": "/Salir2",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2710,
        "y": 1380,
        "wires": [
            [
                "7d08b329.85cc2c",
                "1137399d.f86256"
            ],
            []
        ]
    },
    {
        "id": "7d08b329.85cc2c",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero2Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3110,
        "y": 1440,
        "wires": [
            [
                "a2bb298a.95f2f8"
            ]
        ]
    },
    {
        "id": "a2bb298a.95f2f8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3380,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "1137399d.f86256",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "862e006b.be657",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2710,
        "y": 1220,
        "wires": [
            [
                "44842de2.089aa4",
                "1a7875ef.00cd3a"
            ],
            []
        ]
    },
    {
        "id": "1a7875ef.00cd3a",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero2Manual\" || msg.originalMessage.text==\"/PieroManual@UwU87bot\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir2\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero2Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3080,
        "y": 1220,
        "wires": [
            [
                "3f77d518.d8243a"
            ]
        ]
    },
    {
        "id": "3595c07b.f50cf",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir2 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3060,
        "y": 1100,
        "wires": [
            [
                "b87b5487.9062d8"
            ]
        ]
    },
    {
        "id": "ce4a863a.b14918",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero2auto",
        "command": "/Piero2Automatico",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2730,
        "y": 1100,
        "wires": [
            [
                "3595c07b.f50cf",
                "d7b12f99.f09b3"
            ],
            []
        ]
    },
    {
        "id": "b87b5487.9062d8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 3830,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "e43a4724.332308",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/PIERO/Obstaculo",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 2820,
        "y": 1520,
        "wires": [
            [
                "70721a58.f5dda4"
            ]
        ]
    },
    {
        "id": "70721a58.f5dda4",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3070,
        "y": 1520,
        "wires": [
            [
                "b98a4c5b.cb2be"
            ]
        ]
    },
    {
        "id": "b98a4c5b.cb2be",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Obstáculos",
        "func": "if(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\nelse if(msg.payload.Sensores[\"1\"]=='centro'){\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se han detectado obstáculos por el centro. Evitalos!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n    \n \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3300,
        "y": 1520,
        "wires": [
            [
                "b87b5487.9062d8"
            ]
        ]
    },
    {
        "id": "95cb2c8e.a4175",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero3Manual",
        "command": "/Piero3Manual",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2730,
        "y": 1640,
        "wires": [
            [
                "bc4fbd50.c6fa9",
                "aa8acc73.f6707"
            ],
            []
        ]
    },
    {
        "id": "bc4fbd50.c6fa9",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir3']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir3 -Salir del modo de conducción manual.\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT3',3)\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3170,
        "y": 1720,
        "wires": [
            [
                "2d7daa0a.c4e0c6"
            ]
        ]
    },
    {
        "id": "2d7daa0a.c4e0c6",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3820,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "be27525e.6bf3d",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\nrobot=flow.get('ROBOT3')\nif(robot==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir3')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        flow.set('ROBOT3',0)\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3110,
        "y": 1980,
        "wires": [
            [
                "dee8e994.ac1298"
            ]
        ]
    },
    {
        "id": "aa8acc73.f6707",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3100,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "dee8e994.ac1298",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3540,
        "y": 1980,
        "wires": []
    },
    {
        "id": "38854ff3.ea732",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Salir3",
        "command": "/Salir3",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2710,
        "y": 2060,
        "wires": [
            [
                "cf70f3d0.42b99",
                "5eed92a5.57ed4c"
            ],
            []
        ]
    },
    {
        "id": "cf70f3d0.42b99",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero3Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3170,
        "y": 2140,
        "wires": [
            [
                "c3c60a68.a3d4f8"
            ]
        ]
    },
    {
        "id": "c3c60a68.a3d4f8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3820,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "5eed92a5.57ed4c",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3100,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "3a929750.37ef68",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2710,
        "y": 1960,
        "wires": [
            [
                "be27525e.6bf3d",
                "bd10e03c.d8a12"
            ],
            []
        ]
    },
    {
        "id": "bd10e03c.d8a12",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero3Manual\" || msg.originalMessage.text==\"/PieroManual@UwU87bot\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir3\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero3Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3140,
        "y": 1900,
        "wires": [
            [
                "221a7536.e0d6ba"
            ]
        ]
    },
    {
        "id": "c7404244.aa574",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir3 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3140,
        "y": 1820,
        "wires": [
            [
                "2f00aa1e.23d946"
            ]
        ]
    },
    {
        "id": "e6e9944f.956ea8",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero3auto",
        "command": "/Piero3Automatico",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2730,
        "y": 1820,
        "wires": [
            [
                "c7404244.aa574",
                "aa8acc73.f6707"
            ],
            []
        ]
    },
    {
        "id": "2f00aa1e.23d946",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 3830,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "fb89e464.c5f3a8",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/PIERO/Obstaculo",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 2820,
        "y": 2260,
        "wires": [
            [
                "f60d0a45.124f78"
            ]
        ]
    },
    {
        "id": "f60d0a45.124f78",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3090,
        "y": 2260,
        "wires": [
            [
                "46be6e97.2e4e2"
            ]
        ]
    },
    {
        "id": "46be6e97.2e4e2",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Obstáculos",
        "func": "if(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\nelse if(msg.payload.Sensores[\"1\"]=='centro'){\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se han detectado obstáculos por el centro. Evitalos!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n    \n \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3480,
        "y": 2260,
        "wires": [
            [
                "2f00aa1e.23d946"
            ]
        ]
    },
    {
        "id": "b295723b.29516",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero4Manual",
        "command": "/Piero4Manual",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2730,
        "y": 2460,
        "wires": [
            [
                "845dfc4a.85c8b",
                "a05e200a.30e1a"
            ],
            []
        ]
    },
    {
        "id": "845dfc4a.85c8b",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir4']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir4 -Salir del modo de conducción manual.\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT4',3)\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3070,
        "y": 2560,
        "wires": [
            [
                "c026c7ee.1c7ee8"
            ]
        ]
    },
    {
        "id": "c026c7ee.1c7ee8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3820,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "64902a42.71d7a4",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\nrobot4= flow.get('ROBOT4')\nif(robot4==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir4')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        flow.set('ROBOT4',0)\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3010,
        "y": 2740,
        "wires": [
            [
                "254981c3.ea89fe"
            ]
        ]
    },
    {
        "id": "a05e200a.30e1a",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3000,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "254981c3.ea89fe",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3420,
        "y": 2740,
        "wires": []
    },
    {
        "id": "b7ccc964.412d28",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Salir4",
        "command": "/Salir4",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2710,
        "y": 2820,
        "wires": [
            [
                "53029390.1b4d0c",
                "a5e94432.19b4c8"
            ],
            []
        ]
    },
    {
        "id": "53029390.1b4d0c",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero4Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3060,
        "y": 2900,
        "wires": [
            [
                "ee344616.06a8c8"
            ]
        ]
    },
    {
        "id": "ee344616.06a8c8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3820,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "a5e94432.19b4c8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2990,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "4de6560d.28fd78",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2710,
        "y": 2700,
        "wires": [
            [
                "64902a42.71d7a4",
                "b6b0766b.434378"
            ],
            []
        ]
    },
    {
        "id": "b6b0766b.434378",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero4Manual\" || msg.originalMessage.text==\"/PieroManual@UwU87bot\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir4\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero4Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 2680,
        "wires": [
            [
                "462332b7.57150c"
            ]
        ]
    },
    {
        "id": "3fbf24df.e997fc",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir4 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 2620,
        "wires": [
            [
                "e0c0c654.77e048"
            ]
        ]
    },
    {
        "id": "f553d748.299a18",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero4auto",
        "command": "/Piero4Automatico",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2730,
        "y": 2540,
        "wires": [
            [
                "3fbf24df.e997fc",
                "a05e200a.30e1a"
            ],
            []
        ]
    },
    {
        "id": "e0c0c654.77e048",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 3830,
        "y": 2620,
        "wires": [
            []
        ]
    },
    {
        "id": "bd9e2b.5c4de1d8",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/PIERO/Obstaculo",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 2820,
        "y": 3020,
        "wires": [
            [
                "92b11ee6.05bc2"
            ]
        ]
    },
    {
        "id": "92b11ee6.05bc2",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3050,
        "y": 3020,
        "wires": [
            [
                "9a296210.b12e9"
            ]
        ]
    },
    {
        "id": "9a296210.b12e9",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Obstáculos",
        "func": "if(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\n\nelse if(msg.payload.Sensores[\"1\"]=='centro'){\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se han detectado obstáculos por el centro. Evitalos!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n    \n \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3360,
        "y": 3020,
        "wires": [
            [
                "e0c0c654.77e048"
            ]
        ]
    },
    {
        "id": "c004d1f7.37d63",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero5Manual",
        "command": "/Piero5Manual",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2730,
        "y": 3160,
        "wires": [
            [
                "e87f0a0b.f24328",
                "50911edc.abf16"
            ],
            []
        ]
    },
    {
        "id": "e87f0a0b.f24328",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['W'],\n      ['A','S','D'],\n      ['STOP'],\n      ['/Salir5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : false\n  })\n};\n\nmsg.payload.content = '¡Controle su propio PIERO! Con los siguientes comandos podrá controlar el movimiento de su robot:\\n W - Avanza hacia delante\\n A - Gira hacia la izquierda\\n D - Gira hacia la derecha \\n S - Reduce velocidad \\n Stop - Para el PIERO\\n -/Salir5 -Salir del modo de conducción manual.\\nRecuerde que si quiere mayor velocidad, puede pulsar más de una vez la tecla! ¡Disfrute el control!';\nmsg.payload.options = opts;\nflow.set('ROBOT5',3)\nreturn [ msg ];\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3130,
        "y": 3220,
        "wires": [
            [
                "600e9c91.8a9834"
            ]
        ]
    },
    {
        "id": "600e9c91.8a9834",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3820,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "5d61ddaa.c2bc44",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Robot Movimiento",
        "func": "// fecha por defecto es hoy\nrobot5=flow.get('ROBOT5')\nif(robot5==3)\n{\nif (context.global.keyboard.pending) {\n\n    if(msg.payload.content === 'W') {\n        msg.payload={};\n        msg.payload={\"orden\": 8};\n        return msg;\n\n    }\n    else if(msg.payload.content==='A'){\n        msg.payload={};\n        msg.payload={\"orden\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'S')     {\n        msg.payload={};\n        msg.payload={\"orden\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'D')   {\n        msg.payload={};\n        msg.payload={\"orden\": 6};\n        return msg;\n    }\n    else if(msg.payload.content === 'STOP')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        return msg;\n    }\n    else if(msg.payload.content === '/Salir5')   {\n        msg.payload={};\n        msg.payload={\"orden\": 0};\n        context.global.keyboard.pending = false;\n        return msg;\n\n    }\n}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3080,
        "y": 3480,
        "wires": [
            [
                "b5dd0f70.a5b8c"
            ]
        ]
    },
    {
        "id": "50911edc.abf16",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3060,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "b5dd0f70.a5b8c",
        "type": "mqtt out",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/PIERO/Movimiento",
        "qos": "",
        "retain": "",
        "broker": "b25567ea.2cea98",
        "x": 3520,
        "y": 3480,
        "wires": []
    },
    {
        "id": "1fffddc5.265a42",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Salir5",
        "command": "/Salir5",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2710,
        "y": 3560,
        "wires": [
            [
                "4fcf9a31.140b04",
                "1ad10d10.382453"
            ],
            []
        ]
    },
    {
        "id": "4fcf9a31.140b04",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Creamos pregunta para el keyboard",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Si','/Piero5Manual']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Desea parar?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 3140,
        "y": 3640,
        "wires": [
            [
                "d2b7a305.3ce25"
            ]
        ]
    },
    {
        "id": "d2b7a305.3ce25",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 3820,
        "y": 3640,
        "wires": [
            []
        ]
    },
    {
        "id": "1ad10d10.382453",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3070,
        "y": 3560,
        "wires": [
            []
        ]
    },
    {
        "id": "d2f09235.59bf8",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "uWubot",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 2710,
        "y": 3400,
        "wires": [
            [
                "5d61ddaa.c2bc44",
                "d154b3f8.9121a"
            ],
            []
        ]
    },
    {
        "id": "d154b3f8.9121a",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Modo Funcionamiento Robot",
        "func": "//guardo información de telegram\nmsg.telegram=msg.payload;\n//monto mensaje para dispositivo\nif(msg.originalMessage.text==\"/Piero5Manual\")\n{\n    msg={}\n    msg.payload={\"Modo\":1};\n// información para la función que registra la operación\nmsg.orden=true;\nreturn msg\n}\nelse if(msg.payload.content==\"/Salir5\")\n{\n    msg={}\n    msg.payload={\"Modo\":0};\n    return msg\n}\nelse if(msg.payload.content==\"/Piero5Automatico\")\n{\n    msg={}\n    msg.payload={\"Modo\":2};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3100,
        "y": 3400,
        "wires": [
            [
                "62ef540e.4953ac"
            ]
        ]
    },
    {
        "id": "67c1ff4.aaa78",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "comentario pieroautomatico",
        "func": "msg.payload.type=\"message\";\nmsg.payload.content = 'Has activado el modo automático de PIERO. En este modo, el robot comenzará a moverse automáticamente y a evitar obstáculos. Si quieres salir de este modo, puedes pulsar /Salir5 para salir de este modo.\\n';\nmsg.payload.chatId=flow.get('Usuario' || 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3100,
        "y": 3300,
        "wires": [
            [
                "1f63b203.56572e"
            ]
        ]
    },
    {
        "id": "877dc42.eeb4038",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Piero5auto",
        "command": "/Piero5Automatico",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 2730,
        "y": 3280,
        "wires": [
            [
                "67c1ff4.aaa78",
                "50911edc.abf16"
            ],
            []
        ]
    },
    {
        "id": "1f63b203.56572e",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 3830,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "7dfd9d64.1c84e4",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/PIERO/Obstaculo",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 2820,
        "y": 3800,
        "wires": [
            [
                "85147dcf.8fb37"
            ]
        ]
    },
    {
        "id": "85147dcf.8fb37",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3050,
        "y": 3800,
        "wires": [
            [
                "27c80fbf.1b5e7"
            ]
        ]
    },
    {
        "id": "27c80fbf.1b5e7",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Obstáculos",
        "func": "if(msg.payload.Sensores[\"1\"] == 'izquierda')\n{ \n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la izquierda. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n}\n\nelse if (msg.payload.Sensores[\"1\"] == 'derecha')\n{\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se ha detectado un obstáculo por la derecha. Evitalo!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n}\n\nelse if(msg.payload.Sensores[\"1\"]=='centro'){\n    msg.payload={};\n    msg.payload.chatId=flow.get('Usuario' || 0);\n    msg.payload.content=\"Se han detectado obstáculos por el centro. Evitalos!!!\"\n    msg.payload.type=\"message\"\n    return msg;\n    \n    \n \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3480,
        "y": 3800,
        "wires": [
            [
                "1f63b203.56572e"
            ]
        ]
    },
    {
        "id": "43dc90fa.d1bf1",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robot info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te proporcionan control el robot. \\n\";\n msg.payload.content+=\"/Piero1Manual - te permite controlar el robot 1 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero1Automatico   -Activa el modo de funcionamiento automático del PIERO 1, donde él solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir1    - al activarlo, PIERO 1 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1750,
        "y": 140,
        "wires": [
            [
                "9c3d6659.291c48"
            ]
        ]
    },
    {
        "id": "86437a12.bbb358",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robots info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan control sobre los robots. \\n\";\n msg.payload.content+=\"/Robot1 -te indico los comandos relacionados con el PIERO 1\\n\";\n  msg.payload.content+=\"/Robot2 -te indico los comandos relacionados con el PIERO 2\\n\";\n msg.payload.content+=\"/Robot3 -te indico los comandos relacionados con el PIERO 3\\n\";\n  msg.payload.content+=\"/Robot4 -te indico los comandos relacionados con el PIERO 4\\n\";\n  msg.payload.content+=\"/Robot5 -te indico los comandos relacionados con el PIERO 5\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "44648f9.8a52f7"
            ]
        ]
    },
    {
        "id": "56f1f740.297398",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Robot1",
        "command": "/Robot1",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 1530,
        "y": 140,
        "wires": [
            [
                "43dc90fa.d1bf1"
            ],
            []
        ]
    },
    {
        "id": "f172646d.af9468",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Robot2",
        "command": "/Robot2",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 1530,
        "y": 200,
        "wires": [
            [
                "9fc2d42c.b32f18"
            ],
            []
        ]
    },
    {
        "id": "9b4ed1ff.9fa2f",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Robot3",
        "command": "/Robot3",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 1530,
        "y": 260,
        "wires": [
            [
                "c69ae3d3.3d42"
            ],
            []
        ]
    },
    {
        "id": "a633cb98.786298",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Robot4",
        "command": "/Robot4",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 1530,
        "y": 320,
        "wires": [
            [
                "b0c2f32f.dba67"
            ],
            []
        ]
    },
    {
        "id": "9b8e1a60.156548",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "/Robot5",
        "command": "/Robot5",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 1530,
        "y": 380,
        "wires": [
            [
                "fc9cc83.362a038"
            ],
            []
        ]
    },
    {
        "id": "9fc2d42c.b32f18",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robot info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan control sobre el robot. \\n\";\n msg.payload.content+=\"/Piero2Manual - te permite controlar el robot 2 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero2Automatico   -Activa el modo de funcionamiento automático del PIERO 2, donde él solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir2    - al activarlo, PIERO 2 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1750,
        "y": 200,
        "wires": [
            [
                "9c3d6659.291c48"
            ]
        ]
    },
    {
        "id": "c69ae3d3.3d42",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robot info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan control sobre los robot. \\n\";\n msg.payload.content+=\"/Piero3Manual - te permite controlar el robot 3 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero3Automatico   -Activa el modo de funcionamiento automático del PIERO 3, donde él solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir3    - al activarlo, PIERO 3 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1750,
        "y": 260,
        "wires": [
            [
                "9c3d6659.291c48"
            ]
        ]
    },
    {
        "id": "b0c2f32f.dba67",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robot info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan control sobre el robot. \\n\";\n msg.payload.content+=\"/Piero4Manual - te permite controlar el robot 4 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero4Automatico   -Activa el modo de funcionamiento automático del PIERO 4, donde él solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir4    - al activarlo, PIERO 4 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1750,
        "y": 320,
        "wires": [
            [
                "9c3d6659.291c48"
            ]
        ]
    },
    {
        "id": "fc9cc83.362a038",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Robot info",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico qué comandos te proporcionan control sobre el robot. \\n\";\n msg.payload.content+=\"/Piero5Manual - te permite controlar el robot 5 de forma manual mediante diferentes órdenes\\n\";\n msg.payload.content+=\"/Piero5Automatico   -Activa el modo de funcionamiento automático del PIERO 5, donde él solo se encargará de evitar obstáculos.\\n\";\n msg.payload.content+=\"/Salir5    - al activarlo, PIERO 5 pasa a modo reposo.\\n\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1750,
        "y": 380,
        "wires": [
            [
                "9c3d6659.291c48"
            ]
        ]
    },
    {
        "id": "9c3d6659.291c48",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 2070,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c1ae734d.b0277",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 4680,
        "wires": [
            [
                "c37a1e14.9b8ac",
                "4eed8cc4.e7ba04",
                "9c2a1d45.c47ee"
            ]
        ]
    },
    {
        "id": "747c1f34.1cb34",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 4620,
        "wires": [
            [
                "c37a1e14.9b8ac",
                "b1cd723d.325e3",
                "9c2a1d45.c47ee"
            ]
        ]
    },
    {
        "id": "fd20aa91.e81788",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 4560,
        "wires": [
            [
                "c37a1e14.9b8ac",
                "90a2871e.6ac6a8",
                "9c2a1d45.c47ee"
            ]
        ]
    },
    {
        "id": "749cdfd.0aa7d2",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 4800,
        "wires": [
            [
                "c37a1e14.9b8ac",
                "89715446.0ebcb8",
                "9c2a1d45.c47ee"
            ]
        ]
    },
    {
        "id": "c37a1e14.9b8ac",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Registra orden/espera respuesta",
        "func": "/*\nEsta función recibe dos tipos de mensajes. Cuando se ordena un cambio en el led, \nque se trata en la parte then del if. Y cuando se recibe la confirmación del cambio, \nque se trata en la parte else del if.\nEn el primer caso (then), programamos un timeout de 3 segundos que dará un mensaje \nde error si no se recibe la confirmación. Y guardamos la información necesaria para \nhacer las gestiones posteriores.\nEn el segundo caso (else) se compruena si había una confirmación pendiente, se cancela el \ntemporizador de timeout y se da el mensaje correspondiente.\n\nEsto es un ejemplo de uso de temporizadores y almacenamiento en el contexto de un nodo función.\nTambién se muestra cómo asignar un estado al nodo.\n*/\n\n//Estas funciones son básicamente por si hubiera usuarios simultáneos\nfunction localiza_operacion(lista_operaciones, id)\n{\n    for(var i=0; i<lista_operaciones.length; i++)\n    {\n        if(lista_operaciones[i].id==id) return i;\n    }\n    return -1;\n}\n\nfunction elimina_operacion(lista_operaciones, index)\n{\n    lista_operaciones.splice(index,1);\n    context.set(\"lista_operaciones\",lista_operaciones);\n}\n\n\nif(msg.orden)\n{ // es una orden\n    var id_operacion = msg.id;\n    node.status({fill:\"yellow\", shape:\"ring\", text:\"Wait\"}); // estado del nodo\n    var id_timeout= setTimeout(function(id){    // timeout de 3 segundos\n        // is expira el temporizador, el dispositivo no responde\n        node.warn(\"ATENCION: Operacion \"+id+\" timeout\")\n        node.status({fill:\"red\", shape:\"ring\", text:\"Timeout\"});\n        //busca operación en la lista\n        var lista_operaciones = context.get(\"lista_operaciones\") || [];\n        var index=localiza_operacion(lista_operaciones, id)\n        if(index>=0)\n        {\n            msg.payload=lista_operaciones[index].telegram_info; // restaurar info telegram (chatid)\n            msg.payload.content=\"Error timeout: Se ha producido un error de conexión, verifique el estado del dispositivo (id:\"+id+\")\";\n            elimina_operacion(lista_operaciones, index);\n            node.send(msg); // envía mensaje a telegram\n        }\n        else\n            node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\") \n    }, 10000, id_operacion); \n    //añade operación a la lista\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var nueva_operacion = \n      {\"id\":id_operacion, \"id_timeout\":id_timeout,\"telegram_info\":msg.telegram};\n    lista_operaciones.push(nueva_operacion);\n    context.set(\"lista_operaciones\",lista_operaciones);\n    node.warn(\"Registrada nueva operación \"+id_operacion);\n    msg.payload=msg.telegram;\n    msg.payload.content=\"Se ha enviado la petición (id:\"+id_operacion+\")\";\n    return msg;\n}\nelse\n{ // es una confirmación\n    //busca operación con esta id en la lista\n    var id=msg.payload.id;\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var index=localiza_operacion(lista_operaciones, id)\n    if(index>=0) // orden localizada\n    {\n        clearTimeout(lista_operaciones[index].id_timeout); // cancelo el temporizador\n        var status=msg.payload.led;\n        var topic=msg.topic\n        var numeroInfoLed\n        if(topic==\"infind/GRUPO1/ESP1/led/status\")\n        {\n            numeroInfoLed=1;\n        }\n        else if(topic==\"infind/GRUPO1/ESP2/led/status\")\n        {\n            \n            numeroInfoLed=2;\n        }\n        else if(topic==\"infind/GRUPO1/ESP3/led/status\")\n        {\n            \n            numeroInfoLed=3;\n        }\n        else if(topic==\"infind/GRUPO1/ESP4/led/status\")\n        {\n            \n            numeroInfoLed=4;\n        }\n        else if(topic==\"infind/GRUPO1/ESP5/led/status\")\n        {\n            numeroInfoLed=5;\n            \n        }\n        \n        msg.payload=lista_operaciones[index].telegram_info; // restaura info telegram (chatid)\n        msg.payload.content=\"Se ha procesado correctamente la orden (id:\"+id+\"). El estado del LED\"+numeroInfoLed+\" actual es: \"+status+\" (indicando 0 apagado, 100 máxima intensidad).\";\n        elimina_operacion(lista_operaciones, index)\n        node.warn(\"Procesada respuesta operación \"+id);\n        setTimeout(function(){  // cambio estado del nodo 1.5s después para que se vea el estado anterior\n            node.status({fill:\"green\", shape:\"ring\", text:\"Ok\"});\n        }, 10000);\n        flow.set('NumLed',0)\n        return msg; // enviar mensaje a telegram\n    }\n    else\n        node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\")\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 4120,
        "wires": [
            [
                "e1635cf3.9cd91"
            ]
        ]
    },
    {
        "id": "1449973.e899469",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "FUNCIONES PRESENTACIÓN E INTRODUCCIÓN AL USUARIO QUE INFORMAN SOBRE EL ROBOT",
        "info": "",
        "x": 1830,
        "y": 40,
        "wires": []
    },
    {
        "id": "48e06914.b7be58",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "PARTE RELACIONADA CON EL PIERO 1",
        "info": "",
        "x": 3200,
        "y": 40,
        "wires": []
    },
    {
        "id": "a18bb67e.a741d8",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "PARTE RELACIONADA CON EL PIERO 2",
        "info": "",
        "x": 2820,
        "y": 820,
        "wires": []
    },
    {
        "id": "90a2871e.6ac6a8",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estado1",
        "rules": [
            {
                "t": "set",
                "p": "estado1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 4560,
        "wires": [
            []
        ]
    },
    {
        "id": "b1cd723d.325e3",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estado2",
        "rules": [
            {
                "t": "set",
                "p": "estado2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 4620,
        "wires": [
            []
        ]
    },
    {
        "id": "4eed8cc4.e7ba04",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estado3",
        "rules": [
            {
                "t": "set",
                "p": "estado3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 4680,
        "wires": [
            []
        ]
    },
    {
        "id": "e5509a6d.2837d8",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estado4",
        "rules": [
            {
                "t": "set",
                "p": "estado4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 4740,
        "wires": [
            []
        ]
    },
    {
        "id": "89715446.0ebcb8",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estado5",
        "rules": [
            {
                "t": "set",
                "p": "estado5",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 4800,
        "wires": [
            []
        ]
    },
    {
        "id": "9fdf3f0b.8b5cb",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/estado",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 150,
        "y": 3760,
        "wires": [
            [
                "58980c6b.1a30f4"
            ],
            [
                "7f1e0d00.bd3b84"
            ]
        ]
    },
    {
        "id": "58980c6b.1a30f4",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado pregunta estado",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Led1','Led2'],\n      ['Led3','Led4'],\n      ['Led5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Sobre qué led querría consultar el estado?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 430,
        "y": 3700,
        "wires": [
            [
                "e7fa1770.1eb728"
            ]
        ]
    },
    {
        "id": "7f1e0d00.bd3b84",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos a la petición",
        "func": "\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    var id=msg.payload.chatId\n    var contenido= msg.payload.content\n    if(contenido == \"Led1\") {\n        var estadin1=flow.get(\"estado1\")||{\"led\":\"No disponible\"}\n        msg.payload.content=\"El estado del Led1 actual es:\"+estadin1.led+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Led2\")     {\n        var estadin2=flow.get('estado2')|| {\"led\":\"No disponible\"}\n        msg.payload.content=\"El estado del Led2 actual es:\"+estadin2.led+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n        \n    }\n    else if(contenido == \"Led3\")   {\n       var estadin3=flow.get('estado3')||{\"led\":\"No disponible\"}\n        msg.payload.content=\"El estado del Led3 actual es:\"+estadin3.led+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Led4\")   {\n        var estadin4=flow.get(\"estado4\")||{\"led\":\"No disponible\"}\n        msg.payload.content=\"El estado del Led4 actual es:\"+estadin4.led+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Led5\")   {\n        var estadin5=flow.get('estado5')||{\"led\":\"No disponible\"}\n        msg.payload.content=\"El estado del Led5 actual es:\"+estadin5.led+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n   \n    \n    return msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 3800,
        "wires": [
            [
                "e1635cf3.9cd91"
            ]
        ]
    },
    {
        "id": "20b9a102.8d4d5e",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Registra orden/espera respuesta",
        "func": "/*\nEsta función recibe dos tipos de mensajes. Cuando se ordena un cambio en el led, \nque se trata en la parte then del if. Y cuando se recibe la confirmación del cambio, \nque se trata en la parte else del if.\nEn el primer caso (then), programamos un timeout de 3 segundos que dará un mensaje \nde error si no se recibe la confirmación. Y guardamos la información necesaria para \nhacer las gestiones posteriores.\nEn el segundo caso (else) se compruena si había una confirmación pendiente, se cancela el \ntemporizador de timeout y se da el mensaje correspondiente.\n\nEsto es un ejemplo de uso de temporizadores y almacenamiento en el contexto de un nodo función.\nTambién se muestra cómo asignar un estado al nodo.\n*/\n\n//Estas funciones son básicamente por si hubiera usuarios simultáneos\nfunction localiza_operacion(lista_operaciones, id)\n{\n    for(var i=0; i<lista_operaciones.length; i++)\n    {\n        if(lista_operaciones[i].id==id) return i;\n    }\n    return -1;\n}\n\nfunction elimina_operacion(lista_operaciones, index)\n{\n    lista_operaciones.splice(index,1);\n    context.set(\"lista_operaciones\",lista_operaciones);\n}\n\n\nif(msg.orden)\n{ // es una orden\n    var id_operacion = msg.id;\n    node.status({fill:\"yellow\", shape:\"ring\", text:\"Wait\"}); // estado del nodo\n    var id_timeout= setTimeout(function(id){    // timeout de 3 segundos\n        // is expira el temporizador, el dispositivo no responde\n        node.warn(\"ATENCION: Operacion \"+id+\" timeout\")\n        node.status({fill:\"red\", shape:\"ring\", text:\"Timeout\"});\n        //busca operación en la lista\n        var lista_operaciones = context.get(\"lista_operaciones\") || [];\n        var index=localiza_operacion(lista_operaciones, id)\n        if(index>=0)\n        {\n            msg.payload=lista_operaciones[index].telegram_info; // restaurar info telegram (chatid)\n            msg.payload.content=\"Error timeout: Se ha producido un error de conexión, verifique el estado del dispositivo (id:\"+id+\")\";\n            elimina_operacion(lista_operaciones, index);\n            node.send(msg); // envía mensaje a telegram\n        }\n        else\n            node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\") \n    }, 10000, id_operacion); \n    //añade operación a la lista\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var nueva_operacion = \n      {\"id\":id_operacion, \"id_timeout\":id_timeout,\"telegram_info\":msg.telegram};\n    lista_operaciones.push(nueva_operacion);\n    context.set(\"lista_operaciones\",lista_operaciones);\n    node.warn(\"Registrada nueva operación \"+id_operacion);\n    msg.payload=msg.telegram;\n    msg.payload.content=\"Se ha enviado la petición (id:\"+id_operacion+\")\";\n    return msg;\n}\nelse\n{ // es una confirmación\n    //busca operación con esta id en la lista\n    var id=msg.payload.id;\n    var lista_operaciones = context.get(\"lista_operaciones\") || [];\n    var index=localiza_operacion(lista_operaciones, id)\n    if(index>=0) // orden localizada\n    {\n        clearTimeout(lista_operaciones[index].id_timeout); // cancelo el temporizador\n        var status=msg.payload.Switch\n        if (status===true)\n        {\n            status=\"Encendido\"\n        }\n        if(status===false)\n        {\n            status=\"Apagado\"\n        }\n        var topic=msg.topic\n        var numeroInfoS\n        if(topic==\"infind/GRUPO1/ESP1/switch/status\")\n        {\n            numeroInfoS=1;\n        }\n        else if(topic==\"infind/GRUPO1/ESP2/switch/status\")\n        {\n            \n            numeroInfoS=2;\n        }\n        else if(topic==\"infind/GRUPO1/ESP3/switch/status\")\n        {\n            \n            numeroInfoS=3;\n        }\n        else if(topic==\"infind/GRUPO1/ESP4/switch/status\")\n        {\n            \n            numeroInfoS=4;\n        }\n        else if(topic==\"infind/GRUPO1/ESP5/switch/status\")\n        {\n            \n            numeroInfoS=5;\n        }\n        \n        msg.payload=lista_operaciones[index].telegram_info; // restaura info telegram (chatid)\n        msg.payload.content=\"Se ha procesado correctamente la orden (id:\"+id+\"). El estado del SWITCH\"+numeroInfoS+\" actual es: \"+status+\"\";\n        elimina_operacion(lista_operaciones, index)\n        node.warn(\"Procesada respuesta operación \"+id);\n        setTimeout(function(){  // cambio estado del nodo 1.5s después para que se vea el estado anterior\n            node.status({fill:\"green\", shape:\"ring\", text:\"Ok\"});\n        }, 10000);\n        flow.set('Num',0)\n        return msg; // enviar mensaje a telegram\n    }\n    else\n        node.warn(\"ATENCION: Operacion \"+id+\" no está en la lista\")\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 3000,
        "wires": [
            [
                "5d56f3c6.6155dc"
            ]
        ]
    },
    {
        "id": "451b9af3.85f864",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP1/switch/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 220,
        "y": 3200,
        "wires": [
            [
                "11d74992.f45b56"
            ]
        ]
    },
    {
        "id": "deead72d.fbf238",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP2/switch/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 220,
        "y": 3260,
        "wires": [
            [
                "f8b13d10.9e9aa"
            ]
        ]
    },
    {
        "id": "dfed33a2.d209d",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP3/switch/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 220,
        "y": 3320,
        "wires": [
            [
                "f9391869.4e6248"
            ]
        ]
    },
    {
        "id": "ced7999f.d223a8",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP4/switch/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 220,
        "y": 3380,
        "wires": [
            [
                "16690e30.abee42"
            ]
        ]
    },
    {
        "id": "ad633379.05c0a",
        "type": "mqtt in",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "infind/GRUPO1/ESP5/switch/status",
        "qos": "2",
        "broker": "b25567ea.2cea98",
        "x": 220,
        "y": 3440,
        "wires": [
            [
                "a7235e40.90faf"
            ]
        ]
    },
    {
        "id": "11d74992.f45b56",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 3200,
        "wires": [
            [
                "20b9a102.8d4d5e",
                "17d77482.2c7e1b",
                "81d8468a.ff4e68"
            ]
        ]
    },
    {
        "id": "f8b13d10.9e9aa",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 569,
        "y": 3262,
        "wires": [
            [
                "20b9a102.8d4d5e",
                "19018355.61822d",
                "81d8468a.ff4e68"
            ]
        ]
    },
    {
        "id": "f9391869.4e6248",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 3320,
        "wires": [
            [
                "20b9a102.8d4d5e",
                "23f00023.d18bd",
                "81d8468a.ff4e68"
            ]
        ]
    },
    {
        "id": "16690e30.abee42",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 3380,
        "wires": [
            [
                "20b9a102.8d4d5e",
                "f5b8239e.9dc31",
                "81d8468a.ff4e68"
            ]
        ]
    },
    {
        "id": "a7235e40.90faf",
        "type": "json",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 3440,
        "wires": [
            [
                "20b9a102.8d4d5e",
                "2394a5ec.9645ea",
                "81d8468a.ff4e68"
            ]
        ]
    },
    {
        "id": "17d77482.2c7e1b",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estadoSwitch1",
        "rules": [
            {
                "t": "set",
                "p": "estadoSwitch1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3200,
        "wires": [
            []
        ]
    },
    {
        "id": "19018355.61822d",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estadoSwitch2",
        "rules": [
            {
                "t": "set",
                "p": "estadoSwitch2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3260,
        "wires": [
            []
        ]
    },
    {
        "id": "23f00023.d18bd",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estadoSwitch3",
        "rules": [
            {
                "t": "set",
                "p": "estadoSwitch3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "f5b8239e.9dc31",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estadoSwitch4",
        "rules": [
            {
                "t": "set",
                "p": "estadoSwitch4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3380,
        "wires": [
            []
        ]
    },
    {
        "id": "2394a5ec.9645ea",
        "type": "change",
        "z": "4f3a4e93.cc8bf",
        "name": "guarda estadoSwitch5",
        "rules": [
            {
                "t": "set",
                "p": "estadoSwitch5",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3440,
        "wires": [
            []
        ]
    },
    {
        "id": "8e4b809e.2ff85",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 720,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "98e27a10.6a6e18",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/estadoSwitch",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 150,
        "y": 2420,
        "wires": [
            [
                "76d948c1.6a9928"
            ],
            [
                "2cb78985.ece116"
            ]
        ]
    },
    {
        "id": "76d948c1.6a9928",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado switch",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Switch1','Switch2'],\n      ['Switch3','Switch4'],\n      ['Switch5']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Sobre qué switch querría consultar el estado?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 430,
        "y": 2340,
        "wires": [
            [
                "8e4b809e.2ff85"
            ]
        ]
    },
    {
        "id": "2cb78985.ece116",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos estado Switch",
        "func": "\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    var id=msg.payload.chatId\n    var contenido= msg.payload.content\n    if(contenido == \"Switch1\") {\n        var estadinS1=flow.get(\"estadoSwitch1\")||{\"Switch\":\"No disponible\"}\n        if(estadinS1.Switch===true)\n        {\n            estadinS1.Switch=\"Encendido\"\n        }\n        else if(estadinS1.Switch===false)\n        {\n            estadinS1.Switch=\"Apagado\"\n        }\n        msg.payload.content=\"El estado del Switch1 actual es: \"+estadinS1.Switch+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Switch2\")     {\n        var estadinS2=flow.get(\"estadoSwitch2\")||{\"Switch\":\"No disponible\"}\n         if(estadinS2.Switch===true)\n        {\n            estadinS2.Switch=\"Encendido\"\n        }\n        else if(estadinS2.Switch===false)\n        {\n            estadinS2.Switch=\"Apagado\"\n        }\n        msg.payload.content=\"El estado del Switch2 actual es: \"+estadinS2.Switch+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n        \n    }\n    else if(contenido == \"Switch3\")   {\n       var estadinS3=flow.get(\"estadoSwitch3\")||{\"Switch\":\"No disponible\"}\n        if(estadinS3.Switch===true)\n        {\n            estadinS3.Switch=\"Encendido\"\n        }\n        else if(estadinS3.Switch===false)\n        {\n            estadinS3.Switch=\"Apagado\"\n        }\n        msg.payload.content=\"El estado del Switch3 actual es: \"+estadinS3.Switch+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Switch4\")   {\n        var estadinS4=flow.get(\"estadoSwitch4\")||{\"Switch\":\"No disponible\"}\n         if(estadinS4.Switch===true)\n        {\n            estadinS4.Switch=\"Encendido\"\n        }\n        else if(estadinS4.Switch===false)\n        {\n            estadinS4.Switch=\"Apagado\"\n        }\n        msg.payload.content=\"El estado del Switch4 actual es: \"+estadinS4.Switch+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n    else if(contenido == \"Switch5\")   {\n        var estadinS5=flow.get('estadoSwitch5')||{\"Switch\":\"No disponible\"}\n         if(estadinS5.Switch===true)\n        {\n            estadinS5.Switch=\"Encendido\"\n        }\n        else if(estadinS5.Switch===false)\n        {\n            estadinS5.Switch=\"Apagado\"\n        }\n        msg.payload.content=\"El estado del Switch5 actual es: \"+estadinS5.Switch+\"\";\n        msg.payload.chatId=id;\n        msg.payload.type=\"message\";\n    }\n   \n    \n    return msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 2460,
        "wires": [
            [
                "db253cdc.c56b7"
            ]
        ]
    },
    {
        "id": "db253cdc.c56b7",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 730,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "a60c03fc.0e212",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos encender switch",
        "func": "msg6={}\n//if(flow.get('Num')>0 && flow.get('Num')<7)\n//{\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    msg6.telegram=msg.payload\n    msg1={}\n    msg2={}\n    msg3={}\n    msg4={}\n    msg5={}\n    var id = String(new Date().getTime());\n    if(msg.payload.content === 'Switch1') {\n        \n        flow.set('Num',1)\n        msg1.payload={\"level\":1,\"id\":id};\n        msg1.orden=true\n        msg1.telegram=msg6.telegram\n        msg1.id=id;\n        \n    }\n    else if(msg.payload.content === 'Switch2')     {\n        msg2.payload={\"level\":1,\"id\":id};\n        flow.set('Num',2)\n        msg2.orden=true\n        msg2.telegram=msg6.telegram\n        msg2.id=id;\n    }\n    else if(msg.payload.content === 'Switch3')   {\n        msg3.payload={\"level\":1,\"id\":id};\n        flow.set('Num',3)\n        msg3.orden=true\n        msg3.telegram=msg6.telegram\n        msg3.id=id;\n    }\n    else if(msg.payload.content === 'Switch4')   {\n         msg4.payload={\"level\":1,\"id\":id};\n        flow.set('Num',4)\n        msg4.orden=true\n        msg4.telegram=msg6.telegram\n        msg4.id=id;\n    }\n    else if(msg.payload.content === 'Switch5')   {\n        msg5.payload={\"level\":1,\"id\":id};\n        flow.set('Num',5)\n        msg5.orden=true\n        msg5.telegram=msg6.telegram\n        msg5.id=id;\n    }\n    else if(msg.payload.content === 'Todos')   {\n        msg5.payload={\"level\":1,\"id\":id};\n        flow.set('Num',6)\n        msg5.orden=true\n        msg5.telegram=msg6.telegram\n        msg5.id=id;\n        msg1=msg5\n        msg2=msg5\n        msg3=msg5\n        msg4=msg5;\n    }\n    \n    return [msg1,msg2,msg3,msg4,msg5]\n}\n//}\n\n\n\n\n",
        "outputs": 5,
        "noerr": 0,
        "x": 450,
        "y": 2820,
        "wires": [
            [
                "238d868d.21a69a",
                "20b9a102.8d4d5e"
            ],
            [
                "60949eab.1c332",
                "20b9a102.8d4d5e"
            ],
            [
                "488a9817.deb8c8",
                "20b9a102.8d4d5e"
            ],
            [
                "e4d7811f.bc7ca",
                "20b9a102.8d4d5e"
            ],
            [
                "a8f35a.eacf8ca8",
                "20b9a102.8d4d5e"
            ]
        ]
    },
    {
        "id": "ed9f8027.51958",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/Switch",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": false,
        "useRegex": false,
        "x": 110,
        "y": 440,
        "wires": [
            [
                "d8afc5e2.77ffb8"
            ],
            []
        ]
    },
    {
        "id": "d8afc5e2.77ffb8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Funcion Control Switch",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\". Te indico que comandos te ayudan a controlar el estado del Switch. \\n\";\nmsg.payload.content+=\"/enciendeSwitch - enciende el Switch de la placa que me indiques a máxima intensidad.\\n\";\n msg.payload.content+=\"/apagaSwitch    - apaga el Switch de la placa que me indiques.\\n\";\n msg.payload.content+=\"/estadoSwitch   - te indico el último estado del Switch que me especifiques.\\n\";\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 440,
        "wires": [
            [
                "44648f9.8a52f7"
            ]
        ]
    },
    {
        "id": "6c25e151.3d5d8",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "PARTE RELACIONADA CON EL PIERO 5",
        "info": "",
        "x": 3200,
        "y": 3080,
        "wires": []
    },
    {
        "id": "1b59a85a.8577b8",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "PARTE RELACIONADA CON EL PIERO 3",
        "info": "",
        "x": 3040,
        "y": 1560,
        "wires": []
    },
    {
        "id": "7fed771f.57f388",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "PARTE RELACIONADA CON EL PIERO 4",
        "info": "",
        "x": 2820,
        "y": 2380,
        "wires": []
    },
    {
        "id": "9c2a1d45.c47ee",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Indica al canal de difusión que se ha encendido/apagado un led",
        "func": "\n var status=msg.payload.led;\n        var topic=msg.topic\n        var numeroInfoLed\n        if(topic==\"infind/GRUPO1/ESP1/led/status\")\n        {\n            numeroInfoLed=1;\n        }\n        else if(topic==\"infind/GRUPO1/ESP2/led/status\")\n        {\n            \n            numeroInfoLed=2;\n        }\n        else if(topic==\"infind/GRUPO1/ESP3/led/status\")\n        {\n            \n            numeroInfoLed=3;\n        }\n        else if(topic==\"infind/GRUPO1/ESP4/led/status\")\n        {\n            \n            numeroInfoLed=4;\n        }\n        else if(topic==\"infind/GRUPO1/ESP5/led/status\")\n        {\n            numeroInfoLed=5;\n            \n        }\n    msg.payload.chatId=-1001354631151;\n    msg.payload.type=\"message\";\n    msg.payload.content=\"El estado del Led\"+numeroInfoLed+\" es:\"+status+\",significando 0 que se encuentra apagado y 100 encendido a maxima intensidad. \\n\";\n    return msg;\n        ",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 4400,
        "wires": [
            [
                "e1635cf3.9cd91"
            ]
        ]
    },
    {
        "id": "ffde5256.ae58b",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/enciende",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 160,
        "y": 4340,
        "wires": [
            [
                "85ade336.e8e0a",
                "221310da.1deb8"
            ],
            [
                "bd1ca04b.f9833"
            ]
        ]
    },
    {
        "id": "e144f953.5b7a98",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "Respuesta del dispositivo",
        "info": "",
        "x": 210,
        "y": 4500,
        "wires": []
    },
    {
        "id": "85ade336.e8e0a",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Mostramos teclado led",
        "func": "\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Led1','Led2'],\n      ['Led3','Led4'],\n      ['Led5','Todos']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = '¿Qué led desea encender, indicando la intensidad?';\nmsg.payload.options = opts;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 380,
        "y": 4340,
        "wires": [
            [
                "1d6a40f3.e9673f"
            ]
        ]
    },
    {
        "id": "1d6a40f3.e9673f",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "show keyboard",
        "bot": "2a1be692.da76fa",
        "x": 720,
        "y": 4340,
        "wires": [
            []
        ]
    },
    {
        "id": "bd1ca04b.f9833",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Respondemos",
        "func": "\n\nif (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    if(msg.payload.content === 'Led1') {\n        \n        flow.set('NumLed',1)\n    }\n    else if(msg.payload.content === 'Led2')     {\n        flow.set('NumLed',2)\n    }\n    else if(msg.payload.content === 'Led3')   {\n        flow.set('NumLed',3)\n    }\n    else if(msg.payload.content === 'Led4')   {\n       flow.set('NumLed',4)\n    }\n    else if(msg.payload.content === 'Led5')   {\n        flow.set('NumLed',5)\n    }\n    else if(msg.payload.content === 'Todos')   {\n        flow.set('NumLed',6)\n    }\n    \n    msg.payload.content=\"Responde a este mensaje indicando ahora la intensidad con la que quieres que se encienda el LED, de 0 a 100. Recuerde que si introduce algo distinto a ello, su petición no se realizará.\"\n    \n}\n\nreturn msg\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 4400,
        "wires": [
            [
                "f39068a7.da1fa8"
            ]
        ]
    },
    {
        "id": "f39068a7.da1fa8",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 730,
        "y": 4400,
        "wires": [
            []
        ]
    },
    {
        "id": "221310da.1deb8",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Guarda Usuario",
        "func": "//Filtro la base de datos y almaceno el chatId\nflow.set('Usuario',msg.payload.chatId)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 4280,
        "wires": [
            []
        ]
    },
    {
        "id": "6c630fd8.d499a",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/AjustarTemperaturaMinima",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 180,
        "y": 940,
        "wires": [
            [
                "ced1731e.01f31"
            ],
            []
        ]
    },
    {
        "id": "2c5a3e90.d5be32",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/AjustarTemperaturaMaxima",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 180,
        "y": 1020,
        "wires": [
            [
                "ec81021c.27fcc"
            ],
            []
        ]
    },
    {
        "id": "ced1731e.01f31",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje cambio tmin",
        "func": "msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\":\\n\";\n msg.payload.content+=\"¿A qué temperatura mínima te gustaría que te avisara? Responde a este mensaje indicando un valor entre -10 y 60 para cambiar la temperatura. Recuerda que si sobrepasas esos umbrales, ¡no te los aceptaré!\"\n    global.set(\"CambiandoTMIN\",1)\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 940,
        "wires": [
            [
                "9977b0f3.8b4ce"
            ]
        ]
    },
    {
        "id": "ec81021c.27fcc",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje cambio tmax",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\":\\n\";\n msg.payload.content+=\"¿A qué temperatura máxima te gustaría que te avisara? Responde a este mensaje indicando un valor entre -10 y 60 para cambiar la temperatura. Recuerda que si sobrepasas esos umbrales, ¡no te los aceptaré!\"\n    global.set(\"CambiandoTMAX\",1)\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "9977b0f3.8b4ce"
            ]
        ]
    },
    {
        "id": "2951842.885b87c",
        "type": "telegram receiver",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 150,
        "y": 1140,
        "wires": [
            [
                "7a7f1d29.5c61d4",
                "9ef79fe.d31f36"
            ],
            []
        ]
    },
    {
        "id": "7a7f1d29.5c61d4",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Ajustar cosas temperatura",
        "func": "var cambiartmax=global.get('CambiandoTMAX')\nvar cambiartmin=global.get('CambiandoTMIN')\nvar temperatura=Number(msg.payload.content);\nvar temperaturaMinAct=global.get('TemperaturaMIN')\nvar temperaturaMaxAct=global.get('TemperaturaMAX')\n\nif(temperatura >=-10 && temperatura<=60 &&((global.get('CambiandoTMAX')==1)||(global.get('CambiandoTMIN')==1)))\n{\n    if(global.get('CambiandoTMAX')==1)\n{\n    if(temperatura>temperaturaMinAct)\n    {\n        global.set('TemperaturaMAX',temperatura)\n        msg.payload.content=\"Se ha ajustado la temperatura máxima de aviso a \"+temperatura+\"ºC\";\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n        global.set('CambiandoTMAX',0);\n        cambiartmax=0;\n    }\n    else\n    {\n        \n        msg.payload.content=\"Se ha producido un error, la temperatura máxima introducida es menor que la temperatura mínima.\"\n        global.set('CambiandoTMAX',0)\n        cambiartmax=0;\n    }\n    \n    //return msg;\n}\nif(global.get('CambiandoTMIN')==1)\n{\n    if(temperatura<=temperaturaMaxAct)\n    {\n        global.set('TemperaturaMIN',temperatura)\n        msg.payload.content=\"Se ha ajustado la temperatura mínima de aviso a \"+temperatura+\"ºC\"\n        global.set('CambiandoTMIN',0)\n        cambiartmin=0;\n    }\n    else\n    {\n        msg.payload.content=\"Se ha producido un error, la temperatura mínima introducida es mayor que la temperatura máxima indicada.\"\n        cambiartmin=0;\n    }\n    \n    global.set('CambiandoTMIN',0)\n    \n    \n}\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 1100,
        "wires": [
            [
                "9977b0f3.8b4ce"
            ]
        ]
    },
    {
        "id": "66a0d23d.2f359c",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/AjustarHumedadMinima",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "1e0b5e2e.ee1572"
            ],
            []
        ]
    },
    {
        "id": "6fad98e7.750568",
        "type": "telegram command",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "command": "/AjustarHumedadMaxima",
        "bot": "2a1be692.da76fa",
        "strict": false,
        "hasresponse": true,
        "useRegex": false,
        "x": 170,
        "y": 1320,
        "wires": [
            [
                "e90adb31.6f3f78"
            ],
            []
        ]
    },
    {
        "id": "1e0b5e2e.ee1572",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje cambio hmin",
        "func": "msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\":\\n\";\n msg.payload.content+=\"¿A qué humedad mínima te gustaría que te avisara? Responde a este mensaje indicando un valor entre 0 y 100 para cambiar la humedad. Recuerda que si sobrepasas esos umbrales... ¡no variaré nada!\"\n    global.set(\"CambiandoHMIN\",1)\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 1220,
        "wires": [
            [
                "9977b0f3.8b4ce"
            ]
        ]
    },
    {
        "id": "e90adb31.6f3f78",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "mensaje cambio hmax",
        "func": "\n msg.payload.content=\"Hola \"+msg.originalMessage.from.first_name+\":\\n\";\n msg.payload.content+=\"¿A qué humedad máxima te gustaría que te avisara? Responde a este mensaje indicando un valor entre 0 y 100 para cambiar la humedad. Recuerda que si sobrepasas esos umbrales... ¡no variaré nada!\"\n    global.set(\"CambiandoHMAX\",1)\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 1300,
        "wires": [
            [
                "9977b0f3.8b4ce"
            ]
        ]
    },
    {
        "id": "9ef79fe.d31f36",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Ajustar cosas humedad",
        "func": "\nvar humedad=Number(msg.payload.content);\n\n\n\nif(humedad >=0 && humedad<=100 &&((global.get('CambiandoHMAX')==1)||(global.get('CambiandoHMIN')==1)))\n{\nif(global.get('CambiandoHMAX')==1)\n{\n    if(humedad>global.get('HumedadMIN'))\n    {\n        global.set('HumedadMAX',humedad)\n        msg.payload.content=\"Se ha ajustado la humedad máxima de aviso a \"+humedad+\"%\";\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n        global.set('CambiandoHMAX',0);\n    }\n    else\n    {\n        \n        msg.payload.content=\"Se ha producido un error, la humedad máxima introducida es menor que la humedad mínima.\"\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n        global.set('CambiandoHMAX',0)\n    }\n    \n    \n}\nif(global.get('CambiandoHMIN')==1)\n{\n    if(humedad<=global.get('HumedadMAX'))\n    {\n        global.set('HumedadMIN',humedad)\n        msg.payload.content=\"Se ha ajustado la humedad mínima de aviso a \"+humedad+\"%\"\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n        global.set('CambiandoHMIN',0)\n    }\n    else\n    {\n        msg.payload.content=\"Se ha producido un error, la humedad mínima introducida es mayor que la humedad máxima indicada.\"\n        msg.payload.type=\"message\"\n        msg.payload.chatId=msg.payload.chatId\n    }\n    \n    global.set('CambiandoHMIN',0)\n    \n    \n}\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 1160,
        "wires": [
            [
                "9977b0f3.8b4ce"
            ]
        ]
    },
    {
        "id": "9977b0f3.8b4ce",
        "type": "telegram sender",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "bot": "2a1be692.da76fa",
        "x": 790,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "4e166c6a.1f9be4",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "PARTE DONDE SE CONTROLA EL ESTADO DE LOS LED Y SWITCH",
        "info": "",
        "x": 330,
        "y": 2120,
        "wires": []
    },
    {
        "id": "f8b0506a.cce51",
        "type": "comment",
        "z": "4f3a4e93.cc8bf",
        "name": "Control del LED PRINCIPAL",
        "info": "",
        "x": 1240,
        "y": 4300,
        "wires": []
    },
    {
        "id": "2b73767e.aae48a",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "_DATOS",
        "operation": "find",
        "x": 1080,
        "y": 460,
        "wires": [
            [
                "e5fb3686.58b638"
            ]
        ]
    },
    {
        "id": "8d974b13.510d48",
        "type": "inject",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 760,
        "y": 440,
        "wires": [
            [
                "2b73767e.aae48a"
            ]
        ]
    },
    {
        "id": "e5fb3686.58b638",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1510,
        "y": 480,
        "wires": []
    },
    {
        "id": "d11a4fce.6ac05",
        "type": "function",
        "z": "4f3a4e93.cc8bf",
        "name": "Filtramos la placa que queremos elegir",
        "func": "\n    if(msg.payload.content === 'ESP1') {\n        msg.payload={};\n        msg.payload={\"ESP_.placa\": 1};\n        return msg;\n        \n\n    }\n    else if(msg.payload.content==='ESP2'){\n        msg.payload={};\n        msg.payload={\"ESP_.placa\": 2};\n        return msg;\n    }\n    else if(msg.payload.content === 'ESP3')     {\n        msg.payload={};\n        msg.payload={\"ESP_.placa\": 3};\n        return msg;\n    }\n    else if(msg.payload.content === 'ESP4')   {\n        msg.payload={};\n        msg.payload={\"ESP_.placa\": 4};\n        return msg;\n    }\n    else if(msg.payload.content === 'ESP5')   {\n        msg.payload={};\n        msg.payload={\"ESP_.placa\": 5};\n        return msg;\n    }\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 740,
        "wires": [
            [
                "93709d59.c8f95",
                "a77bea92.2eeb68"
            ]
        ]
    },
    {
        "id": "a4dd70a1.6b47f",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 850,
        "y": 900,
        "wires": []
    },
    {
        "id": "a77bea92.2eeb68",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1250,
        "y": 940,
        "wires": []
    },
    {
        "id": "4509307f.68e08",
        "type": "mongodb in",
        "z": "4f3a4e93.cc8bf",
        "mongodb": "b1e5fae2.4dc578",
        "name": "",
        "collection": "_DATOS",
        "operation": "aggregate",
        "x": 1160,
        "y": 1760,
        "wires": [
            [
                "35cd42c1.4a47be",
                "1e5fec86.f328d3"
            ]
        ]
    },
    {
        "id": "29100608.4331ca",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 1680,
        "wires": []
    },
    {
        "id": "1e5fec86.f328d3",
        "type": "debug",
        "z": "4f3a4e93.cc8bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1450,
        "y": 1620,
        "wires": []
    },
    {
        "id": "2a1be692.da76fa",
        "type": "telegram bot",
        "z": "",
        "botname": "UwU87bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "b25567ea.2cea98",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b1e5fae2.4dc578",
        "type": "mongodb",
        "z": "",
        "hostname": "iot.ac.uma.es",
        "port": "27017",
        "db": "II1",
        "name": ""
    }
]